<svg version="1.1"
    viewBox="-2 -2 751 926"
    xmlns="http://www.w3.org/2000/svg">
    <style>
        .todo {
            --bg: rgba(255, 255, 255, 0.25);
            --fg: rgba(100, 100, 100, 0.5);
        }
        .known {
            --bg: rgba(255, 255, 0, 0.25);
            --fg: rgba(250, 150, 0, 0.85);
        }
        .decompiled {
            --bg: rgba(0, 255, 0, 0.5);
            --fg: rgba(0, 150, 0, 0.85);
        }
        .unused {
            --bg: rgba(255, 0, 0, 0.05);
            --fg: rgba(250, 0, 0, 0.5);
        }
        rect {
            fill: var(--bg);
            stroke: var(--fg);
            stroke-width: 0.5;
        }
        rect.unused {
            fill: url("#unused-cross");
        }
        text {
            alignment-baseline: central;
            font-family: sans-serif;
            font-size: 15px;
            fill: var(--fg, black);
            stroke: none;
        }
        @media (prefers-color-scheme: dark) {
          text {
            fill: var(--fg, white);
          }
        }
        tspan {
            alignment-baseline: central;
            fill: var(--fg, inherit);
        }
    </style>
    <defs>
        <pattern id='unused-cross' x='0' y='0' width='100%' height='100%' viewBox='0 0 12 12' preserveAspectRatio='none'>
            <path d='M0,0L12,12M0,12L12,0' stroke-width='0.5' stroke='red'/>
        </pattern>
    </defs>
<g transform="translate(0 0)">
<text x="0" y="7.50">Legend:</text>
<g transform="translate(0 20)">
<text x="17" y="7.50">Function fully decompiled</text>
<rect width="12" height="12" x="0" y="1.50" class="decompiled"/>
</g>
<g transform="translate(0 38)">
<text x="17" y="7.50">Function not yet decompiled, but with a known signature</text>
<rect width="12" height="12" x="0" y="1.50" class="known"/>
</g>
<g transform="translate(0 56)">
<text x="17" y="7.50">Function not yet decompiled, with an unknown signature</text>
<rect width="12" height="12" x="0" y="1.50" class="todo"/>
</g>
<g transform="translate(0 74)">
<text x="17" y="7.50">Function not used by the game</text>
<rect width="12" height="12" x="0" y="1.50" class="unused"/>
</g>
</g>
<g transform="translate(0 116)">
<text x="0" y="7.50">Tomb2.exe progress according to the physical function order:</text>
<text class="todo" style="font-size: 12px; " x="747" y="9"><tspan text-anchor="end"><tspan class="decompiled">10% (120)</tspan> · <tspan class="known">87.58% (1051)</tspan> · <tspan class="todo">0.67% (8)</tspan> · <tspan class="unused">1.75% (21)</tspan></tspan></text>
<g transform="translate(0 20)">
<rect width="74.70" height="6" x="0" y="0" class="decompiled"/>
<rect width="654.25" height="6" x="74.70" y="0" class="known"/>
<rect width="4.98" height="6" x="728.95" y="0" class="todo"/>
<rect width="13.07" height="6" x="733.93" y="0" class="unused"/>
</g>
<g transform="translate(0 31)">
<rect width="12" height="12" x="0" y="0" class="decompiled"><title>void __cdecl Matrix_GenerateW2V(struct PHD_3DPOS *viewpos);</title></rect>
<rect width="12" height="12" x="15" y="0" class="decompiled"><title>void __cdecl Matrix_LookAt(int32_t xsrc, int32_t ysrc, int32_t zsrc, int32_t xtar, int32_t ytar, int32_t ztar, int16_t roll);</title></rect>
<rect width="12" height="12" x="30" y="0" class="known"><title>void __cdecl Math_GetVectorAngles(int32_t x, int32_t y, int32_t z, int16_t *dest);</title></rect>
<rect width="12" height="12" x="45" y="0" class="decompiled"><title>void __cdecl Matrix_RotX(int16_t rx);</title></rect>
<rect width="12" height="12" x="60" y="0" class="decompiled"><title>void __cdecl Matrix_RotY(int16_t ry);</title></rect>
<rect width="12" height="12" x="75" y="0" class="decompiled"><title>void __cdecl Matrix_RotZ(int16_t rz);</title></rect>
<rect width="12" height="12" x="90" y="0" class="decompiled"><title>void __cdecl Matrix_RotYXZ(int16_t ry, int16_t rx, int16_t rz);</title></rect>
<rect width="12" height="12" x="105" y="0" class="decompiled"><title>void __cdecl Matrix_RotYXZpack(uint32_t rpack);</title></rect>
<rect width="12" height="12" x="120" y="0" class="decompiled"><title>bool __cdecl Matrix_TranslateRel(int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="12" height="12" x="135" y="0" class="known"><title>void __cdecl Matrix_TranslateAbs(int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="12" height="12" x="150" y="0" class="known"><title>void __cdecl Output_InsertPolygons(int16_t *obj_ptr, int32_t clip);</title></rect>
<rect width="12" height="12" x="165" y="0" class="known"><title>void __cdecl Output_InsertRoom(const int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="180" y="0" class="known"><title>int16_t *__cdecl Output_CalcBackgroundLight(const int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="195" y="0" class="known"><title>void __cdecl Output_InsertBackground(int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="210" y="0" class="known"><title>void __cdecl Output_InsertInventoryBackground(int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="225" y="0" class="known"><title>const int16_t *Output_CalcObjectVertices(const int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="240" y="0" class="known"><title>const int16_t *Output_CalcVerticeLight(const int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="255" y="0" class="known"><title>const int16_t *Output_CalcRoomVertices(const int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="270" y="0" class="known"><title>void Output_RotateLight(int16_t pitch, int16_t yaw);</title></rect>
<rect width="12" height="12" x="285" y="0" class="known"><title>void __cdecl Output_InitPolyList(void);</title></rect>
<rect width="12" height="12" x="300" y="0" class="known"><title>void __cdecl Output_SortPolyList(void);</title></rect>
<rect width="12" height="12" x="315" y="0" class="known"><title>void __cdecl Output_QuickSort(int32_t left, int32_t right);</title></rect>
<rect width="12" height="12" x="330" y="0" class="known"><title>void __cdecl Output_PrintPolyList(uint8_t *surface_ptr);</title></rect>
<rect width="12" height="12" x="345" y="0" class="known"><title>void __cdecl Viewport_AlterFOV(int16_t fov);</title></rect>
<rect width="12" height="12" x="360" y="0" class="known"><title>void __cdecl Output_SetNearZ(int32_t near_z);</title></rect>
<rect width="12" height="12" x="375" y="0" class="known"><title>void __cdecl Output_SetFarZ(int32_t far_z);</title></rect>
<rect width="12" height="12" x="390" y="0" class="known"><title>void __cdecl Viewport_Init(int16_t x, int16_t y, int32_t width, int32_t height, int32_t near_z, int32_t far_z, int16_t view_angle, int32_t screen_width, int32_t screen_height);</title></rect>
<rect width="12" height="12" x="405" y="0" class="known"><title>void __cdecl Output_DrawPolyLine(int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="420" y="0" class="known"><title>void __cdecl Output_DrawPolyFlat(int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="435" y="0" class="known"><title>void __cdecl Output_DrawPolyTrans(int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="450" y="0" class="known"><title>void __cdecl Output_DrawPolyGouraud(int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="465" y="0" class="known"><title>void __cdecl Output_DrawPolyGTMap(int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="480" y="0" class="known"><title>void __cdecl Output_DrawPolyWGTMap(int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="495" y="0" class="known"><title>bool __cdecl Output_XGenX(int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="510" y="0" class="known"><title>bool __cdecl Output_XGenXG(int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="525" y="0" class="known"><title>bool __cdecl Output_XGenXGUV(int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="540" y="0" class="known"><title>bool __cdecl Output_XGen_XGUVPerspFP(int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="555" y="0" class="known"><title>void __cdecl Output_GTMap_Persp32FP(int32_t y0, int32_t y1, uint8_t *tex_page);</title></rect>
<rect width="12" height="12" x="570" y="0" class="known"><title>void __cdecl Output_WGTmap_Persp32FP(int32_t y0, int32_t y1, uint8_t *tex_page);</title></rect>
<rect width="12" height="12" x="585" y="0" class="known"><title>void __cdecl Output_DrawPolyGTMapPersp(int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="600" y="0" class="known"><title>void __cdecl Output_DrawPolyWGTMapPersp(int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="615" y="0" class="known"><title>bool __cdecl Output_VisibleZClip(struct PHD_VBUF *vtx0, struct PHD_VBUF *vtx1, struct PHD_VBUF *vtx2);</title></rect>
<rect width="12" height="12" x="630" y="0" class="known"><title>int32_t __cdecl Output_ZedClipper(int32_t vtx_count, struct POINT_INFO *pts, struct VERTEX_INFO *vtx);</title></rect>
<rect width="12" height="12" x="645" y="0" class="known"><title>int32_t __cdecl Output_XYGUVClipper(int32_t vtx_count, struct VERTEX_INFO *vtx);</title></rect>
<rect width="12" height="12" x="660" y="0" class="known"><title>int16_t *__cdecl Output_InsertObjectGT4(int16_t *obj_ptr, int32_t num, enum SORT_TYPE sort_type);</title></rect>
<rect width="12" height="12" x="675" y="0" class="known"><title>int16_t *__cdecl Output_InsertObjectGT3(int16_t *obj_ptr, int32_t num, enum SORT_TYPE sort_type);</title></rect>
<rect width="12" height="12" x="690" y="0" class="known"><title>int32_t __cdecl Output_XYGClipper(int32_t vtx_count, struct VERTEX_INFO *vtx);</title></rect>
<rect width="12" height="12" x="705" y="0" class="known"><title>int16_t *__cdecl Output_InsertObjectG4(int16_t *obj_ptr, int32_t num, enum SORT_TYPE sort_type);</title></rect>
<rect width="12" height="12" x="720" y="0" class="known"><title>int16_t *__cdecl Output_InsertObjectG3(int16_t *obj_ptr, int32_t num, enum SORT_TYPE sort_type);</title></rect>
<rect width="12" height="12" x="735" y="0" class="known"><title>int32_t __cdecl Output_XYClipper(int32_t vtx_count, struct VERTEX_INFO *vtx);</title></rect>
<rect width="12" height="12" x="0" y="15" class="known"><title>void __cdecl Output_InsertTrans8(struct PHD_VBUF *vbuf, int16_t shade);</title></rect>
<rect width="12" height="12" x="15" y="15" class="known"><title>void __cdecl Output_InsertTransQuad(int32_t x, int32_t y, int32_t width, int32_t height, int32_t z);</title></rect>
<rect width="12" height="12" x="30" y="15" class="known"><title>void __cdecl Output_InsertFlatRect(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t z, uint8_t color_idx);</title></rect>
<rect width="12" height="12" x="45" y="15" class="known"><title>void __cdecl Output_InsertLine(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t z, uint8_t color_idx);</title></rect>
<rect width="12" height="12" x="60" y="15" class="known"><title>void __cdecl Output_InsertGT3_ZBuffered(struct PHD_VBUF *vtx0, struct PHD_VBUF *vtx1, struct PHD_VBUF *vtx2, struct PHD_TEXTURE *texture, struct PHD_UV *uv0, struct PHD_UV *uv1, struct PHD_UV *uv2);</title></rect>
<rect width="12" height="12" x="75" y="15" class="known"><title>void __cdecl Output_DrawClippedPoly_Textured(int32_t vtx_count);</title></rect>
<rect width="12" height="12" x="90" y="15" class="known"><title>void __cdecl Output_InsertGT4_ZBuffered(struct PHD_VBUF *vtx0, struct PHD_VBUF *vtx1, struct PHD_VBUF *vtx2, struct PHD_VBUF *vtx3, struct PHD_TEXTURE *texture);</title></rect>
<rect width="12" height="12" x="105" y="15" class="known"><title>int16_t *__cdecl Output_InsertObjectGT4_ZBuffered(int16_t *obj_ptr, int32_t num, enum SORT_TYPE sort_type);</title></rect>
<rect width="12" height="12" x="120" y="15" class="known"><title>int16_t *__cdecl Output_InsertObjectGT3_ZBuffered(int16_t *obj_ptr, int32_t num, enum SORT_TYPE sort_type);</title></rect>
<rect width="12" height="12" x="135" y="15" class="known"><title>int16_t *__cdecl Output_InsertObjectG4_ZBuffered(int16_t *obj_ptr, int32_t num, enum SORT_TYPE sort_type);</title></rect>
<rect width="12" height="12" x="150" y="15" class="known"><title>void __cdecl Output_DrawPoly_Gouraud(int32_t vtx_count, int32_t red, int32_t green, int32_t blue);</title></rect>
<rect width="12" height="12" x="165" y="15" class="known"><title>int16_t *__cdecl Output_InsertObjectG3_ZBuffered(int16_t *obj_ptr, int32_t num, enum SORT_TYPE sort_type);</title></rect>
<rect width="12" height="12" x="180" y="15" class="known"><title>void __cdecl Output_InsertFlatRect_ZBuffered(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t z, uint8_t color_idx);</title></rect>
<rect width="12" height="12" x="195" y="15" class="known"><title>void __cdecl Output_InsertLine_ZBuffered(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t z, uint8_t color_idx);</title></rect>
<rect width="12" height="12" x="210" y="15" class="known"><title>void __cdecl Output_InsertGT3_Sorted(struct PHD_VBUF *vtx0, struct PHD_VBUF *vtx1, struct PHD_VBUF *vtx2, struct PHD_TEXTURE *texture, struct PHD_UV *uv0, struct PHD_UV *uv1, struct PHD_UV *uv2, enum SORT_TYPE sort_type);</title></rect>
<rect width="12" height="12" x="225" y="15" class="known"><title>void __cdecl Output_InsertClippedPoly_Textured(int32_t vtx_count, float z, int16_t poly_type, int16_t tex_page);</title></rect>
<rect width="12" height="12" x="240" y="15" class="known"><title>void __cdecl Output_InsertGT4_Sorted(struct PHD_VBUF *vtx0, struct PHD_VBUF *vtx1, struct PHD_VBUF *vtx2, struct PHD_VBUF *vtx3, struct PHD_TEXTURE *texture, enum SORT_TYPE sort_type);</title></rect>
<rect width="12" height="12" x="255" y="15" class="known"><title>int16_t *__cdecl Output_InsertObjectGT4_Sorted(int16_t *obj_ptr, int32_t num, enum SORT_TYPE sort_type);</title></rect>
<rect width="12" height="12" x="270" y="15" class="known"><title>int16_t *__cdecl Output_InsertObjectGT3_Sorted(int16_t *obj_ptr, int32_t num, enum SORT_TYPE sort_type);</title></rect>
<rect width="12" height="12" x="285" y="15" class="known"><title>int16_t *__cdecl Output_InsertObjectG4_Sorted(int16_t *obj_ptr, int32_t num, enum SORT_TYPE sort_type);</title></rect>
<rect width="12" height="12" x="300" y="15" class="known"><title>void __cdecl Output_InsertPoly_Gouraud(int32_t vtx_count, float z, int32_t red, int32_t green, int32_t blue, int16_t poly_type);</title></rect>
<rect width="12" height="12" x="315" y="15" class="known"><title>int16_t *__cdecl Output_InsertObjectG3_Sorted(int16_t *obj_ptr, int32_t num, enum SORT_TYPE sort_type);</title></rect>
<rect width="12" height="12" x="330" y="15" class="known"><title>void __cdecl Output_InsertSprite_Sorted(int32_t z, int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t sprite_idx, int16_t shade);</title></rect>
<rect width="12" height="12" x="345" y="15" class="known"><title>void __cdecl Output_InsertFlatRect_Sorted(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t z, uint8_t color_idx);</title></rect>
<rect width="12" height="12" x="360" y="15" class="known"><title>void __cdecl Output_InsertLine_Sorted(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t z, uint8_t color_idx);</title></rect>
<rect width="12" height="12" x="375" y="15" class="known"><title>void __cdecl Output_InsertTrans8_Sorted(struct PHD_VBUF *vbuf, int16_t shade);</title></rect>
<rect width="12" height="12" x="390" y="15" class="known"><title>void __cdecl Output_InsertTransQuad_Sorted(int32_t x, int32_t y, int32_t width, int32_t height, int32_t z);</title></rect>
<rect width="12" height="12" x="405" y="15" class="known"><title>void __cdecl Output_InsertSprite(int32_t z, int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t sprite_idx, int16_t shade);</title></rect>
<rect width="12" height="12" x="420" y="15" class="known"><title>void __cdecl Output_DrawSprite(uint32_t flags, int32_t x, int32_t y, int32_t z, int16_t sprite_idx, int16_t shade, int16_t scale);</title></rect>
<rect width="12" height="12" x="435" y="15" class="known"><title>void __cdecl Output_DrawPickup(int32_t sx, int32_t sy, int32_t scale, int16_t sprite_idx, int16_t shade);</title></rect>
<rect width="12" height="12" x="450" y="15" class="known"><title>int16_t *__cdecl Output_InsertRoomSprite(int16_t *obj_ptr, int32_t vtx_count);</title></rect>
<rect width="12" height="12" x="465" y="15" class="known"><title>void __cdecl Output_DrawScreenSprite2D(int32_t sx, int32_t sy, int32_t sz, int32_t scale_h, int32_t scale_v, int16_t sprite_idx, int16_t shade, uint16_t flags);</title></rect>
<rect width="12" height="12" x="480" y="15" class="known"><title>void __cdecl Output_DrawScreenSprite(int32_t sx, int32_t sy, int32_t sz, int32_t scale_h, int32_t scale_v, int16_t sprite_idx, int16_t shade, uint16_t flags);</title></rect>
<rect width="12" height="12" x="495" y="15" class="known"><title>void __cdecl Output_DrawScaledSpriteC(int16_t *obj_ptr);</title></rect>
<rect width="12" height="12" x="510" y="15" class="known"><title>void __cdecl Eagle_Initialise(int16_t item_num);</title></rect>
<rect width="12" height="12" x="525" y="15" class="known"><title>void __cdecl Eagle_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="540" y="15" class="known"><title>void __cdecl Boat_Initialise(int16_t item_num);</title></rect>
<rect width="12" height="12" x="555" y="15" class="known"><title>int32_t __cdecl Boat_CheckGeton(int16_t item_num, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="570" y="15" class="known"><title>void __cdecl Boat_Collision(int16_t item_num, struct ITEM_INFO *lara_item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="585" y="15" class="known"><title>int32_t __cdecl Boat_TestWaterHeight(struct ITEM_INFO *item, int32_t z_off, int32_t x_off, struct PHD_VECTOR *pos);</title></rect>
<rect width="12" height="12" x="600" y="15" class="known"><title>void __cdecl Boat_DoShift(int32_t boat_num);</title></rect>
<rect width="12" height="12" x="615" y="15" class="known"><title>void __cdecl Boat_DoWakeEffect(struct ITEM_INFO *boat);</title></rect>
<rect width="12" height="12" x="630" y="15" class="known"><title>int32_t __cdecl Boat_DoDynamics(int32_t height, int32_t fallspeed, int32_t *y);</title></rect>
<rect width="12" height="12" x="645" y="15" class="known"><title>int32_t __cdecl Boat_Dynamics(int16_t boat_num);</title></rect>
<rect width="12" height="12" x="660" y="15" class="known"><title>int32_t __cdecl Boat_UserControl(struct ITEM_INFO *boat);</title></rect>
<rect width="12" height="12" x="675" y="15" class="known"><title>void __cdecl Boat_Animation(struct ITEM_INFO *boat, int32_t collide);</title></rect>
<rect width="12" height="12" x="690" y="15" class="known"><title>void __cdecl Boat_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="705" y="15" class="known"><title>void __cdecl Gondola_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="720" y="15" class="known"><title>void __cdecl Creature_Initialise(int16_t item_num);</title></rect>
<rect width="12" height="12" x="735" y="15" class="known"><title>int32_t __cdecl Creature_Activate(int16_t item_num);</title></rect>
<rect width="12" height="12" x="0" y="30" class="known"><title>void __cdecl Creature_AIInfo(struct ITEM_INFO *item, struct AI_INFO *info);</title></rect>
<rect width="12" height="12" x="15" y="30" class="known"><title>int32_t __cdecl Box_SearchLOT(struct LOT_INFO *lot, int32_t expansion);</title></rect>
<rect width="12" height="12" x="30" y="30" class="known"><title>int32_t __cdecl Box_UpdateLOT(struct LOT_INFO *lot, int32_t expansion);</title></rect>
<rect width="12" height="12" x="45" y="30" class="known"><title>void __cdecl Box_TargetBox(struct LOT_INFO *lot, int16_t box_num);</title></rect>
<rect width="12" height="12" x="60" y="30" class="known"><title>int32_t __cdecl Box_StalkBox(struct ITEM_INFO *item, struct ITEM_INFO *enemy, int16_t box_num);</title></rect>
<rect width="12" height="12" x="75" y="30" class="known"><title>int32_t __cdecl Box_EscapeBox(struct ITEM_INFO *item, struct ITEM_INFO *enemy, int16_t box_num);</title></rect>
<rect width="12" height="12" x="90" y="30" class="known"><title>int32_t __cdecl Box_ValidBox(struct ITEM_INFO *item, int16_t zone_num, int16_t box_num);</title></rect>
<rect width="12" height="12" x="105" y="30" class="known"><title>void __cdecl CreatureMood(struct ITEM_INFO *item, struct AI_INFO *info, int32_t violent);</title></rect>
<rect width="12" height="12" x="120" y="30" class="known"><title>enum TARGET_TYPE __cdecl Box_CalculateTarget(struct PHD_VECTOR *target, struct ITEM_INFO *item, struct LOT_INFO *lot);</title></rect>
<rect width="12" height="12" x="135" y="30" class="known"><title>int32_t __cdecl Creature_CheckBaddieOverlap(int16_t item_num);</title></rect>
<rect width="12" height="12" x="150" y="30" class="known"><title>int32_t __cdecl Box_BadFloor(int32_t x, int32_t y, int32_t z, int32_t box_height, int32_t next_height, int16_t room_num, struct LOT_INFO *lot);</title></rect>
<rect width="12" height="12" x="165" y="30" class="known"><title>void __cdecl Creature_Die(int16_t item_num, int32_t explode);</title></rect>
<rect width="12" height="12" x="180" y="30" class="known"><title>int32_t __cdecl Creature_Animate(int16_t item_num, int16_t angle, int16_t tilt);</title></rect>
<rect width="12" height="12" x="195" y="30" class="known"><title>int16_t __cdecl Creature_Turn(struct ITEM_INFO *item, int16_t maximum_turn);</title></rect>
<rect width="12" height="12" x="210" y="30" class="known"><title>void __cdecl Creature_Tilt(struct ITEM_INFO *item, int16_t angle);</title></rect>
<rect width="12" height="12" x="225" y="30" class="known"><title>void __cdecl Creature_Head(struct ITEM_INFO *item, int16_t required);</title></rect>
<rect width="12" height="12" x="240" y="30" class="known"><title>void __cdecl Creature_Neck(struct ITEM_INFO *item, int16_t required);</title></rect>
<rect width="12" height="12" x="255" y="30" class="known"><title>void __cdecl Creature_Float(int16_t item_num);</title></rect>
<rect width="12" height="12" x="270" y="30" class="known"><title>void __cdecl Creature_Underwater(struct ITEM_INFO *item, int32_t depth);</title></rect>
<rect width="12" height="12" x="285" y="30" class="known"><title>int16_t __cdecl Creature_Effect(struct ITEM_INFO *item, struct BITE_INFO *bite, int16_t (*spawn)(int32_t x, int32_t y, int32_t z, int16_t speed, int16_t y_rot, int16_t room_num));</title></rect>
<rect width="12" height="12" x="300" y="30" class="known"><title>int32_t __cdecl Creature_Vault(int16_t item_num, int16_t angle, int32_t vault, int32_t shift);</title></rect>
<rect width="12" height="12" x="315" y="30" class="known"><title>void __cdecl Creature_Kill(struct ITEM_INFO *item, int32_t kill_anim, int32_t kill_state, int32_t lara_kill_state);</title></rect>
<rect width="12" height="12" x="330" y="30" class="known"><title>void __cdecl Creature_GetBaddieTarget(int16_t item_num, int32_t goody);</title></rect>
<rect width="12" height="12" x="345" y="30" class="decompiled"><title>void __cdecl Camera_Initialise(void);</title></rect>
<rect width="12" height="12" x="360" y="30" class="decompiled"><title>void __cdecl Camera_Move(const struct GAME_VECTOR *target, int32_t speed);</title></rect>
<rect width="12" height="12" x="375" y="30" class="decompiled"><title>void __cdecl Camera_Clip(int32_t *x, int32_t *y, int32_t *h, int32_t target_x, int32_t target_y, int32_t target_h, int32_t left, int32_t top, int32_t right, int32_t bottom);</title></rect>
<rect width="12" height="12" x="390" y="30" class="decompiled"><title>void __cdecl Camera_Shift(int32_t *x, int32_t *y, int32_t *h, int32_t target_x, int32_t target_y, int32_t target_h, int32_t left, int32_t top, int32_t right, int32_t bottom);</title></rect>
<rect width="12" height="12" x="405" y="30" class="decompiled"><title>const struct FLOOR_INFO __cdecl *Camera_GoodPosition(int32_t x, int32_t y, int32_t z, int16_t room_num);</title></rect>
<rect width="12" height="12" x="420" y="30" class="decompiled"><title>void __cdecl Camera_SmartShift(struct GAME_VECTOR *target, void (*__cdecl shift)(int32_t *x, int32_t *y, int32_t *h, int32_t target_x, int32_t target_y, int32_t target_h, int32_t left, int32_t top, int32_t right, int32_t bottom));</title></rect>
<rect width="12" height="12" x="435" y="30" class="decompiled"><title>void __cdecl Camera_Chase(const struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="450" y="30" class="decompiled"><title>int32_t __cdecl Camera_ShiftClamp(struct GAME_VECTOR *pos, int32_t clamp);</title></rect>
<rect width="12" height="12" x="465" y="30" class="decompiled"><title>void __cdecl Camera_Combat(const struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="480" y="30" class="decompiled"><title>void __cdecl Camera_Look(const struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="495" y="30" class="decompiled"><title>void __cdecl Camera_Fixed(void);</title></rect>
<rect width="12" height="12" x="510" y="30" class="decompiled"><title>void __cdecl Camera_Update(void);</title></rect>
<rect width="12" height="12" x="525" y="30" class="known"><title>void __cdecl Game_SetCutsceneTrack(int32_t track);</title></rect>
<rect width="12" height="12" x="540" y="30" class="known"><title>int32_t __cdecl Game_Cutscene_Start(int32_t level_num);</title></rect>
<rect width="12" height="12" x="555" y="30" class="known"><title>void __cdecl Misc_InitCinematicRooms(void);</title></rect>
<rect width="12" height="12" x="570" y="30" class="known"><title>int32_t __cdecl Game_Cutscene_Control(int32_t nframes);</title></rect>
<rect width="12" height="12" x="585" y="30" class="decompiled"><title>void __cdecl Camera_UpdateCutscene(void);</title></rect>
<rect width="12" height="12" x="600" y="30" class="known"><title>int32_t __cdecl Room_FindByPos(int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="12" height="12" x="615" y="30" class="known"><title>void __cdecl CutscenePlayer_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="630" y="30" class="known"><title>void __cdecl Lara_Control_Cutscene(int16_t item_num);</title></rect>
<rect width="12" height="12" x="645" y="30" class="known"><title>void __cdecl CutscenePlayer1_Initialise(int16_t item_num);</title></rect>
<rect width="12" height="12" x="660" y="30" class="known"><title>void __cdecl CutscenePlayerGen_Initialise(int16_t item_num);</title></rect>
<rect width="12" height="12" x="675" y="30" class="decompiled"><title>void __cdecl Camera_LoadCutsceneFrame(void);</title></rect>
<rect width="12" height="12" x="690" y="30" class="known"><title>void __cdecl Collide_GetCollisionInfo(struct COLL_INFO *coll, int32_t xpos, int32_t ypos, int32_t zpos, int16_t room_num, int32_t obj_height);</title></rect>
<rect width="12" height="12" x="705" y="30" class="known"><title>int32_t __cdecl Room_FindGridShift(int32_t src, int32_t dst);</title></rect>
<rect width="12" height="12" x="720" y="30" class="known"><title>int32_t __cdecl Collide_CollideStaticObjects(struct COLL_INFO *coll, int32_t x, int32_t y, int32_t z, int16_t room_num, int32_t hite);</title></rect>
<rect width="12" height="12" x="735" y="30" class="known"><title>void __cdecl Room_GetNearbyRooms(int32_t x, int32_t y, int32_t z, int32_t r, int32_t h, int16_t room_num);</title></rect>
<rect width="12" height="12" x="0" y="45" class="known"><title>void __cdecl Room_GetNewRoom(int32_t x, int32_t y, int32_t z, int16_t room_num);</title></rect>
<rect width="12" height="12" x="15" y="45" class="known"><title>void __cdecl Item_ShiftCol(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="30" y="45" class="known"><title>void __cdecl Item_UpdateRoom(struct ITEM_INFO *item, int32_t height);</title></rect>
<rect width="12" height="12" x="45" y="45" class="known"><title>int16_t __cdecl Room_GetTiltType(struct FLOOR_INFO *floor, int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="12" height="12" x="60" y="45" class="known"><title>void __cdecl Lara_BaddieCollision(struct ITEM_INFO *lara_item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="75" y="45" class="known"><title>void __cdecl Misc_EffectSpaz(struct ITEM_INFO *lara_item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="90" y="45" class="known"><title>void __cdecl Creature_Collision(int16_t item_num, struct ITEM_INFO *lara_item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="105" y="45" class="known"><title>void __cdecl Object_Collision(int16_t item_num, struct ITEM_INFO *lara_item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="120" y="45" class="known"><title>void __cdecl Door_Collision(int16_t item_num, struct ITEM_INFO *lara_item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="135" y="45" class="known"><title>void __cdecl Object_CollisionTrap(int16_t item_num, struct ITEM_INFO *lara_item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="150" y="45" class="known"><title>void __cdecl Lara_Push(struct ITEM_INFO *item, struct ITEM_INFO *lara_item, struct COLL_INFO *coll, int32_t spaz_on, int32_t big_push);</title></rect>
<rect width="12" height="12" x="165" y="45" class="known"><title>int32_t __cdecl Item_TestBoundsCollide(struct ITEM_INFO *src_item, struct ITEM_INFO *dst_item, int32_t radius);</title></rect>
<rect width="12" height="12" x="180" y="45" class="known"><title>int32_t __cdecl Item_TestPosition(int16_t *bounds, struct ITEM_INFO *src_item, struct ITEM_INFO *dst_item);</title></rect>
<rect width="12" height="12" x="195" y="45" class="known"><title>void __cdecl Item_AlignPosition(struct PHD_VECTOR *vec, struct ITEM_INFO *src_item, struct ITEM_INFO *dst_item);</title></rect>
<rect width="12" height="12" x="210" y="45" class="known"><title>int32_t __cdecl Lara_MovePosition(struct PHD_VECTOR *vec, struct ITEM_INFO *item, struct ITEM_INFO *lara_item);</title></rect>
<rect width="12" height="12" x="225" y="45" class="known"><title>int32_t __cdecl Misc_Move3DPosTo3DPos(struct PHD_3DPOS *src_pos, struct PHD_3DPOS *dest_pos, int32_t velocity, PHD_ANGLE ang_add);</title></rect>
<rect width="12" height="12" x="240" y="45" class="known"><title>int32_t __cdecl Game_Control(int32_t nframes, int32_t demo_mode);</title></rect>
<rect width="12" height="12" x="255" y="45" class="known"><title>void __cdecl Item_Animate(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="270" y="45" class="known"><title>int32_t __cdecl Item_GetAnimChange(struct ITEM_INFO *item, struct ANIM_STRUCT *anim);</title></rect>
<rect width="12" height="12" x="285" y="45" class="known"><title>void __cdecl Item_Translate(struct ITEM_INFO *item, int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="12" height="12" x="300" y="45" class="known"><title>struct FLOOR_INFO __cdecl *Room_GetFloor(int32_t x, int32_t y, int32_t z, int16_t *room_num);</title></rect>
<rect width="12" height="12" x="315" y="45" class="known"><title>int32_t __cdecl Room_GetWaterHeight(int32_t x, int32_t y, int32_t z, int16_t room_num);</title></rect>
<rect width="12" height="12" x="330" y="45" class="known"><title>int32_t __cdecl Room_GetHeight(const struct FLOOR_INFO *floor, int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="12" height="12" x="345" y="45" class="known"><title>void __cdecl Camera_RefreshFromTrigger(int16_t type, int16_t *data);</title></rect>
<rect width="12" height="12" x="360" y="45" class="known"><title>void __cdecl Room_TestTriggers(int16_t *data, int32_t heavy);</title></rect>
<rect width="12" height="12" x="375" y="45" class="known"><title>int32_t __cdecl Item_IsTriggerActive(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="390" y="45" class="known"><title>int32_t __cdecl Room_GetCeiling(const struct FLOOR_INFO *floor, int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="12" height="12" x="405" y="45" class="known"><title>int16_t __cdecl Room_GetDoor(struct FLOOR_INFO *floor);</title></rect>
<rect width="12" height="12" x="420" y="45" class="known"><title>int32_t __cdecl LOS_Check(struct GAME_VECTOR *start, struct GAME_VECTOR *target);</title></rect>
<rect width="12" height="12" x="435" y="45" class="known"><title>int32_t __cdecl LOS_CheckZ(struct GAME_VECTOR *start, struct GAME_VECTOR *target);</title></rect>
<rect width="12" height="12" x="450" y="45" class="known"><title>int32_t __cdecl LOS_CheckX(struct GAME_VECTOR *start, struct GAME_VECTOR *target);</title></rect>
<rect width="12" height="12" x="465" y="45" class="known"><title>int32_t __cdecl LOS_ClipTarget(struct GAME_VECTOR *start, struct GAME_VECTOR *target, FLOOR_INFO *floor);</title></rect>
<rect width="12" height="12" x="480" y="45" class="known"><title>int32_t __cdecl LOS_ObjectOnLOS(struct GAME_VECTOR *start, struct GAME_VECTOR *target);</title></rect>
<rect width="12" height="12" x="495" y="45" class="known"><title>void __cdecl Room_FlipMap(void);</title></rect>
<rect width="12" height="12" x="510" y="45" class="known"><title>void __cdecl Room_RemoveFlipItems(struct ROOM_INFO *r);</title></rect>
<rect width="12" height="12" x="525" y="45" class="known"><title>void __cdecl Room_AddFlipItems(struct ROOM_INFO *r);</title></rect>
<rect width="12" height="12" x="540" y="45" class="known"><title>void __cdecl Control_TriggerMusicTrack(int16_t value, int16_t flags, int16_t type);</title></rect>
<rect width="12" height="12" x="555" y="45" class="known"><title>void __cdecl Control_TriggerMusicNormalTrack(int16_t value, int16_t flags, int16_t type);</title></rect>
<rect width="12" height="12" x="570" y="45" class="known"><title>int32_t __cdecl Demo_Control(int32_t level_num);</title></rect>
<rect width="12" height="12" x="585" y="45" class="known"><title>int32_t __cdecl Demo_Start(int32_t level_num);</title></rect>
<rect width="12" height="12" x="600" y="45" class="known"><title>void __cdecl Demo_LoadLaraPos(void);</title></rect>
<rect width="12" height="12" x="615" y="45" class="known"><title>void __cdecl Demo_GetInput(void);</title></rect>
<rect width="12" height="12" x="630" y="45" class="known"><title>int16_t __cdecl Diver_Harpoon(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE y_rot, int16_t room_num);</title></rect>
<rect width="12" height="12" x="645" y="45" class="known"><title>int32_t __cdecl Diver_GetWaterSurface(int32_t x, int32_t y, int32_t z, int16_t room_num);</title></rect>
<rect width="12" height="12" x="660" y="45" class="known"><title>void __cdecl Diver_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="675" y="45" class="known"><title>void __cdecl Dog_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="690" y="45" class="known"><title>void __cdecl Tiger_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="705" y="45" class="known"><title>void __cdecl ControlTwinkle(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="720" y="45" class="known"><title>void __cdecl CreateBartoliLight(int16_t item_num);</title></rect>
<rect width="12" height="12" x="735" y="45" class="known"><title>int16_t __cdecl DragonFire(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE yrot, int16_t room_num);</title></rect>
<rect width="12" height="12" x="0" y="60" class="known"><title>void __cdecl DragonCollision(int16_t item_num, struct ITEM_INFO *laraitem, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="15" y="60" class="known"><title>void __cdecl DragonBones(int16_t item_num);</title></rect>
<rect width="12" height="12" x="30" y="60" class="known"><title>void __cdecl DragonControl(int16_t back_num);</title></rect>
<rect width="12" height="12" x="45" y="60" class="known"><title>void __cdecl InitialiseBartoli(int16_t item_num);</title></rect>
<rect width="12" height="12" x="60" y="60" class="known"><title>void __cdecl BartoliControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="75" y="60" class="known"><title>void __cdecl DinoControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="90" y="60" class="known"><title>int32_t __cdecl DrawPhaseCinematic(void);</title></rect>
<rect width="12" height="12" x="105" y="60" class="known"><title>int32_t __cdecl DrawPhaseGame(void);</title></rect>
<rect width="12" height="12" x="120" y="60" class="known"><title>void __cdecl DrawRooms(int16_t current_room);</title></rect>
<rect width="12" height="12" x="135" y="60" class="known"><title>void __cdecl GetRoomBounds(void);</title></rect>
<rect width="12" height="12" x="150" y="60" class="known"><title>void __cdecl SetRoomBounds(int16_t *objptr, int32_t room_num, ROOM_INFO *parent);</title></rect>
<rect width="12" height="12" x="165" y="60" class="known"><title>void __cdecl ClipRoom(struct ROOM_INFO *r);</title></rect>
<rect width="12" height="12" x="180" y="60" class="known"><title>void __cdecl PrintRooms(int16_t room_num);</title></rect>
<rect width="12" height="12" x="195" y="60" class="known"><title>void __cdecl PrintObjects(int16_t room_num);</title></rect>
<rect width="12" height="12" x="210" y="60" class="known"><title>void __cdecl DrawEffect(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="225" y="60" class="known"><title>void __cdecl DrawSpriteItem(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="240" y="60" class="known"><title>void __cdecl DrawAnimatingItem(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="255" y="60" class="known"><title>void __cdecl DrawLara(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="270" y="60" class="known"><title>void __cdecl DrawLaraInt(struct ITEM_INFO *item, int16_t *frame1, int16_t *frame2, int32_t frac, int32_t rate);</title></rect>
<rect width="12" height="12" x="285" y="60" class="known"><title>void __cdecl InitInterpolate(int32_t frac, int32_t rate);</title></rect>
<rect width="12" height="12" x="300" y="60" class="known"><title>void __cdecl phd_PopMatrix_I(void);</title></rect>
<rect width="12" height="12" x="315" y="60" class="known"><title>void __cdecl phd_PushMatrix_I(void);</title></rect>
<rect width="12" height="12" x="330" y="60" class="known"><title>void __cdecl phd_RotY_I(int16_t ang);</title></rect>
<rect width="12" height="12" x="345" y="60" class="known"><title>void __cdecl phd_RotX_I(int16_t ang);</title></rect>
<rect width="12" height="12" x="360" y="60" class="known"><title>void __cdecl phd_RotZ_I(int16_t ang);</title></rect>
<rect width="12" height="12" x="375" y="60" class="known"><title>void __cdecl phd_TranslateRel_I(int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="12" height="12" x="390" y="60" class="known"><title>void __cdecl phd_TranslateRel_ID(int32_t x, int32_t y, int32_t z, int32_t x2, int32_t y2, int32_t z2);</title></rect>
<rect width="12" height="12" x="405" y="60" class="known"><title>void __cdecl phd_RotYXZ_I(int16_t y, int16_t x, int16_t z);</title></rect>
<rect width="12" height="12" x="420" y="60" class="known"><title>void __cdecl gar_RotYXZsuperpack_I(int16_t **pprot1, int16_t **pprot2, int32_t skip);</title></rect>
<rect width="12" height="12" x="435" y="60" class="known"><title>void __cdecl gar_RotYXZsuperpack(int16_t **pprot, int32_t skip);</title></rect>
<rect width="12" height="12" x="450" y="60" class="known"><title>void __cdecl phd_PutPolygons_I(int16_t *ptr, int32_t clip);</title></rect>
<rect width="12" height="12" x="465" y="60" class="known"><title>void __cdecl InterpolateMatrix(void);</title></rect>
<rect width="12" height="12" x="480" y="60" class="known"><title>void __cdecl InterpolateArmMatrix(void);</title></rect>
<rect width="12" height="12" x="495" y="60" class="known"><title>void __cdecl DrawGunFlash(int32_t weapon_type, int32_t clip);</title></rect>
<rect width="12" height="12" x="510" y="60" class="known"><title>void __cdecl CalculateObjectLighting(struct ITEM_INFO *item, int16_t *frame);</title></rect>
<rect width="12" height="12" x="525" y="60" class="known"><title>int32_t __cdecl Item_GetFrames(struct ITEM_INFO *item, int16_t *frmptr[], int32_t *rate);</title></rect>
<rect width="12" height="12" x="540" y="60" class="known"><title>int16_t *__cdecl Item_GetBoundsAccurate(const struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="555" y="60" class="known"><title>int16_t *__cdecl GetBestFrame(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="570" y="60" class="known"><title>void __cdecl AddDynamicLight(int32_t x, int32_t y, int32_t z, int32_t intensity, int32_t falloff);</title></rect>
<rect width="12" height="12" x="585" y="60" class="known"><title>void __cdecl BigEelControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="600" y="60" class="known"><title>void __cdecl EelControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="615" y="60" class="known"><title>int32_t __cdecl ItemNearLara(struct PHD_3DPOS *pos, int32_t distance);</title></rect>
<rect width="12" height="12" x="630" y="60" class="known"><title>void __cdecl Sound_Update(void);</title></rect>
<rect width="12" height="12" x="645" y="60" class="known"><title>int16_t __cdecl DoBloodSplat(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE direction, int16_t room_num);</title></rect>
<rect width="12" height="12" x="660" y="60" class="known"><title>void __cdecl DoLotsOfBlood(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE direction, int16_t room_num, int32_t num);</title></rect>
<rect width="12" height="12" x="675" y="60" class="known"><title>void __cdecl ControlBlood1(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="690" y="60" class="known"><title>void __cdecl ControlExplosion1(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="705" y="60" class="known"><title>void __cdecl Richochet(struct GAME_VECTOR *pos);</title></rect>
<rect width="12" height="12" x="720" y="60" class="known"><title>void __cdecl ControlRichochet1(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="735" y="60" class="known"><title>void __cdecl CreateBubble(struct PHD_3DPOS *pos, int16_t room_num);</title></rect>
<rect width="12" height="12" x="0" y="75" class="known"><title>void __cdecl LaraBubbles(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="15" y="75" class="known"><title>void __cdecl ControlBubble1(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="30" y="75" class="known"><title>void __cdecl Splash(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="45" y="75" class="known"><title>void __cdecl ControlSplash1(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="60" y="75" class="known"><title>void __cdecl ControlWaterSprite(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="75" y="75" class="known"><title>void __cdecl ControlHotLiquid(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="90" y="75" class="known"><title>void __cdecl finish_level_effect(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="105" y="75" class="known"><title>void __cdecl turn180_effect(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="120" y="75" class="known"><title>void __cdecl floor_shake_effect(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="135" y="75" class="known"><title>void __cdecl lara_normal_effect(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="150" y="75" class="known"><title>void __cdecl BoilerFX(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="165" y="75" class="known"><title>void __cdecl FloodFX(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="180" y="75" class="known"><title>void __cdecl RubbleFX(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="195" y="75" class="known"><title>void __cdecl ChandelierFX(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="210" y="75" class="known"><title>void __cdecl ExplosionFX(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="225" y="75" class="known"><title>void __cdecl PistonFX(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="240" y="75" class="known"><title>void __cdecl CurtainFX(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="255" y="75" class="known"><title>void __cdecl StatueFX(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="270" y="75" class="known"><title>void __cdecl SetChangeFX(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="285" y="75" class="known"><title>void __cdecl ControlAlarmSound(int16_t item_num);</title></rect>
<rect width="12" height="12" x="300" y="75" class="known"><title>void __cdecl ControlBirdTweeter(int16_t item_num);</title></rect>
<rect width="12" height="12" x="315" y="75" class="known"><title>void __cdecl DoChimeSound(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="330" y="75" class="known"><title>void __cdecl ControlClockChimes(int16_t item_num);</title></rect>
<rect width="12" height="12" x="345" y="75" class="known"><title>void __cdecl SphereOfDoomCollision(int16_t item_num, struct ITEM_INFO *laraitem, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="360" y="75" class="known"><title>void __cdecl SphereOfDoom(int16_t item_num);</title></rect>
<rect width="12" height="12" x="375" y="75" class="known"><title>void __cdecl DrawSphereOfDoom(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="390" y="75" class="known"><title>void __cdecl lara_hands_free(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="405" y="75" class="known"><title>void __cdecl flip_map_effect(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="420" y="75" class="known"><title>void __cdecl draw_right_gun(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="435" y="75" class="known"><title>void __cdecl draw_left_gun(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="450" y="75" class="known"><title>void __cdecl swap_meshes_with_meshswap1(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="465" y="75" class="known"><title>void __cdecl swap_meshes_with_meshswap2(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="480" y="75" class="known"><title>void __cdecl swap_meshes_with_meshswap3(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="495" y="75" class="known"><title>void __cdecl invisibility_on(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="510" y="75" class="known"><title>void __cdecl invisibility_off(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="525" y="75" class="known"><title>void __cdecl dynamic_light_on(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="540" y="75" class="known"><title>void __cdecl dynamic_light_off(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="555" y="75" class="known"><title>void __cdecl reset_hair(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="570" y="75" class="known"><title>void __cdecl AssaultStart(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="585" y="75" class="known"><title>void __cdecl AssaultStop(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="600" y="75" class="known"><title>void __cdecl AssaultReset(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="615" y="75" class="known"><title>void __cdecl AssaultFinished(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="630" y="75" class="known"><title>int16_t __cdecl Knife(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE yrot, int16_t room_num);</title></rect>
<rect width="12" height="12" x="645" y="75" class="known"><title>void __cdecl Cult2Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="660" y="75" class="known"><title>void __cdecl MonkControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="675" y="75" class="known"><title>void __cdecl Worker3Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="690" y="75" class="known"><title>void __cdecl DrawXianLord(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="705" y="75" class="known"><title>void __cdecl XianDamage(struct ITEM_INFO *item, CREATURE_INFO *xian, int32_t damage);</title></rect>
<rect width="12" height="12" x="720" y="75" class="known"><title>void __cdecl InitialiseXianLord(int16_t item_num);</title></rect>
<rect width="12" height="12" x="735" y="75" class="known"><title>void __cdecl XianLordControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="0" y="90" class="known"><title>void __cdecl WarriorSparkleTrail(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="15" y="90" class="known"><title>void __cdecl WarriorControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="30" y="90" class="known"><title>int32_t __cdecl GF_LoadScriptFile(char *fname);</title></rect>
<rect width="12" height="12" x="45" y="90" class="known"><title>int32_t __cdecl GF_DoFrontEndSequence(void);</title></rect>
<rect width="12" height="12" x="60" y="90" class="known"><title>int32_t __cdecl GF_DoLevelSequence(int32_t level, int32_t type);</title></rect>
<rect width="12" height="12" x="75" y="90" class="known"><title>int32_t __cdecl GF_InterpretSequence(int16_t *ptr, int32_t type, int32_t seq_type);</title></rect>
<rect width="12" height="12" x="90" y="90" class="known"><title>void __cdecl GF_ModifyInventory(int32_t level, int32_t type);</title></rect>
<rect width="12" height="12" x="105" y="90" class="known"><title>void __cdecl InitialiseHair(void);</title></rect>
<rect width="12" height="12" x="120" y="90" class="known"><title>void __cdecl HairControl(int32_t in_cutscene);</title></rect>
<rect width="12" height="12" x="135" y="90" class="known"><title>void __cdecl DrawHair(void);</title></rect>
<rect width="12" height="12" x="150" y="90" class="known"><title>int32_t __cdecl FlashIt(void);</title></rect>
<rect width="12" height="12" x="165" y="90" class="known"><title>void __cdecl DrawAssaultTimer(void);</title></rect>
<rect width="12" height="12" x="180" y="90" class="known"><title>void __cdecl DrawGameInfo(int32_t timed);</title></rect>
<rect width="12" height="12" x="195" y="90" class="known"><title>void __cdecl DrawHealthBar(int32_t flash_state);</title></rect>
<rect width="12" height="12" x="210" y="90" class="known"><title>void __cdecl DrawAirBar(int32_t flash_state);</title></rect>
<rect width="12" height="12" x="225" y="90" class="known"><title>void __cdecl MakeAmmoString(char *string);</title></rect>
<rect width="12" height="12" x="240" y="90" class="known"><title>void __cdecl DrawAmmoInfo(void);</title></rect>
<rect width="12" height="12" x="255" y="90" class="known"><title>void __cdecl InitialisePickUpDisplay(void);</title></rect>
<rect width="12" height="12" x="270" y="90" class="known"><title>void __cdecl DrawPickups(int32_t timed);</title></rect>
<rect width="12" height="12" x="285" y="90" class="known"><title>void __cdecl AddDisplayPickup(int16_t obj_num);</title></rect>
<rect width="12" height="12" x="300" y="90" class="known"><title>void __cdecl DisplayModeInfo(char* string);</title></rect>
<rect width="12" height="12" x="315" y="90" class="known"><title>void __cdecl DrawModeInfo(void);</title></rect>
<rect width="12" height="12" x="330" y="90" class="known"><title>int32_t __cdecl Display_Inventory(int32_t inventory_mode);</title></rect>
<rect width="12" height="12" x="345" y="90" class="known"><title>void __cdecl Construct_Inventory(void);</title></rect>
<rect width="12" height="12" x="360" y="90" class="known"><title>void __cdecl SelectMeshes(struct INVENTORY_ITEM *inv_item);</title></rect>
<rect width="12" height="12" x="375" y="90" class="known"><title>int32_t __cdecl AnimateInventoryItem(struct INVENTORY_ITEM *inv_item);</title></rect>
<rect width="12" height="12" x="390" y="90" class="known"><title>void __cdecl DrawInventoryItem(struct INVENTORY_ITEM *inv_item);</title></rect>
<rect width="12" height="12" x="405" y="90" class="known"><title>int32_t __cdecl GetDebouncedInput(int32_t input);</title></rect>
<rect width="12" height="12" x="420" y="90" class="known"><title>void __cdecl DoInventoryPicture(void);</title></rect>
<rect width="12" height="12" x="435" y="90" class="known"><title>void __cdecl DoInventoryBackground(void);</title></rect>
<rect width="12" height="12" x="450" y="90" class="known"><title>void __cdecl InitColours(void);</title></rect>
<rect width="12" height="12" x="465" y="90" class="known"><title>void __cdecl RingIsOpen(struct RING_INFO *ring);</title></rect>
<rect width="12" height="12" x="480" y="90" class="known"><title>void __cdecl RingIsNotOpen(struct RING_INFO *ring);</title></rect>
<rect width="12" height="12" x="495" y="90" class="known"><title>void __cdecl RingNotActive(struct INVENTORY_ITEM *inv_item);</title></rect>
<rect width="12" height="12" x="510" y="90" class="known"><title>void __cdecl RingActive(void);</title></rect>
<rect width="12" height="12" x="525" y="90" class="known"><title>int32_t __cdecl Inv_AddItem(int32_t itemNum);</title></rect>
<rect width="12" height="12" x="540" y="90" class="known"><title>void __cdecl Inv_InsertItem(struct INVENTORY_ITEM *inv_item);</title></rect>
<rect width="12" height="12" x="555" y="90" class="known"><title>int32_t __cdecl Inv_RequestItem(int32_t itemNum);</title></rect>
<rect width="12" height="12" x="570" y="90" class="known"><title>void __cdecl Inv_RemoveAllItems(void);</title></rect>
<rect width="12" height="12" x="585" y="90" class="known"><title>int32_t __cdecl Inv_RemoveItem(int32_t itemNum);</title></rect>
<rect width="12" height="12" x="600" y="90" class="known"><title>int32_t __cdecl Inv_GetItemOption(int32_t itemNum);</title></rect>
<rect width="12" height="12" x="615" y="90" class="known"><title>void __cdecl RemoveInventoryText(void);</title></rect>
<rect width="12" height="12" x="630" y="90" class="known"><title>void __cdecl Inv_RingInit(struct RING_INFO *ring, int16_t type, struct INVENTORY_ITEM **list, int16_t qty, int16_t current, struct IMOTION_INFO *imo);</title></rect>
<rect width="12" height="12" x="645" y="90" class="known"><title>void __cdecl Inv_RingGetView(struct RING_INFO *ring, struct PHD_3DPOS *viewer);</title></rect>
<rect width="12" height="12" x="660" y="90" class="known"><title>void __cdecl Inv_RingLight(struct RING_INFO *ring);</title></rect>
<rect width="12" height="12" x="675" y="90" class="known"><title>void __cdecl Inv_RingCalcAdders(struct RING_INFO *ring, int16_t rotation_duration);</title></rect>
<rect width="12" height="12" x="690" y="90" class="known"><title>void __cdecl Inv_RingDoMotions(struct RING_INFO *ring);</title></rect>
<rect width="12" height="12" x="705" y="90" class="known"><title>void __cdecl Inv_RingRotateLeft(struct RING_INFO *ring);</title></rect>
<rect width="12" height="12" x="720" y="90" class="known"><title>void __cdecl Inv_RingRotateRight(struct RING_INFO *ring);</title></rect>
<rect width="12" height="12" x="735" y="90" class="known"><title>void __cdecl Inv_RingMotionInit(struct RING_INFO *ring, int16_t frames, int16_t status, int16_t status_target);</title></rect>
<rect width="12" height="12" x="0" y="105" class="known"><title>void __cdecl Inv_RingMotionSetup(struct RING_INFO *ring, int16_t status, int16_t status_target, int16_t frames);</title></rect>
<rect width="12" height="12" x="15" y="105" class="known"><title>void __cdecl Inv_RingMotionRadius(struct RING_INFO *ring, int16_t target);</title></rect>
<rect width="12" height="12" x="30" y="105" class="known"><title>void __cdecl Inv_RingMotionRotation(struct RING_INFO *ring, int16_t rotation, int16_t target);</title></rect>
<rect width="12" height="12" x="45" y="105" class="known"><title>void __cdecl Inv_RingMotionCameraPos(struct RING_INFO *ring, int16_t target);</title></rect>
<rect width="12" height="12" x="60" y="105" class="known"><title>void __cdecl Inv_RingMotionCameraPitch(struct RING_INFO *ring, int16_t target);</title></rect>
<rect width="12" height="12" x="75" y="105" class="known"><title>void __cdecl Inv_RingMotionItemSelect(struct RING_INFO *ring, struct INVENTORY_ITEM *inv_item);</title></rect>
<rect width="12" height="12" x="90" y="105" class="known"><title>void __cdecl Inv_RingMotionItemDeselect(struct RING_INFO *ring, struct INVENTORY_ITEM *inv_item);</title></rect>
<rect width="12" height="12" x="105" y="105" class="known"><title>void __cdecl Init_Requester(struct REQUEST_INFO *req);</title></rect>
<rect width="12" height="12" x="120" y="105" class="known"><title>void __cdecl Remove_Requester(struct REQUEST_INFO *req);</title></rect>
<rect width="12" height="12" x="135" y="105" class="known"><title>void __cdecl ReqItemCentreAlign(struct REQUEST_INFO *req, struct TEXTSTRING *txt);</title></rect>
<rect width="12" height="12" x="150" y="105" class="known"><title>void __cdecl ReqItemLeftalign(struct REQUEST_INFO *req, struct TEXTSTRING *txt);</title></rect>
<rect width="12" height="12" x="165" y="105" class="known"><title>void __cdecl ReqItemRightalign(struct REQUEST_INFO *req, struct TEXTSTRING *txt);</title></rect>
<rect width="12" height="12" x="180" y="105" class="known"><title>int32_t __cdecl Display_Requester(struct REQUEST_INFO *req, int32_t des, int32_t backgrounds);</title></rect>
<rect width="12" height="12" x="195" y="105" class="known"><title>void __cdecl SetRequesterHeading(struct REQUEST_INFO *req, char *text1, uint32_t flags1, char *text2, uint32_t flags2);</title></rect>
<rect width="12" height="12" x="210" y="105" class="known"><title>void __cdecl RemoveAllReqItems(struct REQUEST_INFO *req);</title></rect>
<rect width="12" height="12" x="225" y="105" class="known"><title>void __cdecl ChangeRequesterItem(struct REQUEST_INFO *req, int32_t item, char *text1, uint32_t flags1, char *text2, uint32_t flags2);</title></rect>
<rect width="12" height="12" x="240" y="105" class="known"><title>void __cdecl AddRequesterItem(struct REQUEST_INFO *req, char *text1, uint32_t flags1, char *text2, uint32_t flags2);</title></rect>
<rect width="12" height="12" x="255" y="105" class="known"><title>void __cdecl SetPCRequesterSize(struct REQUEST_INFO *req, int32_t maxlines, int32_t ypos);</title></rect>
<rect width="12" height="12" x="270" y="105" class="known"><title>int32_t __cdecl AddAssaultTime(uint32_t time);</title></rect>
<rect width="12" height="12" x="285" y="105" class="known"><title>void __cdecl ShowGymStatsText(char *time_str, int32_t type);</title></rect>
<rect width="12" height="12" x="300" y="105" class="known"><title>void __cdecl ShowStatsText(char *time_str, int32_t type);</title></rect>
<rect width="12" height="12" x="315" y="105" class="known"><title>void __cdecl ShowEndStatsText(void);</title></rect>
<rect width="12" height="12" x="330" y="105" class="known"><title>void __cdecl InitialiseItemArray(int32_t numitems);</title></rect>
<rect width="12" height="12" x="345" y="105" class="known"><title>void __cdecl KillItem(int16_t item_num);</title></rect>
<rect width="12" height="12" x="360" y="105" class="known"><title>int16_t __cdecl CreateItem(void);</title></rect>
<rect width="12" height="12" x="375" y="105" class="known"><title>void __cdecl InitialiseItem(int16_t item_num);</title></rect>
<rect width="12" height="12" x="390" y="105" class="known"><title>void __cdecl Item_RemoveActive(int16_t item_num);</title></rect>
<rect width="12" height="12" x="405" y="105" class="known"><title>void __cdecl RemoveDrawnItem(int16_t item_num);</title></rect>
<rect width="12" height="12" x="420" y="105" class="known"><title>void __cdecl AddActiveItem(int16_t item_num);</title></rect>
<rect width="12" height="12" x="435" y="105" class="known"><title>void __cdecl ItemNewRoom(int16_t item_num, int16_t room_num);</title></rect>
<rect width="12" height="12" x="450" y="105" class="known"><title>int32_t __cdecl GlobalItemReplace(int32_t in_objnum, int32_t out_objnum);</title></rect>
<rect width="12" height="12" x="465" y="105" class="known"><title>void __cdecl InitialiseFXArray(void);</title></rect>
<rect width="12" height="12" x="480" y="105" class="known"><title>int16_t __cdecl CreateEffect(int16_t room_num);</title></rect>
<rect width="12" height="12" x="495" y="105" class="known"><title>void __cdecl KillEffect(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="510" y="105" class="known"><title>void __cdecl EffectNewRoom(int16_t fx_num, int16_t room_num);</title></rect>
<rect width="12" height="12" x="525" y="105" class="known"><title>void __cdecl ClearBodyBag(void);</title></rect>
<rect width="12" height="12" x="540" y="105" class="known"><title>void __cdecl Lara_HandleAboveWater(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="555" y="105" class="known"><title>void __cdecl Lara_LookUpDown(void);</title></rect>
<rect width="12" height="12" x="570" y="105" class="known"><title>void __cdecl Lara_LookLeftRight(void);</title></rect>
<rect width="12" height="12" x="585" y="105" class="known"><title>void __cdecl Lara_ResetLook(void);</title></rect>
<rect width="12" height="12" x="600" y="105" class="decompiled"><title>void __cdecl Lara_State_Walk(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="615" y="105" class="decompiled"><title>void __cdecl Lara_State_Run(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="630" y="105" class="decompiled"><title>void __cdecl Lara_State_Stop(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="645" y="105" class="decompiled"><title>void __cdecl Lara_State_ForwardJump(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="660" y="105" class="decompiled"><title>void __cdecl Lara_State_FastBack(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="675" y="105" class="decompiled"><title>void __cdecl Lara_State_TurnRight(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="690" y="105" class="decompiled"><title>void __cdecl Lara_State_TurnLeft(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="705" y="105" class="decompiled"><title>void __cdecl Lara_State_Death(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="720" y="105" class="decompiled"><title>void __cdecl Lara_State_FastFall(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="735" y="105" class="decompiled"><title>void __cdecl Lara_State_Hang(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="0" y="120" class="decompiled"><title>void __cdecl Lara_State_Reach(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="15" y="120" class="decompiled"><title>void __cdecl Lara_State_Splat(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="30" y="120" class="decompiled"><title>void __cdecl Lara_State_Compress(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="45" y="120" class="decompiled"><title>void __cdecl Lara_State_Back(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="60" y="120" class="decompiled"><title>void __cdecl Lara_State_Null(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="75" y="120" class="decompiled"><title>void __cdecl Lara_State_FastTurn(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="90" y="120" class="decompiled"><title>void __cdecl Lara_State_StepRight(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="105" y="120" class="decompiled"><title>void __cdecl Lara_State_StepLeft(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="120" y="120" class="decompiled"><title>void __cdecl Lara_State_Slide(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="135" y="120" class="decompiled"><title>void __cdecl Lara_State_BackJump(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="150" y="120" class="decompiled"><title>void __cdecl Lara_State_RightJump(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="165" y="120" class="decompiled"><title>void __cdecl Lara_State_LeftJump(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="180" y="120" class="decompiled"><title>void __cdecl Lara_State_UpJump(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="195" y="120" class="decompiled"><title>void __cdecl Lara_State_Fallback(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="210" y="120" class="decompiled"><title>void __cdecl Lara_State_HangLeft(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="225" y="120" class="decompiled"><title>void __cdecl Lara_State_HangRight(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="240" y="120" class="decompiled"><title>void __cdecl Lara_State_SlideBack(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="255" y="120" class="decompiled"><title>void __cdecl Lara_State_PushBlock(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="270" y="120" class="decompiled"><title>void __cdecl Lara_State_PPReady(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="285" y="120" class="decompiled"><title>void __cdecl Lara_State_Pickup(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="300" y="120" class="decompiled"><title>void __cdecl Lara_State_PickupFlare(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="315" y="120" class="decompiled"><title>void __cdecl Lara_State_SwitchOn(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="330" y="120" class="decompiled"><title>void __cdecl Lara_State_UseKey(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="345" y="120" class="decompiled"><title>void __cdecl Lara_State_Special(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="360" y="120" class="decompiled"><title>void __cdecl Lara_State_SwanDive(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="375" y="120" class="decompiled"><title>void __cdecl Lara_State_FastDive(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="390" y="120" class="decompiled"><title>void __cdecl Lara_State_WaterOut(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="405" y="120" class="decompiled"><title>void __cdecl Lara_State_Wade(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="420" y="120" class="decompiled"><title>void __cdecl Lara_State_DeathSlide(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="435" y="120" class="decompiled"><title>void __cdecl Lara_State_Extra_Breath(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="450" y="120" class="decompiled"><title>void __cdecl Lara_State_Extra_YetiKill(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="465" y="120" class="decompiled"><title>void __cdecl Lara_State_Extra_SharkKill(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="480" y="120" class="decompiled"><title>void __cdecl Lara_State_Extra_Airlock(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="495" y="120" class="decompiled"><title>void __cdecl Lara_State_Extra_GongBong(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="510" y="120" class="decompiled"><title>void __cdecl Lara_State_Extra_DinoKill(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="525" y="120" class="decompiled"><title>void __cdecl Lara_State_Extra_PullDagger(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="540" y="120" class="decompiled"><title>void __cdecl Lara_State_Extra_StartAnim(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="555" y="120" class="decompiled"><title>void __cdecl Lara_State_Extra_StartHouse(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="570" y="120" class="decompiled"><title>void __cdecl Lara_State_Extra_FinalAnim(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="585" y="120" class="known"><title>int32_t __cdecl Lara_Fallen(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="600" y="120" class="known"><title>void __cdecl Lara_CollideStop(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="615" y="120" class="decompiled"><title>void __cdecl Lara_Col_Walk(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="630" y="120" class="decompiled"><title>void __cdecl Lara_Col_Run(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="645" y="120" class="decompiled"><title>void __cdecl Lara_Col_Stop(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="660" y="120" class="decompiled"><title>void __cdecl Lara_Col_ForwardJump(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="675" y="120" class="decompiled"><title>void __cdecl Lara_Col_FastBack(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="690" y="120" class="decompiled"><title>void __cdecl Lara_Col_TurnRight(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="705" y="120" class="known"><title>void __cdecl Lara_Col_TurnLeft(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="720" y="120" class="known"><title>void __cdecl Lara_Col_Death(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="735" y="120" class="known"><title>void __cdecl Lara_Col_FastFall(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="0" y="135" class="known"><title>void __cdecl Lara_Col_Hang(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="15" y="135" class="known"><title>void __cdecl Lara_Col_Reach(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="30" y="135" class="known"><title>void __cdecl Lara_Col_Splat(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="45" y="135" class="known"><title>void __cdecl Lara_Col_Compress(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="60" y="135" class="known"><title>void __cdecl Lara_Col_Back( ITEM_INFO *item, COLL_INFO *coll );</title></rect>
<rect width="12" height="12" x="75" y="135" class="known"><title>void __cdecl Lara_Col_FastTurn(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="90" y="135" class="known"><title>void __cdecl Lara_Col_StepRight(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="105" y="135" class="known"><title>void __cdecl Lara_Col_StepLeft(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="120" y="135" class="known"><title>void __cdecl Lara_Col_Slide(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="135" y="135" class="known"><title>void __cdecl Lara_Col_BackJump(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="150" y="135" class="known"><title>void __cdecl Lara_Col_RightJump(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="165" y="135" class="known"><title>void __cdecl Lara_Col_LeftJump(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="180" y="135" class="known"><title>void __cdecl Lara_Col_UpJump(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="195" y="135" class="known"><title>void __cdecl Lara_Col_Fallback(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="210" y="135" class="known"><title>void __cdecl Lara_Col_HangLeft(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="225" y="135" class="known"><title>void __cdecl Lara_Col_HangRight(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="240" y="135" class="known"><title>void __cdecl Lara_Col_SlideBack(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="255" y="135" class="known"><title>void __cdecl Lara_Col_Roll(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="270" y="135" class="known"><title>void __cdecl Lara_Col_Roll2(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="285" y="135" class="known"><title>void __cdecl Lara_Col_Special(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="300" y="135" class="known"><title>void __cdecl Lara_Col_SwanDive(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="315" y="135" class="known"><title>void __cdecl Lara_Col_FastDive(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="330" y="135" class="known"><title>void __cdecl Lara_Col_Wade(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="345" y="135" class="known"><title>void __cdecl Lara_Col_Default(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="360" y="135" class="known"><title>void __cdecl Lara_Col_Jumper(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="375" y="135" class="known"><title>void __cdecl Lara_GetLaraCollisionInfo(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="390" y="135" class="known"><title>void __cdecl Lara_Slide_Slope(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="405" y="135" class="known"><title>int32_t __cdecl Lara_HitCeiling(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="420" y="135" class="known"><title>int32_t __cdecl Lara_DeflectEdge(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="435" y="135" class="known"><title>void __cdecl Lara_DeflectEdgeJump(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="450" y="135" class="known"><title>void __cdecl Lara_SlideEdgeJump(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="465" y="135" class="known"><title>int32_t __cdecl Lara_TestWall(struct ITEM_INFO *item, int32_t front, int32_t right, int32_t down);</title></rect>
<rect width="12" height="12" x="480" y="135" class="known"><title>int32_t __cdecl Lara_TestHangOnClimbWall(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="495" y="135" class="known"><title>int32_t __cdecl Lara_TestClimbStance(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="510" y="135" class="known"><title>void __cdecl Lara_HangTest(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="525" y="135" class="known"><title>int32_t __cdecl Lara_TestEdgeCatch(struct ITEM_INFO *item, struct COLL_INFO *coll, int32_t *edge);</title></rect>
<rect width="12" height="12" x="540" y="135" class="known"><title>int32_t __cdecl Lara_TestHangJumpUp(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="555" y="135" class="known"><title>int32_t __cdecl Lara_TestHangJump(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="570" y="135" class="known"><title>int32_t __cdecl Lara_TestHangSwingIn(struct ITEM_INFO *item, PHD_ANGLE angle);</title></rect>
<rect width="12" height="12" x="585" y="135" class="known"><title>int32_t __cdecl Lara_TestVault(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="600" y="135" class="known"><title>int32_t __cdecl Lara_TestSlide(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="615" y="135" class="known"><title>int16_t __cdecl Lara_FloorFront(struct ITEM_INFO *item, PHD_ANGLE ang, int32_t dist);</title></rect>
<rect width="12" height="12" x="630" y="135" class="known"><title>int32_t __cdecl Lara_LandedBad(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="645" y="135" class="known"><title>void __cdecl Lara_GetJointAbsPosition(struct PHD_VECTOR *vec, int32_t joint);</title></rect>
<rect width="12" height="12" x="660" y="135" class="known"><title>void __cdecl Lara_GetLJAInt(struct ITEM_INFO *item, struct PHD_VECTOR *vec, int16_t *frame1, int16_t *frame2, int32_t frac, int32_t rate);</title></rect>
<rect width="12" height="12" x="675" y="135" class="known"><title>void __cdecl draw_shotgun_meshes(int32_t weapon_type);</title></rect>
<rect width="12" height="12" x="690" y="135" class="known"><title>void __cdecl undraw_shotgun_meshes(int32_t weapon_type);</title></rect>
<rect width="12" height="12" x="705" y="135" class="known"><title>void __cdecl ready_shotgun(int32_t weapon_type);</title></rect>
<rect width="12" height="12" x="720" y="135" class="known"><title>void __cdecl RifleHandler(int32_t weapon_type);</title></rect>
<rect width="12" height="12" x="735" y="135" class="known"><title>void __cdecl FireShotgun(void);</title></rect>
<rect width="12" height="12" x="0" y="150" class="known"><title>void __cdecl FireM16(int32_t running);</title></rect>
<rect width="12" height="12" x="15" y="150" class="known"><title>void __cdecl FireHarpoon(void);</title></rect>
<rect width="12" height="12" x="30" y="150" class="known"><title>void __cdecl ControlHarpoonBolt(int16_t item_num);</title></rect>
<rect width="12" height="12" x="45" y="150" class="known"><title>void __cdecl FireRocket(void);</title></rect>
<rect width="12" height="12" x="60" y="150" class="known"><title>void __cdecl ControlRocket(int16_t item_num);</title></rect>
<rect width="12" height="12" x="75" y="150" class="known"><title>void __cdecl draw_shotgun(int32_t weapon_type);</title></rect>
<rect width="12" height="12" x="90" y="150" class="known"><title>void __cdecl undraw_shotgun(int32_t weapon_type);</title></rect>
<rect width="12" height="12" x="105" y="150" class="known"><title>void __cdecl AnimateShotgun(int32_t weapon_type);</title></rect>
<rect width="12" height="12" x="120" y="150" class="known"><title>void __cdecl set_arm_info(struct LARA_ARM *arm, int32_t frame);</title></rect>
<rect width="12" height="12" x="135" y="150" class="known"><title>void __cdecl draw_pistols(int32_t weapon_type);</title></rect>
<rect width="12" height="12" x="150" y="150" class="known"><title>void __cdecl undraw_pistols(int32_t weapon_type);</title></rect>
<rect width="12" height="12" x="165" y="150" class="known"><title>void __cdecl ready_pistols(int32_t weapon_type);</title></rect>
<rect width="12" height="12" x="180" y="150" class="known"><title>void __cdecl draw_pistol_meshes(int32_t weapon_type);</title></rect>
<rect width="12" height="12" x="195" y="150" class="known"><title>void __cdecl undraw_pistol_mesh_left(int32_t weapon_type);</title></rect>
<rect width="12" height="12" x="210" y="150" class="known"><title>void __cdecl undraw_pistol_mesh_right(int32_t weapon_type);</title></rect>
<rect width="12" height="12" x="225" y="150" class="known"><title>void __cdecl PistolHandler(int32_t weapon_type);</title></rect>
<rect width="12" height="12" x="240" y="150" class="known"><title>void __cdecl AnimatePistols(int32_t weapon_type);</title></rect>
<rect width="12" height="12" x="255" y="150" class="known"><title>void __cdecl Lara_State_ClimbLeft(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="270" y="150" class="known"><title>void __cdecl Lara_State_ClimbRight(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="285" y="150" class="known"><title>void __cdecl Lara_State_ClimbStance(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="300" y="150" class="known"><title>void __cdecl Lara_State_Climbing(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="315" y="150" class="known"><title>void __cdecl Lara_State_ClimbEnd(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="330" y="150" class="known"><title>void __cdecl Lara_State_ClimbDown(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="345" y="150" class="known"><title>void __cdecl Lara_Col_ClimbLeft(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="360" y="150" class="known"><title>void __cdecl Lara_Col_ClimbRight(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="375" y="150" class="known"><title>void __cdecl Lara_Col_ClimbStance(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="390" y="150" class="known"><title>void __cdecl Lara_Col_Climbing(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="405" y="150" class="known"><title>void __cdecl Lara_Col_ClimbDown(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="420" y="150" class="known"><title>int32_t __cdecl Lara_CheckForLetGo(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="435" y="150" class="known"><title>int32_t __cdecl Lara_TestClimb(int32_t x, int32_t y, int32_t z, int32_t xfront, int32_t zfront, int32_t item_height, int16_t item_room, int32_t *shift);</title></rect>
<rect width="12" height="12" x="450" y="150" class="known"><title>int32_t __cdecl Lara_TestClimbPos(struct ITEM_INFO *item, int32_t front, int32_t right, int32_t origin, int32_t height, int32_t *shift);</title></rect>
<rect width="12" height="12" x="465" y="150" class="known"><title>void __cdecl Lara_DoClimbLeftRight(struct ITEM_INFO *item, struct COLL_INFO *coll, int32_t result, int32_t shift);</title></rect>
<rect width="12" height="12" x="480" y="150" class="known"><title>int32_t __cdecl Lara_TestClimbUpPos(struct ITEM_INFO *item, int32_t front, int32_t right, int32_t *shift, int32_t *ledge);</title></rect>
<rect width="12" height="12" x="495" y="150" class="known"><title>void __cdecl LaraGun(void);</title></rect>
<rect width="12" height="12" x="510" y="150" class="known"><title>int32_t __cdecl CheckForHoldingState(int32_t state);</title></rect>
<rect width="12" height="12" x="525" y="150" class="known"><title>void __cdecl InitialiseNewWeapon(void);</title></rect>
<rect width="12" height="12" x="540" y="150" class="known"><title>void __cdecl LaraTargetInfo(struct WEAPON_INFO *winfo);</title></rect>
<rect width="12" height="12" x="555" y="150" class="known"><title>void __cdecl LaraGetNewTarget(struct WEAPON_INFO *winfo);</title></rect>
<rect width="12" height="12" x="570" y="150" class="known"><title>void __cdecl find_target_point(struct ITEM_INFO *item, struct GAME_VECTOR *target);</title></rect>
<rect width="12" height="12" x="585" y="150" class="known"><title>void __cdecl AimWeapon(struct WEAPON_INFO *winfo, struct LARA_ARM *arm);</title></rect>
<rect width="12" height="12" x="600" y="150" class="known"><title>int32_t __cdecl FireWeapon(int32_t weapon_type, struct ITEM_INFO *target, struct ITEM_INFO *src, PHD_ANGLE *angles);</title></rect>
<rect width="12" height="12" x="615" y="150" class="known"><title>void __cdecl HitTarget(struct ITEM_INFO *item, struct GAME_VECTOR *hitpos, int32_t damage);</title></rect>
<rect width="12" height="12" x="630" y="150" class="known"><title>void __cdecl SmashItem(int16_t item_num, int32_t weapon_type);</title></rect>
<rect width="12" height="12" x="645" y="150" class="known"><title>int32_t __cdecl WeaponObject(int32_t weapon_type);</title></rect>
<rect width="12" height="12" x="660" y="150" class="known"><title>int32_t __cdecl DoFlareLight(struct PHD_VECTOR *pos, int32_t flare_age);</title></rect>
<rect width="12" height="12" x="675" y="150" class="known"><title>void __cdecl DoFlareInHand(int32_t flare_age);</title></rect>
<rect width="12" height="12" x="690" y="150" class="known"><title>void __cdecl DrawFlareInAir(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="705" y="150" class="known"><title>void __cdecl CreateFlare(int32_t thrown);</title></rect>
<rect width="12" height="12" x="720" y="150" class="known"><title>void __cdecl set_flare_arm(int32_t frame);</title></rect>
<rect width="12" height="12" x="735" y="150" class="known"><title>void __cdecl draw_flare(void);</title></rect>
<rect width="12" height="12" x="0" y="165" class="known"><title>void __cdecl undraw_flare(void);</title></rect>
<rect width="12" height="12" x="15" y="165" class="known"><title>void __cdecl draw_flare_meshes(void);</title></rect>
<rect width="12" height="12" x="30" y="165" class="known"><title>void __cdecl undraw_flare_meshes(void);</title></rect>
<rect width="12" height="12" x="45" y="165" class="known"><title>void __cdecl ready_flare(void);</title></rect>
<rect width="12" height="12" x="60" y="165" class="known"><title>void __cdecl Lara_Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="75" y="165" class="known"><title>void __cdecl Lara_Animate(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="90" y="165" class="known"><title>void __cdecl Lara_UseItem(int16_t object_num);</title></rect>
<rect width="12" height="12" x="105" y="165" class="known"><title>void __cdecl Lara_CheatGetStuff(void);</title></rect>
<rect width="12" height="12" x="120" y="165" class="known"><title>void __cdecl Lara_ControlExtra(int16_t item_num);</title></rect>
<rect width="12" height="12" x="135" y="165" class="known"><title>void __cdecl Lara_InitialiseLoad(int16_t item_num);</title></rect>
<rect width="12" height="12" x="150" y="165" class="known"><title>void __cdecl Lara_Initialise(int32_t type);</title></rect>
<rect width="12" height="12" x="165" y="165" class="known"><title>void __cdecl Lara_InitialiseInventory(int32_t level_num);</title></rect>
<rect width="12" height="12" x="180" y="165" class="known"><title>void __cdecl Lara_InitialiseMeshes(int32_t level_num);</title></rect>
<rect width="12" height="12" x="195" y="165" class="known"><title>void __cdecl Lara_HandleSurface(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="210" y="165" class="known"><title>void __cdecl Lara_State_SurfSwim(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="225" y="165" class="known"><title>void __cdecl Lara_State_SurfBack(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="240" y="165" class="known"><title>void __cdecl Lara_State_SurfLeft(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="255" y="165" class="known"><title>void __cdecl Lara_State_SurfRight(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="270" y="165" class="known"><title>void __cdecl Lara_State_SurfTread(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="285" y="165" class="known"><title>void __cdecl Lara_Col_SurfSwim(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="300" y="165" class="known"><title>void __cdecl Lara_Col_SurfBack(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="315" y="165" class="known"><title>void __cdecl Lara_Col_SurfLeft(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="330" y="165" class="known"><title>void __cdecl Lara_Col_SurfRight(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="345" y="165" class="known"><title>void __cdecl Lara_Col_SurfTread(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="360" y="165" class="known"><title>void __cdecl Lara_SurfaceCollision(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="375" y="165" class="known"><title>int32_t __cdecl Lara_TestWaterStepOut(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="390" y="165" class="known"><title>int32_t __cdecl Lara_TestWaterClimbOut(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="405" y="165" class="known"><title>void __cdecl Lara_HandleUnderwater(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="420" y="165" class="known"><title>void __cdecl Lara_SwimTurn(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="435" y="165" class="known"><title>void __cdecl Lara_State_Swim(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="450" y="165" class="known"><title>void __cdecl Lara_State_Glide(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="465" y="165" class="known"><title>void __cdecl Lara_State_Tread(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="480" y="165" class="known"><title>void __cdecl Lara_State_Dive(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="495" y="165" class="known"><title>void __cdecl Lara_State_UWDeath(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="510" y="165" class="known"><title>void __cdecl Lara_State_WaterRoll(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="525" y="165" class="known"><title>void __cdecl Lara_Col_Swim(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="540" y="165" class="known"><title>void __cdecl Lara_Col_UWDeath(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="555" y="165" class="known"><title>int32_t __cdecl Lara_GetWaterDepth(int32_t x, int32_t y, int32_t z, int16_t room_num);</title></rect>
<rect width="12" height="12" x="570" y="165" class="known"><title>void __cdecl Lara_TestWaterDepth(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="585" y="165" class="known"><title>void __cdecl Lara_SwimCollision(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="600" y="165" class="known"><title>void __cdecl Lara_WaterCurrent(struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="615" y="165" class="known"><title>void __cdecl InitialiseLOTarray(void);</title></rect>
<rect width="12" height="12" x="630" y="165" class="known"><title>void __cdecl DisableBaddieAI(int16_t item_num);</title></rect>
<rect width="12" height="12" x="645" y="165" class="known"><title>int32_t __cdecl LOT_EnableBaddieAI(int16_t item_num, int32_t always);</title></rect>
<rect width="12" height="12" x="660" y="165" class="known"><title>void __cdecl InitialiseSlot(int16_t item_num, int32_t slot);</title></rect>
<rect width="12" height="12" x="675" y="165" class="known"><title>void __cdecl CreateZone(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="690" y="165" class="known"><title>void __cdecl ClearLOT(struct LOT_INFO *LOT);</title></rect>
<rect width="12" height="12" x="705" y="165" class="known"><title>void __cdecl ControlMissile(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="720" y="165" class="known"><title>void __cdecl ShootAtLara(struct FX_INFO *fx);</title></rect>
<rect width="12" height="12" x="735" y="165" class="known"><title>int32_t __cdecl Effect_ExplodingDeath(int16_t item_num, int32_t mesh_bits, int16_t damage);</title></rect>
<rect width="12" height="12" x="0" y="180" class="known"><title>void __cdecl ControlBodyPart(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="15" y="180" class="known"><title>void __cdecl InitialiseMovingBlock(int16_t item_num);</title></rect>
<rect width="12" height="12" x="30" y="180" class="known"><title>void __cdecl MovableBlock(int16_t item_num);</title></rect>
<rect width="12" height="12" x="45" y="180" class="known"><title>void __cdecl MovableBlockCollision(int16_t item_num, struct ITEM_INFO *laraitem, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="60" y="180" class="known"><title>int32_t __cdecl TestBlockMovable(struct ITEM_INFO *item, int32_t blokhite);</title></rect>
<rect width="12" height="12" x="75" y="180" class="known"><title>int32_t __cdecl TestBlockPush(struct ITEM_INFO *item, int32_t blokhite, uint16_t quadrant);</title></rect>
<rect width="12" height="12" x="90" y="180" class="known"><title>int32_t __cdecl TestBlockPull(struct ITEM_INFO *item, int32_t blokhite, uint16_t quadrant);</title></rect>
<rect width="12" height="12" x="105" y="180" class="known"><title>void __cdecl AlterFloorHeight(struct ITEM_INFO *item, int32_t height);</title></rect>
<rect width="12" height="12" x="120" y="180" class="known"><title>void __cdecl DrawMovableBlock(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="135" y="180" class="known"><title>void __cdecl DrawUnclippedItem(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="150" y="180" class="known"><title>void __cdecl EarthQuake(int16_t item_num);</title></rect>
<rect width="12" height="12" x="165" y="180" class="known"><title>void __cdecl ControlCutShotgun(int16_t item_num);</title></rect>
<rect width="12" height="12" x="180" y="180" class="known"><title>void __cdecl InitialiseFinalLevel(void);</title></rect>
<rect width="12" height="12" x="195" y="180" class="known"><title>void __cdecl FinalLevelCounter(int16_t item_num);</title></rect>
<rect width="12" height="12" x="210" y="180" class="known"><title>void __cdecl MiniCopterControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="225" y="180" class="known"><title>void __cdecl InitialiseDyingMonk(int16_t item_num);</title></rect>
<rect width="12" height="12" x="240" y="180" class="known"><title>void __cdecl ControlGongBonger(int16_t item_num);</title></rect>
<rect width="12" height="12" x="255" y="180" class="known"><title>void __cdecl ControlDeathSlide(int16_t item_num);</title></rect>
<rect width="12" height="12" x="270" y="180" class="known"><title>void __cdecl BigBowlControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="285" y="180" class="known"><title>void __cdecl BellControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="300" y="180" class="known"><title>void __cdecl SmashWindow(int16_t item_num);</title></rect>
<rect width="12" height="12" x="315" y="180" class="known"><title>void __cdecl WindowControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="330" y="180" class="known"><title>void __cdecl SmashIceControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="345" y="180" class="known"><title>void __cdecl ShutThatDoor(struct DOORPOS_DATA *d);</title></rect>
<rect width="12" height="12" x="360" y="180" class="known"><title>void __cdecl OpenThatDoor(struct DOORPOS_DATA *d);</title></rect>
<rect width="12" height="12" x="375" y="180" class="known"><title>void __cdecl InitialiseDoor(int16_t item_num);</title></rect>
<rect width="12" height="12" x="390" y="180" class="known"><title>int32_t __cdecl OnDrawBridge(struct ITEM_INFO *item, int32_t x, int32_t y);</title></rect>
<rect width="12" height="12" x="405" y="180" class="known"><title>void __cdecl DrawBridgeFloor(struct ITEM_INFO *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="12" height="12" x="420" y="180" class="known"><title>void __cdecl DrawBridgeCeiling(struct ITEM_INFO *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="12" height="12" x="435" y="180" class="known"><title>void __cdecl DrawBridgeCollision(int16_t item_num, struct ITEM_INFO *laraitem, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="450" y="180" class="known"><title>void __cdecl LiftControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="465" y="180" class="known"><title>void __cdecl LiftFloorCeiling(struct ITEM_INFO *item, int32_t x, int32_t y, int32_t z, int32_t *floor, int32_t *ceiling);</title></rect>
<rect width="12" height="12" x="480" y="180" class="known"><title>void __cdecl LiftFloor(struct ITEM_INFO *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="12" height="12" x="495" y="180" class="known"><title>void __cdecl LiftCeiling(struct ITEM_INFO *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="12" height="12" x="510" y="180" class="known"><title>void __cdecl BridgeFlatFloor(struct ITEM_INFO *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="12" height="12" x="525" y="180" class="known"><title>void __cdecl BridgeFlatCeiling(struct ITEM_INFO *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="12" height="12" x="540" y="180" class="known"><title>int32_t __cdecl GetOffset(struct ITEM_INFO *item, int32_t x, int32_t z);</title></rect>
<rect width="12" height="12" x="555" y="180" class="known"><title>void __cdecl BridgeTilt1Floor(struct ITEM_INFO *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="12" height="12" x="570" y="180" class="known"><title>void __cdecl BridgeTilt1Ceiling(struct ITEM_INFO *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="12" height="12" x="585" y="180" class="known"><title>void __cdecl BridgeTilt2Floor(struct ITEM_INFO *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="12" height="12" x="600" y="180" class="known"><title>void __cdecl CopterControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="615" y="180" class="known"><title>void __cdecl GeneralControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="630" y="180" class="known"><title>void __cdecl DetonatorControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="645" y="180" class="known"><title>int32_t __cdecl Targetable(struct ITEM_INFO *item, AI_INFO *info);</title></rect>
<rect width="12" height="12" x="660" y="180" class="known"><title>void __cdecl ControlGlow(int16_t nFX);</title></rect>
<rect width="12" height="12" x="675" y="180" class="known"><title>void __cdecl ControlGunShot(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="690" y="180" class="known"><title>int16_t __cdecl GunShot(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE yrot, int16_t room_num);</title></rect>
<rect width="12" height="12" x="705" y="180" class="known"><title>int16_t __cdecl GunHit(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE yrot, int16_t room_num);</title></rect>
<rect width="12" height="12" x="720" y="180" class="known"><title>int16_t __cdecl GunMiss(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE yrot, int16_t room_num);</title></rect>
<rect width="12" height="12" x="735" y="180" class="known"><title>int32_t __cdecl ShotLara(struct ITEM_INFO *item, AI_INFO *info, struct BITE_INFO *gun, int16_t extra_rotation, int32_t damage);</title></rect>
<rect width="12" height="12" x="0" y="195" class="known"><title>void __cdecl InitialiseCult1(int16_t item_num);</title></rect>
<rect width="12" height="12" x="15" y="195" class="known"><title>void __cdecl Cult1Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="30" y="195" class="known"><title>void __cdecl InitialiseCult3(int16_t item_num);</title></rect>
<rect width="12" height="12" x="45" y="195" class="known"><title>void __cdecl Cult3Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="60" y="195" class="known"><title>void __cdecl Worker1Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="75" y="195" class="known"><title>void __cdecl Worker2Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="90" y="195" class="known"><title>void __cdecl BanditControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="105" y="195" class="known"><title>void __cdecl Bandit2Control(int16_t item_num);</title></rect>
<rect width="12" height="12" x="120" y="195" class="known"><title>void __cdecl WinstonControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="135" y="195" class="known"><title>void __cdecl PickUpCollision(int16_t item_num, struct ITEM_INFO *laraitem, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="150" y="195" class="known"><title>void __cdecl SwitchCollision(int16_t item_num, struct ITEM_INFO *laraitem, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="165" y="195" class="known"><title>void __cdecl SwitchCollision2(int16_t item_num, struct ITEM_INFO *laraitem, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="180" y="195" class="known"><title>void __cdecl KeyHoleCollision(int16_t item_num, struct ITEM_INFO *laraitem, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="195" y="195" class="known"><title>void __cdecl PuzzleHoleCollision(int16_t item_num, struct ITEM_INFO *laraitem, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="210" y="195" class="known"><title>void __cdecl SwitchControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="225" y="195" class="known"><title>int32_t __cdecl SwitchTrigger(int16_t item_num, int16_t timer);</title></rect>
<rect width="12" height="12" x="240" y="195" class="known"><title>int32_t __cdecl KeyTrigger(int16_t item_num);</title></rect>
<rect width="12" height="12" x="255" y="195" class="known"><title>int32_t __cdecl PickupTrigger(int16_t item_num);</title></rect>
<rect width="12" height="12" x="270" y="195" class="known"><title>void __cdecl SecretControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="285" y="195" class="known"><title>void __cdecl MouseControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="300" y="195" class="known"><title>void __cdecl InitialiseStartInfo(void);</title></rect>
<rect width="12" height="12" x="315" y="195" class="known"><title>void __cdecl ModifyStartInfo(int32_t level_num);</title></rect>
<rect width="12" height="12" x="330" y="195" class="known"><title>void __cdecl CreateStartInfo(int32_t level_num);</title></rect>
<rect width="12" height="12" x="345" y="195" class="known"><title>void __cdecl CreateSaveGameInfo(void);</title></rect>
<rect width="12" height="12" x="360" y="195" class="known"><title>void __cdecl ExtractSaveGameInfo(void);</title></rect>
<rect width="12" height="12" x="375" y="195" class="known"><title>void __cdecl ResetSG(void);</title></rect>
<rect width="12" height="12" x="390" y="195" class="known"><title>void __cdecl WriteSG(void *pointer, int32_t size);</title></rect>
<rect width="12" height="12" x="405" y="195" class="known"><title>void __cdecl ReadSG(void *pointer, int32_t size);</title></rect>
<rect width="12" height="12" x="420" y="195" class="known"><title>int32_t __cdecl Level_Initialise(int32_t level_num, int32_t level_type);</title></rect>
<rect width="12" height="12" x="435" y="195" class="known"><title>void __cdecl InitialiseGameFlags(void);</title></rect>
<rect width="12" height="12" x="450" y="195" class="known"><title>void __cdecl InitialiseLevelFlags(void);</title></rect>
<rect width="12" height="12" x="465" y="195" class="known"><title>void __cdecl BaddyObjects(void);</title></rect>
<rect width="12" height="12" x="480" y="195" class="known"><title>void __cdecl TrapObjects(void);</title></rect>
<rect width="12" height="12" x="495" y="195" class="known"><title>void __cdecl ObjectObjects(void);</title></rect>
<rect width="12" height="12" x="510" y="195" class="known"><title>void __cdecl InitialiseObjects(void);</title></rect>
<rect width="12" height="12" x="525" y="195" class="known"><title>void __cdecl GetCarriedItems(void);</title></rect>
<rect width="12" height="12" x="540" y="195" class="known"><title>void __cdecl JellyControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="555" y="195" class="known"><title>void __cdecl BaracuddaControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="570" y="195" class="known"><title>void __cdecl SharkControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="585" y="195" class="known"><title>void __cdecl InitialiseSkidoo(int16_t item_num);</title></rect>
<rect width="12" height="12" x="600" y="195" class="known"><title>int32_t __cdecl SkidooCheckGeton(int16_t item_num, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="615" y="195" class="known"><title>void __cdecl SkidooCollision(int16_t item_num, struct ITEM_INFO *litem, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="630" y="195" class="known"><title>void __cdecl SkidooBaddieCollision(struct ITEM_INFO *skidoo);</title></rect>
<rect width="12" height="12" x="645" y="195" class="known"><title>int32_t __cdecl TestHeight(struct ITEM_INFO *item, int32_t z_off, int32_t x_off, struct PHD_VECTOR *pos);</title></rect>
<rect width="12" height="12" x="660" y="195" class="known"><title>int32_t __cdecl DoShift(struct ITEM_INFO *skidoo, struct PHD_VECTOR *pos, struct PHD_VECTOR *old);</title></rect>
<rect width="12" height="12" x="675" y="195" class="known"><title>int32_t __cdecl DoDynamics(int32_t height, int32_t fallspeed, int32_t *y);</title></rect>
<rect width="12" height="12" x="690" y="195" class="known"><title>int32_t __cdecl GetCollisionAnim(struct ITEM_INFO *skidoo, struct PHD_VECTOR *moved);</title></rect>
<rect width="12" height="12" x="705" y="195" class="known"><title>void __cdecl DoSnowEffect(struct ITEM_INFO *skidoo);</title></rect>
<rect width="12" height="12" x="720" y="195" class="known"><title>int32_t __cdecl SkidooDynamics(struct ITEM_INFO *skidoo);</title></rect>
<rect width="12" height="12" x="735" y="195" class="known"><title>int32_t __cdecl SkidooUserControl(struct ITEM_INFO *skidoo, int32_t height, int32_t *pitch);</title></rect>
<rect width="12" height="12" x="0" y="210" class="known"><title>int32_t __cdecl SkidooCheckGetOffOK(int32_t direction);</title></rect>
<rect width="12" height="12" x="15" y="210" class="known"><title>void __cdecl SkidooAnimation(struct ITEM_INFO *skidoo, int32_t collide, int32_t dead);</title></rect>
<rect width="12" height="12" x="30" y="210" class="known"><title>void __cdecl SkidooExplode(struct ITEM_INFO *skidoo);</title></rect>
<rect width="12" height="12" x="45" y="210" class="known"><title>int32_t __cdecl SkidooCheckGetOff(void);</title></rect>
<rect width="12" height="12" x="60" y="210" class="known"><title>void __cdecl SkidooGuns(void);</title></rect>
<rect width="12" height="12" x="75" y="210" class="known"><title>int32_t __cdecl SkidooControl(void);</title></rect>
<rect width="12" height="12" x="90" y="210" class="known"><title>void __cdecl DrawSkidoo(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="105" y="210" class="known"><title>void __cdecl InitialiseSkidman(int16_t item_num);</title></rect>
<rect width="12" height="12" x="120" y="210" class="known"><title>void __cdecl SkidManControl(int16_t rider_num);</title></rect>
<rect width="12" height="12" x="135" y="210" class="known"><title>void __cdecl SkidmanPush(struct ITEM_INFO *item, struct ITEM_INFO *laraitem, int32_t radius);</title></rect>
<rect width="12" height="12" x="150" y="210" class="known"><title>void __cdecl SkidmanCollision(int16_t item_num, struct ITEM_INFO *laraitem, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="165" y="210" class="known"><title>int32_t __cdecl Music_GetRealTrack(int32_t track);</title></rect>
<rect width="12" height="12" x="180" y="210" class="known"><title>void __cdecl Sound_Effect(int32_t sample_id, const struct PHD_3DPOS *pos, uint32_t flags);</title></rect>
<rect width="12" height="12" x="195" y="210" class="known"><title>void __cdecl Sound_StopEffect(int32_t sample_id);</title></rect>
<rect width="12" height="12" x="210" y="210" class="known"><title>void __cdecl Sound_UpdateContinued(void);</title></rect>
<rect width="12" height="12" x="225" y="210" class="known"><title>void __cdecl Sound_Shutdown(void);</title></rect>
<rect width="12" height="12" x="240" y="210" class="known"><title>void __cdecl Sound_Init(void);</title></rect>
<rect width="12" height="12" x="255" y="210" class="known"><title>int32_t __cdecl TestCollision(struct ITEM_INFO *item, struct ITEM_INFO *laraitem);</title></rect>
<rect width="12" height="12" x="270" y="210" class="known"><title>int32_t __cdecl GetSpheres(struct ITEM_INFO *item, struct SPHERE *ptr, int32_t WorldSpace);</title></rect>
<rect width="12" height="12" x="285" y="210" class="known"><title>void __cdecl GetJointAbsPosition(struct ITEM_INFO *item, struct PHD_VECTOR *vec, int32_t joint);</title></rect>
<rect width="12" height="12" x="300" y="210" class="known"><title>void __cdecl BaddieBiteEffect(struct ITEM_INFO *item, struct BITE_INFO *bite);</title></rect>
<rect width="12" height="12" x="315" y="210" class="known"><title>void __cdecl SpiderLeap(int16_t item_num, int16_t angle);</title></rect>
<rect width="12" height="12" x="330" y="210" class="known"><title>void __cdecl SpiderControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="345" y="210" class="known"><title>void __cdecl BigSpiderControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="360" y="210" class="known"><title>void __cdecl T_InitPrint(void);</title></rect>
<rect width="12" height="12" x="375" y="210" class="known"><title>TEXTSTRING *__cdecl T_Print(int32_t xpos, int32_t ypos, int32_t zpos, char *string);</title></rect>
<rect width="12" height="12" x="390" y="210" class="known"><title>void __cdecl T_ChangeText(struct TEXTSTRING *textstring, char *string);</title></rect>
<rect width="12" height="12" x="405" y="210" class="known"><title>void __cdecl T_SetScale(struct TEXTSTRING *textstring, int32_t scale_h, int32_t scaleV);</title></rect>
<rect width="12" height="12" x="420" y="210" class="known"><title>void __cdecl T_FlashText(struct TEXTSTRING *textstring, int16_t enable, int16_t rate);</title></rect>
<rect width="12" height="12" x="435" y="210" class="known"><title>void __cdecl T_AddBackground(struct TEXTSTRING *textstring, int16_t xsize, int16_t ysize, int16_t xoff, int16_t yoff, int16_t zoff, int16_t colour, uint16_t *gourptr, uint16_t flags);</title></rect>
<rect width="12" height="12" x="450" y="210" class="known"><title>void __cdecl T_RemoveBackground(struct TEXTSTRING *textstring);</title></rect>
<rect width="12" height="12" x="465" y="210" class="known"><title>void __cdecl T_AddOutline(struct TEXTSTRING *textstring, int16_t enable, int16_t colour, uint16_t *gourptr, uint16_t flags);</title></rect>
<rect width="12" height="12" x="480" y="210" class="known"><title>void __cdecl T_RemoveOutline(struct TEXTSTRING *textstring);</title></rect>
<rect width="12" height="12" x="495" y="210" class="known"><title>void __cdecl T_CentreH(struct TEXTSTRING *textstring, int16_t enable);</title></rect>
<rect width="12" height="12" x="510" y="210" class="known"><title>void __cdecl T_CentreV(struct TEXTSTRING *textstring, int16_t enable);</title></rect>
<rect width="12" height="12" x="525" y="210" class="known"><title>void __cdecl T_RightAlign(struct TEXTSTRING *textstring, int16_t enable);</title></rect>
<rect width="12" height="12" x="540" y="210" class="known"><title>void __cdecl T_BottomAlign(struct TEXTSTRING *textstring, int16_t enable);</title></rect>
<rect width="12" height="12" x="555" y="210" class="known"><title>int32_t __cdecl T_GetTextWidth(struct TEXTSTRING *textstring);</title></rect>
<rect width="12" height="12" x="570" y="210" class="known"><title>int32_t __cdecl T_RemovePrint(struct TEXTSTRING *textstring);</title></rect>
<rect width="12" height="12" x="585" y="210" class="known"><title>int16_t __cdecl T_GetStringLen(char *string);</title></rect>
<rect width="12" height="12" x="600" y="210" class="known"><title>void __cdecl T_DrawText(void);</title></rect>
<rect width="12" height="12" x="615" y="210" class="known"><title>void __cdecl T_draw_border(int32_t xpos, int32_t ypos, int32_t zpos, int32_t width, int32_t height);</title></rect>
<rect width="12" height="12" x="630" y="210" class="known"><title>void __cdecl T_DrawThisText(struct TEXTSTRING *textstring);</title></rect>
<rect width="12" height="12" x="645" y="210" class="known"><title>uint32_t __cdecl GetTextScaleH(uint32_t scale_h);</title></rect>
<rect width="12" height="12" x="660" y="210" class="known"><title>uint32_t __cdecl GetTextScaleV(uint32_t scale_v);</title></rect>
<rect width="12" height="12" x="675" y="210" class="known"><title>void __cdecl MineControl(int16_t mine_num);</title></rect>
<rect width="12" height="12" x="690" y="210" class="known"><title>void __cdecl ControlSpikeWall(int16_t item_num);</title></rect>
<rect width="12" height="12" x="705" y="210" class="known"><title>void __cdecl ControlCeilingSpikes(int16_t item_num);</title></rect>
<rect width="12" height="12" x="720" y="210" class="known"><title>void __cdecl HookControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="735" y="210" class="known"><title>void __cdecl PropellerControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="0" y="225" class="known"><title>void __cdecl SpinningBlade(int16_t item_num);</title></rect>
<rect width="12" height="12" x="15" y="225" class="known"><title>void __cdecl IcicleControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="30" y="225" class="known"><title>void __cdecl InitialiseKillerStatue(int16_t item_num);</title></rect>
<rect width="12" height="12" x="45" y="225" class="known"><title>void __cdecl KillerStatueControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="60" y="225" class="known"><title>void __cdecl SpringBoardControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="75" y="225" class="known"><title>void __cdecl InitialiseRollingBall(int16_t item_num);</title></rect>
<rect width="12" height="12" x="90" y="225" class="known"><title>void __cdecl RollingBallControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="105" y="225" class="known"><title>void __cdecl RollingBallCollision(int16_t item_num, struct ITEM_INFO *litem, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="120" y="225" class="known"><title>void __cdecl SpikeCollision(int16_t item_num, struct ITEM_INFO *litem, struct COLL_INFO *coll);</title></rect>
<rect width="12" height="12" x="135" y="225" class="known"><title>void __cdecl TrapDoorControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="150" y="225" class="known"><title>void __cdecl TrapDoorCeiling(struct ITEM_INFO *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="12" height="12" x="165" y="225" class="known"><title>int32_t __cdecl OnTrapDoor(struct ITEM_INFO *item, int32_t x, int32_t z);</title></rect>
<rect width="12" height="12" x="180" y="225" class="known"><title>void __cdecl Pendulum(int16_t item_num);</title></rect>
<rect width="12" height="12" x="195" y="225" class="known"><title>void __cdecl FallingBlock(int16_t item_num);</title></rect>
<rect width="12" height="12" x="210" y="225" class="known"><title>void __cdecl FallingBlockFloor(struct ITEM_INFO *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="12" height="12" x="225" y="225" class="known"><title>void __cdecl TeethTrap(int16_t item_num);</title></rect>
<rect width="12" height="12" x="240" y="225" class="known"><title>void __cdecl DartsControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="255" y="225" class="known"><title>void __cdecl DartEffectControl(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="270" y="225" class="known"><title>void __cdecl FlameEmitterControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="285" y="225" class="known"><title>void __cdecl FlameControl(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="300" y="225" class="known"><title>void __cdecl LaraBurn(void);</title></rect>
<rect width="12" height="12" x="315" y="225" class="known"><title>void __cdecl LavaBurn(struct ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="330" y="225" class="known"><title>void __cdecl LavaSpray(int16_t item_num);</title></rect>
<rect width="12" height="12" x="345" y="225" class="known"><title>void __cdecl ControlLavaBlob(int16_t fx_num);</title></rect>
<rect width="12" height="12" x="360" y="225" class="known"><title>void __cdecl GiantYetiControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="375" y="225" class="known"><title>void __cdecl YetiControl(int16_t item_num);</title></rect>
<rect width="12" height="12" x="390" y="225" class="known"><title>void __cdecl BGND_Make640x480(uint8_t *bitmap, struct RGB888 *palette);</title></rect>
<rect width="12" height="12" x="405" y="225" class="known"><title>int32_t __cdecl BGND_AddTexture(int32_t tileIndex, BYTE *bitmap, int32_t pal_index, struct RGB888 *bmp_pal);</title></rect>
<rect width="12" height="12" x="420" y="225" class="known"><title>void __cdecl BGND_GetPageHandles(void);</title></rect>
<rect width="12" height="12" x="435" y="225" class="known"><title>void __cdecl BGND_DrawInGameBlack(void);</title></rect>
<rect width="12" height="12" x="450" y="225" class="known"><title>void __cdecl DrawQuad(float sx, float sy, float width, float height, D3DCOLOR color);</title></rect>
<rect width="12" height="12" x="465" y="225" class="known"><title>void __cdecl BGND_DrawInGameBackground(void);</title></rect>
<rect width="12" height="12" x="480" y="225" class="known"><title>void __cdecl DrawTextureTile(int32_t sx, int32_t sy, int32_t width, int32_t height, HWR_TEXHANDLE texSource, int32_t tu, int32_t tv, int32_t t_width, int32_t t_height, D3DCOLOR color0, D3DCOLOR color1, D3DCOLOR color2, D3DCOLOR color3);</title></rect>
<rect width="12" height="12" x="495" y="225" class="known"><title>D3DCOLOR __cdecl BGND_CenterLighting(int32_t x, int32_t y, int32_t width, int32_t height);</title></rect>
<rect width="12" height="12" x="510" y="225" class="known"><title>void __cdecl BGND_Free(void);</title></rect>
<rect width="12" height="12" x="525" y="225" class="known"><title>bool __cdecl BGND_Init(void);</title></rect>
<rect width="12" height="12" x="540" y="225" class="known"><title>void __cdecl Enumerate3DDevices(struct DISPLAY_ADAPTER *adapter);</title></rect>
<rect width="12" height="12" x="555" y="225" class="known"><title>bool __cdecl D3DCreate(void);</title></rect>
<rect width="12" height="12" x="570" y="225" class="known"><title>HRESULT __stdcall Enum3DDevicesCallback(GUID *lpGuid, LPTSTR lpDeviceDescription, LPTSTR lpDeviceName, LPD3DDEVICEDESC lpD3DHWDeviceDesc, LPD3DDEVICEDESC lpD3DHELDeviceDesc, LPVOID lpContext);</title></rect>
<rect width="12" height="12" x="585" y="225" class="known"><title>bool __cdecl D3DIsSupported(LPD3DDEVICEDESC desc);</title></rect>
<rect width="12" height="12" x="600" y="225" class="known"><title>bool __cdecl D3DSetViewport(void);</title></rect>
<rect width="12" height="12" x="615" y="225" class="known"><title>void __cdecl D3DDeviceCreate(LPDDS lpBackBuffer);</title></rect>
<rect width="12" height="12" x="630" y="225" class="known"><title>void __cdecl Direct3DRelease(void);</title></rect>
<rect width="12" height="12" x="645" y="225" class="known"><title>bool __cdecl Direct3DInit(void);</title></rect>
<rect width="12" height="12" x="660" y="225" class="unused"><title>sub_444990</title></rect>
<rect width="12" height="12" x="675" y="225" class="unused"><title>sub_4449A0</title></rect>
<rect width="12" height="12" x="690" y="225" class="unused"><title>sub_4449D0</title></rect>
<rect width="12" height="12" x="705" y="225" class="unused"><title>sub_444AA0</title></rect>
<rect width="12" height="12" x="720" y="225" class="unused"><title>sub_444AB0</title></rect>
<rect width="12" height="12" x="735" y="225" class="unused"><title>sub_444B20</title></rect>
<rect width="12" height="12" x="0" y="240" class="unused"><title>sub_444BB0</title></rect>
<rect width="12" height="12" x="15" y="240" class="unused"><title>sub_444BC0</title></rect>
<rect width="12" height="12" x="30" y="240" class="known"><title>bool __cdecl DDrawCreate(LPGUID lpGUID);</title></rect>
<rect width="12" height="12" x="45" y="240" class="known"><title>void __cdecl DDrawRelease(void);</title></rect>
<rect width="12" height="12" x="60" y="240" class="known"><title>void __cdecl GameWindowCalculateSizeFromClient(int32_t *width, int32_t *height);</title></rect>
<rect width="12" height="12" x="75" y="240" class="known"><title>void __cdecl GameWindowCalculateSizeFromClientByZero(int32_t *width, int32_t *height);</title></rect>
<rect width="12" height="12" x="90" y="240" class="known"><title>void __cdecl WinVidSetMinWindowSize(int32_t width, int32_t height);</title></rect>
<rect width="12" height="12" x="105" y="240" class="known"><title>void __cdecl WinVidClearMinWindowSize(void);</title></rect>
<rect width="12" height="12" x="120" y="240" class="known"><title>void __cdecl WinVidSetMaxWindowSize(int32_t width, int32_t height);</title></rect>
<rect width="12" height="12" x="135" y="240" class="known"><title>void __cdecl WinVidClearMaxWindowSize(void);</title></rect>
<rect width="12" height="12" x="150" y="240" class="known"><title>int32_t __cdecl CalculateWindowWidth(int32_t width, int32_t height);</title></rect>
<rect width="12" height="12" x="165" y="240" class="known"><title>int32_t __cdecl CalculateWindowHeight(int32_t width, int32_t height);</title></rect>
<rect width="12" height="12" x="180" y="240" class="known"><title>bool __cdecl WinVidGetMinMaxInfo(LPMINMAXINFO info);</title></rect>
<rect width="12" height="12" x="195" y="240" class="known"><title>HWND __cdecl WinVidFindGameWindow(void);</title></rect>
<rect width="12" height="12" x="210" y="240" class="known"><title>bool __cdecl WinVidSpinMessageLoop(bool needWait);</title></rect>
<rect width="12" height="12" x="225" y="240" class="known"><title>void __cdecl WinVidShowGameWindow(int32_t nCmdShow);</title></rect>
<rect width="12" height="12" x="240" y="240" class="known"><title>void __cdecl WinVidHideGameWindow(void);</title></rect>
<rect width="12" height="12" x="255" y="240" class="known"><title>void __cdecl WinVidSetGameWindowSize(int32_t width, int32_t height);</title></rect>
<rect width="12" height="12" x="270" y="240" class="known"><title>bool __cdecl ShowDDrawGameWindow(bool active);</title></rect>
<rect width="12" height="12" x="285" y="240" class="known"><title>bool __cdecl HideDDrawGameWindow(void);</title></rect>
<rect width="12" height="12" x="300" y="240" class="known"><title>HRESULT __cdecl DDrawSurfaceCreate(LPDDSDESC dsp, LPDDS *surface);</title></rect>
<rect width="12" height="12" x="315" y="240" class="known"><title>HRESULT __cdecl DDrawSurfaceRestoreLost(LPDDS surface1, LPDDS surface2, bool blank);</title></rect>
<rect width="12" height="12" x="330" y="240" class="known"><title>bool __cdecl WinVidClearBuffer(LPDDS surface, LPRECT rect, DWORD fillColor);</title></rect>
<rect width="12" height="12" x="345" y="240" class="known"><title>HRESULT __cdecl WinVidBufferLock(LPDDS surface, LPDDSDESC desc, DWORD flags);</title></rect>
<rect width="12" height="12" x="360" y="240" class="known"><title>HRESULT __cdecl WinVidBufferUnlock(LPDDS surface, LPDDSDESC desc);</title></rect>
<rect width="12" height="12" x="375" y="240" class="known"><title>bool __cdecl WinVidCopyBitmapToBuffer(LPDDS surface, BYTE *bitmap);</title></rect>
<rect width="12" height="12" x="390" y="240" class="known"><title>DWORD __cdecl GetRenderBitDepth(DWORD dwRGBBitCount);</title></rect>
<rect width="12" height="12" x="405" y="240" class="known"><title>void __thiscall WinVidGetColorBitMasks(COLOR_BIT_MASKS *bm, LPDDPIXELFORMAT pixelFormat);</title></rect>
<rect width="12" height="12" x="420" y="240" class="known"><title>void __cdecl BitMaskGetNumberOfBits(DWORD bitMask, DWORD *bitDepth, DWORD *bitOffset);</title></rect>
<rect width="12" height="12" x="435" y="240" class="known"><title>DWORD __cdecl CalculateCompatibleColor(COLOR_BIT_MASKS *mask, int32_t red, int32_t green, int32_t blue, int32_t alpha);</title></rect>
<rect width="12" height="12" x="450" y="240" class="known"><title>bool __cdecl WinVidGetDisplayMode(DISPLAY_MODE *dispMode);</title></rect>
<rect width="12" height="12" x="465" y="240" class="known"><title>bool __cdecl WinVidGoFullScreen(DISPLAY_MODE *dispMode);</title></rect>
<rect width="12" height="12" x="480" y="240" class="known"><title>bool __cdecl WinVidGoWindowed(int32_t width, int32_t height, DISPLAY_MODE *dispMode);</title></rect>
<rect width="12" height="12" x="495" y="240" class="known"><title>void __cdecl WinVidSetDisplayAdapter(DISPLAY_ADAPTER *dispAdapter);</title></rect>
<rect width="12" height="12" x="510" y="240" class="known"><title>bool __thiscall CompareVideoModes(DISPLAY_MODE *mode1, DISPLAY_MODE *mode2);</title></rect>
<rect width="12" height="12" x="525" y="240" class="known"><title>bool __cdecl WinVidGetDisplayModes(void);</title></rect>
<rect width="12" height="12" x="540" y="240" class="known"><title>HRESULT __stdcall EnumDisplayModesCallback(LPDDSDESC lpDDSurfaceDesc, LPVOID lpContext);</title></rect>
<rect width="12" height="12" x="555" y="240" class="known"><title>bool __cdecl WinVidInit(void);</title></rect>
<rect width="12" height="12" x="570" y="240" class="known"><title>bool __cdecl WinVidGetDisplayAdapters(void);</title></rect>
<rect width="12" height="12" x="585" y="240" class="decompiled"><title>void __thiscall S_FlaggedString_Delete(struct STRING_FLAGGED *string);</title></rect>
<rect width="12" height="12" x="600" y="240" class="known"><title>bool __cdecl EnumerateDisplayAdapters(struct DISPLAY_ADAPTER_LIST *displayAdapterList);</title></rect>
<rect width="12" height="12" x="615" y="240" class="known"><title>BOOL __stdcall EnumDisplayAdaptersCallback(GUID *lpGUID, LPTSTR lpDriverDescription, LPTSTR lpDriverName, LPVOID lpContext);</title></rect>
<rect width="12" height="12" x="630" y="240" class="decompiled"><title>void __thiscall S_FlaggedString_InitAdapter(struct DISPLAY_ADAPTER *adapter);</title></rect>
<rect width="12" height="12" x="645" y="240" class="known"><title>bool __cdecl WinVidRegisterGameWindowClass(void);</title></rect>
<rect width="12" height="12" x="660" y="240" class="known"><title>LRESULT __stdcall WinVidGameWindowProc(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="12" height="12" x="675" y="240" class="known"><title>void __cdecl WinVidResizeGameWindow(HWND hWnd, int32_t edge, LPRECT rect);</title></rect>
<rect width="12" height="12" x="690" y="240" class="known"><title>bool __cdecl WinVidCheckGameWindowPalette(HWND hWnd);</title></rect>
<rect width="12" height="12" x="705" y="240" class="known"><title>bool __cdecl WinVidCreateGameWindow(void);</title></rect>
<rect width="12" height="12" x="720" y="240" class="known"><title>void __cdecl WinVidFreeWindow(void);</title></rect>
<rect width="12" height="12" x="735" y="240" class="known"><title>void __cdecl WinVidExitMessage(void);</title></rect>
<rect width="12" height="12" x="0" y="255" class="known"><title>DISPLAY_ADAPTER_NODE *__cdecl WinVidGetDisplayAdapter(GUID *lpGuid);</title></rect>
<rect width="12" height="12" x="15" y="255" class="known"><title>void __cdecl WinVidStart(void);</title></rect>
<rect width="12" height="12" x="30" y="255" class="known"><title>void __cdecl WinVidFinish(void);</title></rect>
<rect width="12" height="12" x="45" y="255" class="known"><title>void __thiscall DisplayModeListInit(DISPLAY_MODE_LIST *pList);</title></rect>
<rect width="12" height="12" x="60" y="255" class="known"><title>void __thiscall DisplayModeListDelete(DISPLAY_MODE_LIST *pList);</title></rect>
<rect width="12" height="12" x="75" y="255" class="known"><title>DISPLAY_MODE *__thiscall InsertDisplayMode(DISPLAY_MODE_LIST *modeList, DISPLAY_MODE_NODE *before);</title></rect>
<rect width="12" height="12" x="90" y="255" class="known"><title>DISPLAY_MODE *__thiscall InsertDisplayModeInListHead(DISPLAY_MODE_LIST *modeList);</title></rect>
<rect width="12" height="12" x="105" y="255" class="known"><title>DISPLAY_MODE *__thiscall InsertDisplayModeInListTail(DISPLAY_MODE_LIST *modeList);</title></rect>
<rect width="12" height="12" x="120" y="255" class="unused"><title>sub_4470B0</title></rect>
<rect width="12" height="12" x="135" y="255" class="unused"><title>sub_4470C0</title></rect>
<rect width="12" height="12" x="150" y="255" class="unused"><title>sub_4470F0</title></rect>
<rect width="12" height="12" x="165" y="255" class="unused"><title>sub_447160</title></rect>
<rect width="12" height="12" x="180" y="255" class="unused"><title>sub_447170</title></rect>
<rect width="12" height="12" x="195" y="255" class="unused"><title>sub_4471C0</title></rect>
<rect width="12" height="12" x="210" y="255" class="known"><title>bool __cdecl DInputCreate(void);</title></rect>
<rect width="12" height="12" x="225" y="255" class="known"><title>void __cdecl DInputRelease(void);</title></rect>
<rect width="12" height="12" x="240" y="255" class="known"><title>void __cdecl WinInReadKeyboard(LPVOID lpInputData);</title></rect>
<rect width="12" height="12" x="255" y="255" class="known"><title>DWORD __cdecl WinInReadJoystick(int32_t *xPos, int32_t *yPos);</title></rect>
<rect width="12" height="12" x="270" y="255" class="todo"><title>sub_4473A0</title></rect>
<rect width="12" height="12" x="285" y="255" class="known"><title>bool __cdecl WinInputInit(void);</title></rect>
<rect width="12" height="12" x="300" y="255" class="known"><title>bool __cdecl DInputEnumDevices(JOYSTICK_LIST *joystickList);</title></rect>
<rect width="12" height="12" x="315" y="255" class="known"><title>BOOL __stdcall DInputEnumDevicesCallback(LPCDIDEVICEINSTANCE lpddi, LPVOID pvRef);</title></rect>
<rect width="12" height="12" x="330" y="255" class="decompiled"><title>void __thiscall S_FlaggedString_Create(struct STRING_FLAGGED *string, int32_t size);</title></rect>
<rect width="12" height="12" x="345" y="255" class="known"><title>JOYSTICK_NODE *__cdecl GetJoystick(GUID *lpGuid);</title></rect>
<rect width="12" height="12" x="360" y="255" class="known"><title>void __cdecl DInputKeyboardCreate(void);</title></rect>
<rect width="12" height="12" x="375" y="255" class="known"><title>void __cdecl DInputKeyboardRelease(void);</title></rect>
<rect width="12" height="12" x="390" y="255" class="known"><title>bool __cdecl DInputJoystickCreate(void);</title></rect>
<rect width="12" height="12" x="405" y="255" class="known"><title>void __cdecl WinInStart(void);</title></rect>
<rect width="12" height="12" x="420" y="255" class="known"><title>void __cdecl WinInFinish(void);</title></rect>
<rect width="12" height="12" x="435" y="255" class="known"><title>void __cdecl WinInRunControlPanel(HWND hWnd);</title></rect>
<rect width="12" height="12" x="450" y="255" class="known"><title>void __cdecl IncreaseScreenSize(void);</title></rect>
<rect width="12" height="12" x="465" y="255" class="known"><title>void __cdecl DecreaseScreenSize(void);</title></rect>
<rect width="12" height="12" x="480" y="255" class="known"><title>void __cdecl setup_screen_size(void);</title></rect>
<rect width="12" height="12" x="495" y="255" class="known"><title>void __cdecl TempVideoAdjust(int32_t hires, double sizer);</title></rect>
<rect width="12" height="12" x="510" y="255" class="known"><title>void __cdecl TempVideoRemove(void);</title></rect>
<rect width="12" height="12" x="525" y="255" class="known"><title>void __cdecl S_FadeInInventory(BOOL isFade);</title></rect>
<rect width="12" height="12" x="540" y="255" class="known"><title>void __cdecl S_FadeOutInventory(BOOL isFade);</title></rect>
<rect width="12" height="12" x="555" y="255" class="unused"><title>sub_447A80</title></rect>
<rect width="12" height="12" x="570" y="255" class="unused"><title>sub_447A90</title></rect>
<rect width="12" height="12" x="585" y="255" class="unused"><title>sub_447AC0</title></rect>
<rect width="12" height="12" x="600" y="255" class="unused"><title>sub_447B30</title></rect>
<rect width="12" height="12" x="615" y="255" class="unused"><title>sub_447B40</title></rect>
<rect width="12" height="12" x="630" y="255" class="unused"><title>sub_447B90</title></rect>
<rect width="12" height="12" x="645" y="255" class="decompiled"><title>const struct SOUND_ADAPTER_NODE *__cdecl S_Audio_Sample_GetAdapter(GUID *guid);</title></rect>
<rect width="12" height="12" x="660" y="255" class="decompiled"><title>void __cdecl S_Audio_Sample_CloseAllTracks(void);</title></rect>
<rect width="12" height="12" x="675" y="255" class="decompiled"><title>bool __cdecl S_Audio_Sample_Load(int32_t sample_id, LPWAVEFORMATEX format, const void *data, int32_t data_size);</title></rect>
<rect width="12" height="12" x="690" y="255" class="decompiled"><title>bool __cdecl S_Audio_Sample_IsTrackPlaying(int32_t track_id);</title></rect>
<rect width="12" height="12" x="705" y="255" class="decompiled"><title>int32_t __cdecl S_Audio_Sample_Play(int32_t sample_id, int32_t volume, int32_t pitch, int32_t pan, int32_t flags);</title></rect>
<rect width="12" height="12" x="720" y="255" class="decompiled"><title>int32_t __cdecl S_Audio_Sample_GetFreeTrackIndex(void);</title></rect>
<rect width="12" height="12" x="735" y="255" class="decompiled"><title>void __cdecl S_Audio_Sample_AdjustTrackVolumeAndPan(int32_t track_id, int32_t volume, int32_t pan);</title></rect>
<rect width="12" height="12" x="0" y="270" class="decompiled"><title>void __cdecl S_Audio_Sample_AdjustTrackPitch(int32_t track_id, int32_t pitch);</title></rect>
<rect width="12" height="12" x="15" y="270" class="decompiled"><title>void __cdecl S_Audio_Sample_CloseTrack(int32_t track_id);</title></rect>
<rect width="12" height="12" x="30" y="270" class="todo"><title>sub_447FA0</title></rect>
<rect width="12" height="12" x="45" y="270" class="decompiled"><title>bool __cdecl S_Audio_Sample_Init(void);</title></rect>
<rect width="12" height="12" x="60" y="270" class="decompiled"><title>bool __cdecl S_Audio_Sample_DSoundEnumerate(struct SOUND_ADAPTER_LIST *adapter_list);</title></rect>
<rect width="12" height="12" x="75" y="270" class="decompiled"><title>BOOL __stdcall S_Audio_Sample_DSoundEnumCallback(LPGUID guid, LPCTSTR description, LPCTSTR module, LPVOID context);</title></rect>
<rect width="12" height="12" x="90" y="270" class="decompiled"><title>void __cdecl S_Audio_Sample_Init2(HWND hwnd);</title></rect>
<rect width="12" height="12" x="105" y="270" class="decompiled"><title>bool __cdecl S_Audio_Sample_DSoundCreate(GUID *guid);</title></rect>
<rect width="12" height="12" x="120" y="270" class="decompiled"><title>bool __cdecl S_Audio_Sample_DSoundBufferTest(void);</title></rect>
<rect width="12" height="12" x="135" y="270" class="decompiled"><title>void __cdecl S_Audio_Sample_Shutdown(void);</title></rect>
<rect width="12" height="12" x="150" y="270" class="decompiled"><title>bool __cdecl S_Audio_Sample_IsEnabled(void);</title></rect>
<rect width="12" height="12" x="165" y="270" class="todo"><title>sub_448410</title></rect>
<rect width="12" height="12" x="180" y="270" class="todo"><title>sub_448420</title></rect>
<rect width="12" height="12" x="195" y="270" class="known"><title>void __cdecl CreateScreenBuffers(void);</title></rect>
<rect width="12" height="12" x="210" y="270" class="known"><title>void __cdecl CreatePrimarySurface(void);</title></rect>
<rect width="12" height="12" x="225" y="270" class="known"><title>void __cdecl CreateBackBuffer(void);</title></rect>
<rect width="12" height="12" x="240" y="270" class="known"><title>void __cdecl CreateClipper(void);</title></rect>
<rect width="12" height="12" x="255" y="270" class="known"><title>void __cdecl CreateWindowPalette(void);</title></rect>
<rect width="12" height="12" x="270" y="270" class="known"><title>void __cdecl CreateZBuffer(void);</title></rect>
<rect width="12" height="12" x="285" y="270" class="known"><title>DWORD __cdecl GetZBufferDepth(void);</title></rect>
<rect width="12" height="12" x="300" y="270" class="known"><title>void __cdecl CreateRenderBuffer(void);</title></rect>
<rect width="12" height="12" x="315" y="270" class="known"><title>void __cdecl CreatePictureBuffer(void);</title></rect>
<rect width="12" height="12" x="330" y="270" class="known"><title>void __cdecl ClearBuffers(DWORD flags, DWORD fillColor);</title></rect>
<rect width="12" height="12" x="345" y="270" class="known"><title>void __cdecl RestoreLostBuffers(void);</title></rect>
<rect width="12" height="12" x="360" y="270" class="known"><title>void __cdecl UpdateFrame(bool needRunMessageLoop, LPRECT rect);</title></rect>
<rect width="12" height="12" x="375" y="270" class="known"><title>void __cdecl WaitPrimaryBufferFlip(void);</title></rect>
<rect width="12" height="12" x="390" y="270" class="known"><title>bool __cdecl RenderInit(void);</title></rect>
<rect width="12" height="12" x="405" y="270" class="known"><title>void __cdecl RenderStart(bool isReset);</title></rect>
<rect width="12" height="12" x="420" y="270" class="known"><title>void __cdecl RenderFinish(bool needToClearTextures);</title></rect>
<rect width="12" height="12" x="435" y="270" class="known"><title>bool __cdecl ApplySettings(struct APP_SETTINGS *newSettings);</title></rect>
<rect width="12" height="12" x="450" y="270" class="known"><title>void __cdecl FmvBackToGame(void);</title></rect>
<rect width="12" height="12" x="465" y="270" class="known"><title>void __cdecl GameApplySettings(struct APP_SETTINGS *newSettings);</title></rect>
<rect width="12" height="12" x="480" y="270" class="known"><title>void __cdecl UpdateGameResolution(void);</title></rect>
<rect width="12" height="12" x="495" y="270" class="known"><title>LPCTSTR __cdecl DecodeErrorMessage(DWORD errorCode);</title></rect>
<rect width="12" height="12" x="510" y="270" class="known"><title>BOOL __cdecl ReadFileSync(HANDLE hFile, LPVOID lpBuffer, DWORD nBytesToRead, LPDWORD lpnBytesRead, LPOVERLAPPED lpOverlapped);</title></rect>
<rect width="12" height="12" x="525" y="270" class="known"><title>BOOL __cdecl LoadTexturePages(HANDLE hFile);</title></rect>
<rect width="12" height="12" x="540" y="270" class="known"><title>BOOL __cdecl LoadRooms(HANDLE hFile);</title></rect>
<rect width="12" height="12" x="555" y="270" class="known"><title>void __cdecl AdjustTextureUVs(bool resetUvAdd);</title></rect>
<rect width="12" height="12" x="570" y="270" class="known"><title>BOOL __cdecl LoadObjects(HANDLE hFile);</title></rect>
<rect width="12" height="12" x="585" y="270" class="known"><title>BOOL __cdecl LoadSprites(HANDLE hFile);</title></rect>
<rect width="12" height="12" x="600" y="270" class="known"><title>BOOL __cdecl LoadItems(HANDLE hFile);</title></rect>
<rect width="12" height="12" x="615" y="270" class="known"><title>BOOL __cdecl LoadDepthQ(HANDLE hFile);</title></rect>
<rect width="12" height="12" x="630" y="270" class="known"><title>BOOL __cdecl LoadPalettes(HANDLE hFile);</title></rect>
<rect width="12" height="12" x="645" y="270" class="known"><title>BOOL __cdecl LoadCameras(HANDLE hFile);</title></rect>
<rect width="12" height="12" x="660" y="270" class="known"><title>BOOL __cdecl LoadSoundEffects(HANDLE hFile);</title></rect>
<rect width="12" height="12" x="675" y="270" class="known"><title>BOOL __cdecl LoadBoxes(HANDLE hFile);</title></rect>
<rect width="12" height="12" x="690" y="270" class="known"><title>BOOL __cdecl LoadAnimatedTextures(HANDLE hFile);</title></rect>
<rect width="12" height="12" x="705" y="270" class="known"><title>BOOL __cdecl LoadCinematic(HANDLE hFile);</title></rect>
<rect width="12" height="12" x="720" y="270" class="known"><title>BOOL __cdecl LoadDemo(HANDLE hFile);</title></rect>
<rect width="12" height="12" x="735" y="270" class="known"><title>void __cdecl LoadDemoExternal(LPCTSTR levelName);</title></rect>
<rect width="12" height="12" x="0" y="285" class="known"><title>BOOL __cdecl LoadSamples(HANDLE hFile);</title></rect>
<rect width="12" height="12" x="15" y="285" class="known"><title>void __cdecl ChangeFileNameExtension(char *fileName, const char *fileExt);</title></rect>
<rect width="12" height="12" x="30" y="285" class="known"><title>LPCTSTR __cdecl GetFullPath(LPCTSTR fileName);</title></rect>
<rect width="12" height="12" x="45" y="285" class="known"><title>BOOL __cdecl SelectDrive(void);</title></rect>
<rect width="12" height="12" x="60" y="285" class="known"><title>BOOL __cdecl LoadLevel(LPCTSTR fileName, int32_t levelID);</title></rect>
<rect width="12" height="12" x="75" y="285" class="known"><title>BOOL __cdecl S_LoadLevelFile(LPCTSTR fileName, int32_t levelID, GF_LEVEL_TYPE levelType);</title></rect>
<rect width="12" height="12" x="90" y="285" class="known"><title>void __cdecl S_UnloadLevelFile(void);</title></rect>
<rect width="12" height="12" x="105" y="285" class="known"><title>void __cdecl S_AdjustTexelCoordinates(void);</title></rect>
<rect width="12" height="12" x="120" y="285" class="known"><title>BOOL __cdecl S_ReloadLevelGraphics(BOOL reloadPalettes, BOOL reloadTexPages);</title></rect>
<rect width="12" height="12" x="135" y="285" class="known"><title>BOOL __cdecl Read_Strings(DWORD dwCount, char **stringTable, char **stringBuffer, LPDWORD lpBufferSize, HANDLE hFile);</title></rect>
<rect width="12" height="12" x="150" y="285" class="known"><title>BOOL __cdecl S_LoadGameFlow(LPCTSTR fileName);</title></rect>
<rect width="12" height="12" x="165" y="285" class="known"><title>bool __cdecl PlayFMV(LPCTSTR fileName);</title></rect>
<rect width="12" height="12" x="180" y="285" class="known"><title>void __cdecl WinPlayFMV(LPCTSTR fileName, bool isPlayback);</title></rect>
<rect width="12" height="12" x="195" y="285" class="known"><title>void __cdecl WinStopFMV(bool isPlayback);</title></rect>
<rect width="12" height="12" x="210" y="285" class="known"><title>bool __cdecl IntroFMV(LPCTSTR fileName1, LPCTSTR fileName2);</title></rect>
<rect width="12" height="12" x="225" y="285" class="known"><title>uint16_t __cdecl S_COLOUR(int32_t red, int32_t green, int32_t blue);</title></rect>
<rect width="12" height="12" x="240" y="285" class="known"><title>void __cdecl S_DrawScreenLine(int32_t x, int32_t y, int32_t z, int32_t xLen, int32_t yLen, BYTE colorIdx, D3DCOLOR *gour, uint16_t flags);</title></rect>
<rect width="12" height="12" x="255" y="285" class="known"><title>void __cdecl S_DrawScreenBox(int32_t sx, int32_t sy, int32_t z, int32_t width, int32_t height, BYTE colorIdx, GOURAUD_OUTLINE *gour, uint16_t flags);</title></rect>
<rect width="12" height="12" x="270" y="285" class="known"><title>void __cdecl S_DrawScreenFBox(int32_t sx, int32_t sy, int32_t z, int32_t width, int32_t height, BYTE colorIdx, GOURAUD_FILL *gour, uint16_t flags);</title></rect>
<rect width="12" height="12" x="285" y="285" class="known"><title>void __cdecl S_FinishInventory(void);</title></rect>
<rect width="12" height="12" x="300" y="285" class="known"><title>void __cdecl S_FadeToBlack(void);</title></rect>
<rect width="12" height="12" x="315" y="285" class="known"><title>void __cdecl S_Wait(int32_t timeout, BOOL inputCheck);</title></rect>
<rect width="12" height="12" x="330" y="285" class="known"><title>bool __cdecl S_PlayFMV(LPCTSTR fileName);</title></rect>
<rect width="12" height="12" x="345" y="285" class="known"><title>bool __cdecl S_IntroFMV(LPCTSTR fileName1, LPCTSTR fileName2);</title></rect>
<rect width="12" height="12" x="360" y="285" class="known"><title>int16_t __cdecl StartGame(int32_t levelID, GF_LEVEL_TYPE levelType);</title></rect>
<rect width="12" height="12" x="375" y="285" class="known"><title>int32_t __cdecl GameLoop(BOOL demoMode);</title></rect>
<rect width="12" height="12" x="390" y="285" class="known"><title>int32_t __cdecl LevelCompleteSequence(void);</title></rect>
<rect width="12" height="12" x="405" y="285" class="known"><title>int32_t __cdecl LevelStats(int32_t levelID);</title></rect>
<rect width="12" height="12" x="420" y="285" class="known"><title>int32_t __cdecl GameStats(int32_t levelID);</title></rect>
<rect width="12" height="12" x="435" y="285" class="known"><title>int32_t __cdecl Random_GetControl(void);</title></rect>
<rect width="12" height="12" x="450" y="285" class="known"><title>void __cdecl SeedRandomControl(int32_t seed);</title></rect>
<rect width="12" height="12" x="465" y="285" class="known"><title>int32_t __cdecl GetRandomDraw(void);</title></rect>
<rect width="12" height="12" x="480" y="285" class="known"><title>void __cdecl SeedRandomDraw(int32_t seed);</title></rect>
<rect width="12" height="12" x="495" y="285" class="known"><title>void __cdecl GetValidLevelsList(REQUEST_INFO *req);</title></rect>
<rect width="12" height="12" x="510" y="285" class="known"><title>void __cdecl GetSavedGamesList(REQUEST_INFO *req);</title></rect>
<rect width="12" height="12" x="525" y="285" class="known"><title>void __cdecl DisplayCredits(void);</title></rect>
<rect width="12" height="12" x="540" y="285" class="known"><title>BOOL __cdecl S_FrontEndCheck(void);</title></rect>
<rect width="12" height="12" x="555" y="285" class="known"><title>int32_t __cdecl S_SaveGame(const void *save_data, uint32_t save_size, int32_t slot_num);</title></rect>
<rect width="12" height="12" x="570" y="285" class="known"><title>int32_t __cdecl S_LoadGame(void *save_data, uint32_t save_size, int32_t slot_num);</title></rect>
<rect width="12" height="12" x="585" y="285" class="known"><title>void __cdecl HWR_InitState(void);</title></rect>
<rect width="12" height="12" x="600" y="285" class="known"><title>void __cdecl HWR_ResetTexSource(void);</title></rect>
<rect width="12" height="12" x="615" y="285" class="known"><title>void __cdecl HWR_ResetColorKey(void);</title></rect>
<rect width="12" height="12" x="630" y="285" class="known"><title>void __cdecl HWR_ResetZBuffer(void);</title></rect>
<rect width="12" height="12" x="645" y="285" class="known"><title>void __cdecl HWR_TexSource(HWR_TEXHANDLE texSource);</title></rect>
<rect width="12" height="12" x="660" y="285" class="known"><title>void __cdecl HWR_EnableColorKey(bool state);</title></rect>
<rect width="12" height="12" x="675" y="285" class="known"><title>void __cdecl HWR_EnableZBuffer(bool z_write_enable, bool z_enable);</title></rect>
<rect width="12" height="12" x="690" y="285" class="known"><title>void __cdecl HWR_BeginScene(void);</title></rect>
<rect width="12" height="12" x="705" y="285" class="known"><title>void __cdecl HWR_DrawPolyList(void);</title></rect>
<rect width="12" height="12" x="720" y="285" class="known"><title>void __cdecl HWR_LoadTexturePages(int32_t pagesCount, LPVOID pagesBuffer, RGB888 *palette);</title></rect>
<rect width="12" height="12" x="735" y="285" class="known"><title>void __cdecl HWR_FreeTexturePages(void);</title></rect>
<rect width="12" height="12" x="0" y="300" class="known"><title>void __cdecl HWR_GetPageHandles(void);</title></rect>
<rect width="12" height="12" x="15" y="300" class="known"><title>bool __cdecl HWR_VertexBufferFull(void);</title></rect>
<rect width="12" height="12" x="30" y="300" class="known"><title>bool __cdecl HWR_Init(void);</title></rect>
<rect width="12" height="12" x="45" y="300" class="known"><title>BOOL __cdecl S_InitialiseSystem(void);</title></rect>
<rect width="12" height="12" x="60" y="300" class="known"><title>void __cdecl GameBuf_Shutdown(void);</title></rect>
<rect width="12" height="12" x="75" y="300" class="known"><title>void __cdecl init_game_malloc(void);</title></rect>
<rect width="12" height="12" x="90" y="300" class="known"><title>void *__cdecl game_malloc(DWORD allocSize, DWORD bufIndex);</title></rect>
<rect width="12" height="12" x="105" y="300" class="known"><title>void __cdecl game_free(DWORD freeSize);</title></rect>
<rect width="12" height="12" x="120" y="300" class="known"><title>void __cdecl CalculateWibbleTable(void);</title></rect>
<rect width="12" height="12" x="135" y="300" class="known"><title>void __cdecl S_SeedRandom(void);</title></rect>
<rect width="12" height="12" x="150" y="300" class="known"><title>BOOL __cdecl Key(KEYMAP keyMap);</title></rect>
<rect width="12" height="12" x="165" y="300" class="known"><title>bool __cdecl S_UpdateInput(void);</title></rect>
<rect width="12" height="12" x="180" y="300" class="known"><title>int32_t __cdecl RenderErrorBox(int32_t errorCode);</title></rect>
<rect width="12" height="12" x="195" y="300" class="known"><title>int32_t __stdcall WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPTSTR lpCmdLine, int32_t nShowCmd);</title></rect>
<rect width="12" height="12" x="210" y="300" class="unused"><title>sub_44E6F0</title></rect>
<rect width="12" height="12" x="225" y="300" class="known"><title>int32_t __cdecl GameInit(bool skipCDInit);</title></rect>
<rect width="12" height="12" x="240" y="300" class="known"><title>void __cdecl Shell_Cleanup(void);</title></rect>
<rect width="12" height="12" x="255" y="300" class="known"><title>int32_t __cdecl WinGameStart(void);</title></rect>
<rect width="12" height="12" x="270" y="300" class="known"><title>void __cdecl Shell_Shutdown(void);</title></rect>
<rect width="12" height="12" x="285" y="300" class="todo"><title>sub_44E860</title></rect>
<rect width="12" height="12" x="300" y="300" class="todo"><title>sub_44E880</title></rect>
<rect width="12" height="12" x="315" y="300" class="decompiled"><title>void __cdecl Shell_ExitSystem(const char *message);</title></rect>
<rect width="12" height="12" x="330" y="300" class="known"><title>void __cdecl ScreenShotPCX(void);</title></rect>
<rect width="12" height="12" x="345" y="300" class="known"><title>DWORD __cdecl CompPCX(BYTE *bitmap, DWORD width, DWORD height, RGB888 *palette, BYTE **pcxData);</title></rect>
<rect width="12" height="12" x="360" y="300" class="known"><title>DWORD __cdecl EncodeLinePCX(BYTE *src, DWORD width, BYTE *dst);</title></rect>
<rect width="12" height="12" x="375" y="300" class="known"><title>DWORD __cdecl EncodePutPCX(BYTE value, BYTE num, BYTE *buffer);</title></rect>
<rect width="12" height="12" x="390" y="300" class="known"><title>void __cdecl ScreenShot(LPDDS screen);</title></rect>
<rect width="12" height="12" x="405" y="300" class="known"><title>void __cdecl do_inventory_options(INVENTORY_ITEM *item);</title></rect>
<rect width="12" height="12" x="420" y="300" class="known"><title>void __cdecl do_passport_option(INVENTORY_ITEM *item);</title></rect>
<rect width="12" height="12" x="435" y="300" class="known"><title>void __cdecl do_detail_option(INVENTORY_ITEM *item);</title></rect>
<rect width="12" height="12" x="450" y="300" class="known"><title>void __cdecl do_sound_option(INVENTORY_ITEM *item);</title></rect>
<rect width="12" height="12" x="465" y="300" class="known"><title>void __cdecl do_compass_option(INVENTORY_ITEM *item);</title></rect>
<rect width="12" height="12" x="480" y="300" class="known"><title>void __cdecl FlashConflicts(void);</title></rect>
<rect width="12" height="12" x="495" y="300" class="known"><title>void __cdecl DefaultConflict(void);</title></rect>
<rect width="12" height="12" x="510" y="300" class="known"><title>void __cdecl do_control_option(INVENTORY_ITEM *item);</title></rect>
<rect width="12" height="12" x="525" y="300" class="known"><title>void __cdecl S_ShowControls(void);</title></rect>
<rect width="12" height="12" x="540" y="300" class="known"><title>void __cdecl S_ChangeCtrlText(void);</title></rect>
<rect width="12" height="12" x="555" y="300" class="known"><title>void __cdecl S_RemoveCtrlText(void);</title></rect>
<rect width="12" height="12" x="570" y="300" class="known"><title>int32_t __cdecl GetRenderHeight(void);</title></rect>
<rect width="12" height="12" x="585" y="300" class="known"><title>int32_t __cdecl GetRenderWidth(void);</title></rect>
<rect width="12" height="12" x="600" y="300" class="known"><title>void __cdecl S_InitialisePolyList(BOOL clearBackBuffer);</title></rect>
<rect width="12" height="12" x="615" y="300" class="known"><title>DWORD __cdecl S_DumpScreen(void);</title></rect>
<rect width="12" height="12" x="630" y="300" class="known"><title>void __cdecl S_ClearScreen(void);</title></rect>
<rect width="12" height="12" x="645" y="300" class="known"><title>void __cdecl S_InitialiseScreen(GF_LEVEL_TYPE levelType);</title></rect>
<rect width="12" height="12" x="660" y="300" class="known"><title>void __cdecl S_OutputPolyList(void);</title></rect>
<rect width="12" height="12" x="675" y="300" class="known"><title>int32_t __cdecl S_GetObjectBounds(int16_t *bPtr);</title></rect>
<rect width="12" height="12" x="690" y="300" class="known"><title>void __cdecl S_InsertBackPolygon(int32_t x0, int32_t y0, int32_t x1, int32_t y1);</title></rect>
<rect width="12" height="12" x="705" y="300" class="known"><title>void __cdecl S_PrintShadow(int16_t radius, int16_t *bPtr, ITEM_INFO *item);</title></rect>
<rect width="12" height="12" x="720" y="300" class="known"><title>void __cdecl S_CalculateLight(int32_t x, int32_t y, int32_t z, int16_t room_num);</title></rect>
<rect width="12" height="12" x="735" y="300" class="known"><title>void __cdecl S_CalculateStaticLight(int16_t adder);</title></rect>
<rect width="12" height="12" x="0" y="315" class="known"><title>void __cdecl S_CalculateStaticMeshLight(int32_t x, int32_t y, int32_t z, int32_t shade1, int32_t shade2, ROOM_INFO *room);</title></rect>
<rect width="12" height="12" x="15" y="315" class="known"><title>void __cdecl S_LightRoom(ROOM_INFO *room);</title></rect>
<rect width="12" height="12" x="30" y="315" class="known"><title>void __cdecl S_DrawHealthBar(int32_t percent);</title></rect>
<rect width="12" height="12" x="45" y="315" class="known"><title>void __cdecl S_DrawAirBar(int32_t percent);</title></rect>
<rect width="12" height="12" x="60" y="315" class="known"><title>void __cdecl AnimateTextures(int32_t nTicks);</title></rect>
<rect width="12" height="12" x="75" y="315" class="known"><title>void __cdecl S_SetupBelowWater(BOOL underwater);</title></rect>
<rect width="12" height="12" x="90" y="315" class="known"><title>void __cdecl S_SetupAboveWater(BOOL underwater);</title></rect>
<rect width="12" height="12" x="105" y="315" class="known"><title>void __cdecl S_AnimateTextures(int32_t nTicks);</title></rect>
<rect width="12" height="12" x="120" y="315" class="known"><title>void __cdecl S_DisplayPicture(LPCTSTR fileName, BOOL isTitle);</title></rect>
<rect width="12" height="12" x="135" y="315" class="known"><title>void __cdecl S_SyncPictureBufferPalette(void);</title></rect>
<rect width="12" height="12" x="150" y="315" class="known"><title>void __cdecl S_DontDisplayPicture(void);</title></rect>
<rect width="12" height="12" x="165" y="315" class="known"><title>void __cdecl ScreenDump(void);</title></rect>
<rect width="12" height="12" x="180" y="315" class="known"><title>void __cdecl ScreenPartialDump(void);</title></rect>
<rect width="12" height="12" x="195" y="315" class="known"><title>void __cdecl FadeToPal(int32_t fadeValue, RGB888 *palette);</title></rect>
<rect width="12" height="12" x="210" y="315" class="known"><title>void __cdecl ScreenClear(bool isPhdWinSize);</title></rect>
<rect width="12" height="12" x="225" y="315" class="known"><title>void __cdecl S_CopyScreenToBuffer(void);</title></rect>
<rect width="12" height="12" x="240" y="315" class="known"><title>void __cdecl S_CopyBufferToScreen(void);</title></rect>
<rect width="12" height="12" x="255" y="315" class="known"><title>BOOL __cdecl DecompPCX(LPCBYTE pcx, DWORD pcxSize, LPBYTE pic, RGB888 *pal);</title></rect>
<rect width="12" height="12" x="270" y="315" class="todo"><title>sub_4523A0</title></rect>
<rect width="12" height="12" x="285" y="315" class="todo"><title>sub_4523B0</title></rect>
<rect width="12" height="12" x="300" y="315" class="known"><title>bool __cdecl OpenGameRegistryKey(LPCTSTR key);</title></rect>
<rect width="12" height="12" x="315" y="315" class="known"><title>LONG __cdecl CloseGameRegistryKey(void);</title></rect>
<rect width="12" height="12" x="330" y="315" class="known"><title>bool __cdecl SE_WriteAppSettings(APP_SETTINGS *settings);</title></rect>
<rect width="12" height="12" x="345" y="315" class="known"><title>int32_t __cdecl SE_ReadAppSettings(APP_SETTINGS *settings);</title></rect>
<rect width="12" height="12" x="360" y="315" class="known"><title>bool __cdecl SE_GraphicsTestStart(void);</title></rect>
<rect width="12" height="12" x="375" y="315" class="known"><title>void __cdecl SE_GraphicsTestFinish(void);</title></rect>
<rect width="12" height="12" x="390" y="315" class="known"><title>int32_t __cdecl SE_GraphicsTestExecute(void);</title></rect>
<rect width="12" height="12" x="405" y="315" class="known"><title>int32_t __cdecl SE_GraphicsTest(void);</title></rect>
<rect width="12" height="12" x="420" y="315" class="known"><title>bool __cdecl SE_SoundTestStart(void);</title></rect>
<rect width="12" height="12" x="435" y="315" class="known"><title>void __cdecl SE_SoundTestFinish(void);</title></rect>
<rect width="12" height="12" x="450" y="315" class="known"><title>int32_t __cdecl SE_SoundTestExecute(void);</title></rect>
<rect width="12" height="12" x="465" y="315" class="known"><title>int32_t __cdecl SE_SoundTest(void);</title></rect>
<rect width="12" height="12" x="480" y="315" class="known"><title>int32_t __stdcall SE_PropSheetCallback(HWND hwndDlg, UINT uMsg, LPARAM lParam);</title></rect>
<rect width="12" height="12" x="495" y="315" class="known"><title>LRESULT __stdcall SE_NewPropSheetWndProc(HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="12" height="12" x="510" y="315" class="known"><title>bool __cdecl SE_ShowSetupDialog(HWND hParent, bool isDefault);</title></rect>
<rect width="12" height="12" x="525" y="315" class="known"><title>INT_PTR __stdcall SE_GraphicsDlgProc(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="12" height="12" x="540" y="315" class="known"><title>void __cdecl SE_GraphicsDlgFullScreenModesUpdate(HWND hwndDlg);</title></rect>
<rect width="12" height="12" x="555" y="315" class="known"><title>void __cdecl SE_GraphicsAdapterSet(HWND hwndDlg, DISPLAY_ADAPTER_NODE *adapter);</title></rect>
<rect width="12" height="12" x="570" y="315" class="known"><title>void __cdecl SE_GraphicsDlgUpdate(HWND hwndDlg);</title></rect>
<rect width="12" height="12" x="585" y="315" class="known"><title>void __cdecl SE_GraphicsDlgInit(HWND hwndDlg);</title></rect>
<rect width="12" height="12" x="600" y="315" class="known"><title>INT_PTR __stdcall SE_SoundDlgProc(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="12" height="12" x="615" y="315" class="known"><title>void __cdecl SE_SoundAdapterSet(HWND hwndDlg, SOUND_ADAPTER_NODE *adapter);</title></rect>
<rect width="12" height="12" x="630" y="315" class="known"><title>void __cdecl SE_SoundDlgUpdate(HWND hwndDlg);</title></rect>
<rect width="12" height="12" x="645" y="315" class="known"><title>void __cdecl SE_SoundDlgInit(HWND hwndDlg);</title></rect>
<rect width="12" height="12" x="660" y="315" class="known"><title>INT_PTR __stdcall SE_ControlsDlgProc(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="12" height="12" x="675" y="315" class="known"><title>void __cdecl SE_ControlsJoystickSet(HWND hwndDlg, JOYSTICK_NODE *joystick);</title></rect>
<rect width="12" height="12" x="690" y="315" class="known"><title>void __cdecl SE_ControlsDlgUpdate(HWND hwndDlg);</title></rect>
<rect width="12" height="12" x="705" y="315" class="known"><title>void __cdecl SE_ControlsDlgInit(HWND hwndDlg);</title></rect>
<rect width="12" height="12" x="720" y="315" class="known"><title>INT_PTR __stdcall SE_OptionsDlgProc(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="12" height="12" x="735" y="315" class="known"><title>void __cdecl SE_OptionsDlgUpdate(HWND hwndDlg);</title></rect>
<rect width="12" height="12" x="0" y="330" class="known"><title>void __cdecl SE_OptionsStrCat(LPTSTR *dstString, bool isEnabled, bool *isNext, LPCTSTR srcString);</title></rect>
<rect width="12" height="12" x="15" y="330" class="known"><title>INT_PTR __stdcall SE_AdvancedDlgProc(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="12" height="12" x="30" y="330" class="known"><title>void __cdecl SE_AdvancedDlgUpdate(HWND hwndDlg);</title></rect>
<rect width="12" height="12" x="45" y="330" class="known"><title>void __cdecl SE_AdvancedDlgInit(HWND hwndDlg);</title></rect>
<rect width="12" height="12" x="60" y="330" class="known"><title>HWND __cdecl SE_FindSetupDialog(void);</title></rect>
<rect width="12" height="12" x="75" y="330" class="known"><title>BOOL __cdecl GameMain(void);</title></rect>
<rect width="12" height="12" x="90" y="330" class="known"><title>int16_t __cdecl TitleSequence(void);</title></rect>
<rect width="12" height="12" x="105" y="330" class="known"><title>void __cdecl CheckCheatMode(void);</title></rect>
<rect width="12" height="12" x="120" y="330" class="known"><title>void __cdecl S_SaveSettings(void);</title></rect>
<rect width="12" height="12" x="135" y="330" class="known"><title>void __cdecl S_LoadSettings(void);</title></rect>
<rect width="12" height="12" x="150" y="330" class="decompiled"><title>int32_t __cdecl S_Audio_Sample_OutPlay(int32_t sample_id, uint16_t volume, int32_t pitch, int32_t pan);</title></rect>
<rect width="12" height="12" x="165" y="330" class="decompiled"><title>int32_t __cdecl S_Audio_Sample_CalculateSampleVolume(int32_t volume);</title></rect>
<rect width="12" height="12" x="180" y="330" class="decompiled"><title>int32_t __cdecl S_Audio_Sample_CalculateSamplePan(int16_t pan);</title></rect>
<rect width="12" height="12" x="195" y="330" class="decompiled"><title>int32_t __cdecl S_Audio_Sample_OutPlayLooped(int32_t track_id, uint16_t volume, int32_t pitch, int32_t pan);</title></rect>
<rect width="12" height="12" x="210" y="330" class="decompiled"><title>void __cdecl S_Audio_Sample_OutSetPanAndVolume(int32_t track_id, int32_t pan, uint16_t volume);</title></rect>
<rect width="12" height="12" x="225" y="330" class="decompiled"><title>void __cdecl S_Audio_Sample_OutSetPitch(int32_t track_id, int32_t pitch);</title></rect>
<rect width="12" height="12" x="240" y="330" class="decompiled"><title>void __cdecl Sound_SetMasterVolume(int32_t volume);</title></rect>
<rect width="12" height="12" x="255" y="330" class="decompiled"><title>void __cdecl S_Audio_Sample_OutCloseTrack(int32_t track_id);</title></rect>
<rect width="12" height="12" x="270" y="330" class="decompiled"><title>void __cdecl S_Audio_Sample_OutCloseAllTracks(void);</title></rect>
<rect width="12" height="12" x="285" y="330" class="decompiled"><title>BOOL __cdecl S_Audio_Sample_OutIsTrackPlaying(int32_t track_id);</title></rect>
<rect width="12" height="12" x="300" y="330" class="decompiled"><title>bool __cdecl Music_Init(void);</title></rect>
<rect width="12" height="12" x="315" y="330" class="decompiled"><title>void __cdecl Music_Shutdown(void);</title></rect>
<rect width="12" height="12" x="330" y="330" class="decompiled"><title>void __cdecl Music_Play(int16_t track_id, bool is_looped);</title></rect>
<rect width="12" height="12" x="345" y="330" class="decompiled"><title>void __cdecl Music_Stop(void);</title></rect>
<rect width="12" height="12" x="360" y="330" class="decompiled"><title>bool __cdecl Music_PlaySynced(int32_t trackID);</title></rect>
<rect width="12" height="12" x="375" y="330" class="decompiled"><title>int32_t __cdecl Music_GetFrames(void);</title></rect>
<rect width="12" height="12" x="390" y="330" class="decompiled"><title>void __cdecl Music_SetVolume(int32_t volume);</title></rect>
<rect width="12" height="12" x="405" y="330" class="known"><title>void __cdecl CopyBitmapPalette(RGB888 *srcPal, BYTE *srcBitmap, int32_t bitmapSize, RGB888 *destPal);</title></rect>
<rect width="12" height="12" x="420" y="330" class="known"><title>BYTE __cdecl FindNearestPaletteEntry(RGB888 *palette, int32_t red, int32_t green, int32_t blue, bool ignoreSysPalette);</title></rect>
<rect width="12" height="12" x="435" y="330" class="known"><title>void __cdecl SyncSurfacePalettes(void *srcData, int32_t width, int32_t height, int32_t srcPitch, RGB888 *srcPalette, void *dstData, int32_t dstPitch, RGB888 *dstPalette, bool preserveSysPalette);</title></rect>
<rect width="12" height="12" x="450" y="330" class="known"><title>int32_t __cdecl CreateTexturePalette(RGB888 *pal);</title></rect>
<rect width="12" height="12" x="465" y="330" class="known"><title>int32_t __cdecl GetFreePaletteIndex(void);</title></rect>
<rect width="12" height="12" x="480" y="330" class="known"><title>void __cdecl FreePalette(int32_t paletteIndex);</title></rect>
<rect width="12" height="12" x="495" y="330" class="known"><title>void __cdecl SafeFreePalette(int32_t paletteIndex);</title></rect>
<rect width="12" height="12" x="510" y="330" class="known"><title>int32_t __cdecl CreateTexturePage(int32_t width, int32_t height, bool alpha);</title></rect>
<rect width="12" height="12" x="525" y="330" class="known"><title>int32_t __cdecl GetFreeTexturePageIndex(void);</title></rect>
<rect width="12" height="12" x="540" y="330" class="known"><title>bool __cdecl CreateTexturePageSurface(TEXPAGE_DESC *desc);</title></rect>
<rect width="12" height="12" x="555" y="330" class="known"><title>bool __cdecl TexturePageInit(TEXPAGE_DESC *page);</title></rect>
<rect width="12" height="12" x="570" y="330" class="known"><title>LPDIRECT3DTEXTURE2 __cdecl Create3DTexture(LPDDS surface);</title></rect>
<rect width="12" height="12" x="585" y="330" class="known"><title>void __cdecl SafeFreeTexturePage(int32_t pageIndex);</title></rect>
<rect width="12" height="12" x="600" y="330" class="known"><title>void __cdecl FreeTexturePage(int32_t pageIndex);</title></rect>
<rect width="12" height="12" x="615" y="330" class="known"><title>void __cdecl TexturePageReleaseVidMemSurface(TEXPAGE_DESC *page);</title></rect>
<rect width="12" height="12" x="630" y="330" class="known"><title>void __cdecl FreeTexturePages(void);</title></rect>
<rect width="12" height="12" x="645" y="330" class="known"><title>bool __cdecl LoadTexturePage(int32_t pageIndex, bool reset);</title></rect>
<rect width="12" height="12" x="660" y="330" class="known"><title>bool __cdecl ReloadTextures(bool reset);</title></rect>
<rect width="12" height="12" x="675" y="330" class="known"><title>HWR_TEXHANDLE __cdecl GetTexturePageHandle(int32_t pageIndex);</title></rect>
<rect width="12" height="12" x="690" y="330" class="known"><title>int32_t __cdecl AddTexturePage8(int32_t width, int32_t height, BYTE *pageBuffer, int32_t palIndex);</title></rect>
<rect width="12" height="12" x="705" y="330" class="known"><title>int32_t __cdecl AddTexturePage16(int32_t width, int32_t height, BYTE *pageBuffer);</title></rect>
<rect width="12" height="12" x="720" y="330" class="known"><title>HRESULT __stdcall EnumTextureFormatsCallback(LPDDSDESC lpDdsd, LPVOID lpContext);</title></rect>
<rect width="12" height="12" x="735" y="330" class="known"><title>HRESULT __cdecl EnumerateTextureFormats(void);</title></rect>
<rect width="12" height="12" x="0" y="345" class="known"><title>void __cdecl CleanupTextures(void);</title></rect>
<rect width="12" height="12" x="15" y="345" class="known"><title>bool __cdecl InitTextures(void);</title></rect>
<rect width="12" height="12" x="30" y="345" class="known"><title>void __cdecl UpdateTicks(void);</title></rect>
<rect width="12" height="12" x="45" y="345" class="known"><title>bool __cdecl TIME_Init(void);</title></rect>
<rect width="12" height="12" x="60" y="345" class="known"><title>DWORD __cdecl Sync(void);</title></rect>
<rect width="12" height="12" x="75" y="345" class="known"><title>LPVOID __cdecl UT_LoadResource(LPCTSTR lpName, LPCTSTR lpType);</title></rect>
<rect width="12" height="12" x="90" y="345" class="known"><title>void __cdecl UT_InitAccurateTimer(void);</title></rect>
<rect width="12" height="12" x="105" y="345" class="known"><title>double __cdecl UT_Microseconds(void);</title></rect>
<rect width="12" height="12" x="120" y="345" class="known"><title>BOOL __cdecl UT_CenterWindow(HWND hWnd);</title></rect>
<rect width="12" height="12" x="135" y="345" class="known"><title>LPTSTR __cdecl UT_FindArg(LPCTSTR str);</title></rect>
<rect width="12" height="12" x="150" y="345" class="known"><title>int32_t __cdecl UT_MessageBox(LPCTSTR lpText, HWND hWnd);</title></rect>
<rect width="12" height="12" x="165" y="345" class="known"><title>int32_t __cdecl UT_ErrorBox(UINT uID, HWND hWnd);</title></rect>
<rect width="12" height="12" x="180" y="345" class="known"><title>LPCTSTR __cdecl GuidBinaryToString(GUID *guid);</title></rect>
<rect width="12" height="12" x="195" y="345" class="known"><title>bool __cdecl GuidStringToBinary(LPCTSTR lpString, GUID *guid);</title></rect>
<rect width="12" height="12" x="210" y="345" class="known"><title>BOOL __cdecl OpenRegistryKey(LPCTSTR lpSubKey);</title></rect>
<rect width="12" height="12" x="225" y="345" class="known"><title>bool __cdecl IsNewRegistryKeyCreated(void);</title></rect>
<rect width="12" height="12" x="240" y="345" class="known"><title>LONG __cdecl CloseRegistryKey(void);</title></rect>
<rect width="12" height="12" x="255" y="345" class="known"><title>LONG __cdecl SetRegistryDwordValue(LPCTSTR lpValueName, DWORD value);</title></rect>
<rect width="12" height="12" x="270" y="345" class="known"><title>LONG __cdecl SetRegistryBoolValue(LPCTSTR lpValueName, bool value);</title></rect>
<rect width="12" height="12" x="285" y="345" class="known"><title>LONG __cdecl SetRegistryFloatValue(LPCTSTR lpValueName, double value);</title></rect>
<rect width="12" height="12" x="300" y="345" class="known"><title>LONG __cdecl SetRegistryBinaryValue(LPCTSTR lpValueName, LPBYTE value, DWORD valueSize);</title></rect>
<rect width="12" height="12" x="315" y="345" class="known"><title>LONG __cdecl SetRegistryStringValue(LPCTSTR lpValueName, LPCTSTR value, int32_t length);</title></rect>
<rect width="12" height="12" x="330" y="345" class="known"><title>LONG __cdecl DeleteRegistryValue(LPCTSTR lpValueName);</title></rect>
<rect width="12" height="12" x="345" y="345" class="known"><title>bool __cdecl GetRegistryDwordValue(LPCTSTR lpValueName, DWORD *pValue, DWORD defaultValue);</title></rect>
<rect width="12" height="12" x="360" y="345" class="known"><title>bool __cdecl GetRegistryBoolValue(LPCTSTR lpValueName, bool *pValue, bool defaultValue);</title></rect>
<rect width="12" height="12" x="375" y="345" class="known"><title>bool __cdecl GetRegistryFloatValue(LPCTSTR lpValueName, double *value, double defaultValue);</title></rect>
<rect width="12" height="12" x="390" y="345" class="known"><title>bool __cdecl GetRegistryBinaryValue(LPCTSTR lpValueName, LPBYTE value, DWORD valueSize, LPBYTE defaultValue);</title></rect>
<rect width="12" height="12" x="405" y="345" class="known"><title>bool __cdecl GetRegistryStringValue(LPCTSTR lpValueName, LPTSTR value, DWORD maxSize, LPCTSTR defaultValue);</title></rect>
<rect width="12" height="12" x="420" y="345" class="known"><title>bool __cdecl GetRegistryGuidValue(LPCTSTR lpValueName, GUID *value, GUID *defaultValue);</title></rect>
<rect width="12" height="12" x="435" y="345" class="known"><title>void __thiscall SE_ReleaseBitmapResource(BITMAP_RESOURCE *bmpRsrc);</title></rect>
<rect width="12" height="12" x="450" y="345" class="known"><title>void __thiscall SE_LoadBitmapResource(BITMAP_RESOURCE *bmpRsrc, LPCTSTR lpName);</title></rect>
<rect width="12" height="12" x="465" y="345" class="known"><title>void __thiscall SE_DrawBitmap(BITMAP_RESOURCE *bmpRsrc, HDC hdc, int32_t x, int32_t y);</title></rect>
<rect width="12" height="12" x="480" y="345" class="known"><title>void __thiscall SE_UpdateBitmapPalette(BITMAP_RESOURCE *bmpRsrc, HWND hWnd, HWND hSender);</title></rect>
<rect width="12" height="12" x="495" y="345" class="known"><title>void __thiscall SE_ChangeBitmapPalette(BITMAP_RESOURCE *bmpRsrc, HWND hWnd);</title></rect>
<rect width="12" height="12" x="510" y="345" class="known"><title>bool __cdecl SE_RegisterSetupWindowClass(void);</title></rect>
<rect width="12" height="12" x="525" y="345" class="known"><title>LRESULT __stdcall SE_SetupWindowProc(HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="12" height="12" x="540" y="345" class="known"><title>void __cdecl SE_PassMessageToImage(HWND hWnd, UINT uMsg, WPARAM wParam);</title></rect>
<rect width="12" height="12" x="555" y="345" class="known"><title>void __cdecl UT_MemBlt(BYTE *dstBuf, DWORD dstX, DWORD dstY, DWORD width, DWORD height, DWORD dstPitch, BYTE *srcBuf, DWORD srcX, DWORD srcY, DWORD srcPitch);</title></rect>
<rect width="12" height="12" x="570" y="345" class="known"><title>void __cdecl phd_PushMatrix(void);</title></rect>
<rect width="12" height="12" x="585" y="345" class="known"><title>void __cdecl phd_PushUnitMatrix(void);</title></rect>
<rect width="12" height="12" x="600" y="345" class="known"><title>void __fastcall flatA(int32_t y0, int32_t y1, BYTE colorIdx);</title></rect>
<rect width="12" height="12" x="615" y="345" class="known"><title>void __fastcall transA(int32_t y0, int32_t y1, BYTE depthQ);</title></rect>
<rect width="12" height="12" x="630" y="345" class="known"><title>void __fastcall gourA(int32_t y0, int32_t y1, BYTE colorIdx);</title></rect>
<rect width="12" height="12" x="645" y="345" class="known"><title>void __fastcall gtmapA(int32_t y0, int32_t y1, BYTE *texPage);</title></rect>
<rect width="12" height="12" x="660" y="345" class="known"><title>void __fastcall wgtmapA(int32_t y0, int32_t y1, BYTE *texPage);</title></rect>
<rect width="12" height="12" x="675" y="345" class="decompiled"><title>int32_t __fastcall Math_Atan(int32_t x, int32_t y);</title></rect>
<rect width="12" height="12" x="690" y="345" class="decompiled"><title>int32_t __fastcall Math_Cos(int16_t angle);</title></rect>
<rect width="12" height="12" x="705" y="345" class="decompiled"><title>int32_t __fastcall Math_Sin(int16_t angle);</title></rect>
<rect width="12" height="12" x="720" y="345" class="decompiled"><title>int32_t __fastcall Math_SinImpl(int16_t angle);</title></rect>
<rect width="12" height="12" x="735" y="345" class="decompiled"><title>uint32_t  __fastcall Math_Sqrt(uint32_t n);</title></rect>
</g>
</g>
<g transform="translate(0 531)">
<text x="0" y="7.50">Tomb2.exe progress according to the function sizes:</text>
<text class="todo" style="font-size: 12px; " x="747" y="9"><tspan text-anchor="end"><tspan class="decompiled">5.65%</tspan> · <tspan class="known">94.02%</tspan> · <tspan class="todo">0.02%</tspan> · <tspan class="unused">0.31%</tspan></tspan></text>
<g transform="translate(0 20)">
<rect width="42.19" height="6" x="0" y="0" class="decompiled"/>
<rect width="702.35" height="6" x="42.19" y="0" class="known"/>
<rect width="0.13" height="6" x="744.54" y="0" class="todo"/>
<rect width="2.33" height="6" x="744.67" y="0" class="unused"/>
</g>
<g transform="translate(0 31)">
<rect width="51.63" height="75.34" x="0" y="0" class="known"><title>void __cdecl Output_WGTmap_Persp32FP(int32_t y0, int32_t y1, uint8_t *tex_page);</title></rect>
<rect width="51.63" height="63.46" x="0" y="78.34" class="known"><title>int32_t __cdecl Display_Inventory(int32_t inventory_mode);</title></rect>
<rect width="51.63" height="58.23" x="0" y="144.81" class="known"><title>void __cdecl BaddyObjects(void);</title></rect>
<rect width="51.63" height="56.51" x="0" y="206.04" class="known"><title>void __cdecl Output_GTMap_Persp32FP(int32_t y0, int32_t y1, uint8_t *tex_page);</title></rect>
<rect width="51.63" height="46.07" x="0" y="265.54" class="known"><title>void __cdecl DrawLara(struct ITEM_INFO *item);</title></rect>
<rect width="51.63" height="45.38" x="0" y="314.62" class="known"><title>void __cdecl GF_ModifyInventory(int32_t level, int32_t type);</title></rect>
<rect width="42.84" height="52.29" x="54.63" y="0" class="known"><title>void __cdecl ObjectObjects(void);</title></rect>
<rect width="42.84" height="49.94" x="54.63" y="55.29" class="known"><title>void __cdecl DrawLaraInt(struct ITEM_INFO *item, int16_t *frame1, int16_t *frame2, int32_t frac, int32_t rate);</title></rect>
<rect width="42.84" height="45.41" x="54.63" y="108.23" class="known"><title>bool __cdecl S_UpdateInput(void);</title></rect>
<rect width="42.84" height="43.58" x="54.63" y="156.64" class="known"><title>int16_t *__cdecl Output_InsertObjectGT4(int16_t *obj_ptr, int32_t num, enum SORT_TYPE sort_type);</title></rect>
<rect width="42.84" height="41.49" x="54.63" y="203.22" class="known"><title>void __cdecl HairControl(int32_t in_cutscene);</title></rect>
<rect width="42.84" height="36.55" x="54.63" y="247.71" class="known"><title>int32_t __cdecl Creature_Animate(int16_t item_num, int16_t angle, int16_t tilt);</title></rect>
<rect width="42.84" height="34.97" x="54.63" y="287.26" class="known"><title>int16_t *__cdecl Output_InsertObjectGT3(int16_t *obj_ptr, int32_t num, enum SORT_TYPE sort_type);</title></rect>
<rect width="42.84" height="34.76" x="54.63" y="325.24" class="known"><title>int32_t __cdecl Display_Requester(struct REQUEST_INFO *req, int32_t des, int32_t backgrounds);</title></rect>
<rect width="36.78" height="40.31" x="100.47" y="0" class="known"><title>void __cdecl ExtractSaveGameInfo(void);</title></rect>
<rect width="36.78" height="35.88" x="100.47" y="43.31" class="decompiled"><title>void __cdecl Camera_SmartShift(struct GAME_VECTOR *target, void (*__cdecl shift)(int32_t *x, int32_t *y, int32_t *h, int32_t target_x, int32_t target_y, int32_t target_h, int32_t left, int32_t top, int32_t right, int32_t bottom));</title></rect>
<rect width="36.78" height="34.34" x="100.47" y="82.19" class="known"><title>void __cdecl SE_GraphicsDlgUpdate(HWND hwndDlg);</title></rect>
<rect width="36.78" height="33.39" x="100.47" y="119.54" class="known"><title>void __cdecl Output_InsertGT3_Sorted(struct PHD_VBUF *vtx0, struct PHD_VBUF *vtx1, struct PHD_VBUF *vtx2, struct PHD_TEXTURE *texture, struct PHD_UV *uv0, struct PHD_UV *uv1, struct PHD_UV *uv2, enum SORT_TYPE sort_type);</title></rect>
<rect width="36.78" height="33.03" x="100.47" y="155.93" class="known"><title>void __cdecl do_control_option(INVENTORY_ITEM *item);</title></rect>
<rect width="36.78" height="32.32" x="100.47" y="191.95" class="known"><title>BOOL __cdecl S_LoadGameFlow(LPCTSTR fileName);</title></rect>
<rect width="36.78" height="31.93" x="100.47" y="227.27" class="known"><title>int32_t __cdecl Inv_AddItem(int32_t itemNum);</title></rect>
<rect width="36.78" height="31" x="100.47" y="262.21" class="known"><title>void __cdecl Room_TestTriggers(int16_t *data, int32_t heavy);</title></rect>
<rect width="36.78" height="30.60" x="100.47" y="296.21" class="known"><title>void __cdecl Collide_GetCollisionInfo(struct COLL_INFO *coll, int32_t xpos, int32_t ypos, int32_t zpos, int16_t room_num, int32_t obj_height);</title></rect>
<rect width="36.78" height="30.19" x="100.47" y="329.81" class="known"><title>void __cdecl Lara_Control(int16_t item_num);</title></rect>
<rect width="29.83" height="36.44" x="140.25" y="0" class="known"><title>void __cdecl do_passport_option(INVENTORY_ITEM *item);</title></rect>
<rect width="29.83" height="36.29" x="140.25" y="39.44" class="known"><title>void __cdecl Output_InsertGT3_ZBuffered(struct PHD_VBUF *vtx0, struct PHD_VBUF *vtx1, struct PHD_VBUF *vtx2, struct PHD_TEXTURE *texture, struct PHD_UV *uv0, struct PHD_UV *uv1, struct PHD_UV *uv2);</title></rect>
<rect width="29.83" height="35.70" x="140.25" y="78.73" class="known"><title>void __cdecl Boat_Control(int16_t item_num);</title></rect>
<rect width="29.83" height="34.60" x="140.25" y="117.44" class="known"><title>void __cdecl TrapObjects(void);</title></rect>
<rect width="29.83" height="34.21" x="140.25" y="155.04" class="known"><title>void __cdecl YetiControl(int16_t item_num);</title></rect>
<rect width="29.83" height="33.03" x="140.25" y="192.24" class="known"><title>void __cdecl Worker3Control(int16_t item_num);</title></rect>
<rect width="29.83" height="31.93" x="140.25" y="228.27" class="known"><title>void __cdecl XianLordControl(int16_t item_num);</title></rect>
<rect width="29.83" height="31.48" x="140.25" y="263.20" class="known"><title>BOOL __cdecl LoadObjects(HANDLE hFile);</title></rect>
<rect width="29.83" height="29.87" x="140.25" y="297.68" class="known"><title>void __cdecl Cult3Control(int16_t item_num);</title></rect>
<rect width="29.83" height="29.45" x="140.25" y="330.55" class="known"><title>void __cdecl CreateSaveGameInfo(void);</title></rect>
<rect width="29.57" height="29.26" x="173.07" y="0" class="known"><title>void __cdecl DragonControl(int16_t back_num);</title></rect>
<rect width="29.57" height="29.06" x="173.07" y="32.26" class="known"><title>int32_t __cdecl Output_XYGUVClipper(int32_t vtx_count, struct VERTEX_INFO *vtx);</title></rect>
<rect width="29.57" height="28.05" x="173.07" y="64.31" class="known"><title>void __cdecl LaraGun(void);</title></rect>
<rect width="29.57" height="27.77" x="173.07" y="95.36" class="known"><title>int32_t __cdecl Boat_Dynamics(int16_t boat_num);</title></rect>
<rect width="29.57" height="27.62" x="173.07" y="126.13" class="known"><title>void __cdecl Output_InsertGT4_Sorted(struct PHD_VBUF *vtx0, struct PHD_VBUF *vtx1, struct PHD_VBUF *vtx2, struct PHD_VBUF *vtx3, struct PHD_TEXTURE *texture, enum SORT_TYPE sort_type);</title></rect>
<rect width="29.57" height="27.45" x="173.07" y="156.76" class="known"><title>void __cdecl S_ShowControls(void);</title></rect>
<rect width="29.57" height="26.49" x="173.07" y="187.21" class="decompiled"><title>void __cdecl Camera_Update(void);</title></rect>
<rect width="29.57" height="26.36" x="173.07" y="216.70" class="known"><title>void __cdecl Output_InsertTrans8(struct PHD_VBUF *vbuf, int16_t shade);</title></rect>
<rect width="29.57" height="26.29" x="173.07" y="246.06" class="known"><title>void __cdecl MonkControl(int16_t item_num);</title></rect>
<rect width="29.57" height="26.24" x="173.07" y="275.35" class="known"><title>LRESULT __stdcall WinVidGameWindowProc(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="29.57" height="26.22" x="173.07" y="304.59" class="known"><title>int32_t __cdecl SkidooDynamics(struct ITEM_INFO *skidoo);</title></rect>
<rect width="29.57" height="26.19" x="173.07" y="333.81" class="known"><title>void __cdecl do_sound_option(INVENTORY_ITEM *item);</title></rect>
<rect width="26.18" height="28.89" x="205.65" y="0" class="known"><title>void __cdecl Sound_Effect(int32_t sample_id, const struct PHD_3DPOS *pos, uint32_t flags);</title></rect>
<rect width="26.18" height="28.78" x="205.65" y="31.89" class="known"><title>void __cdecl PickUpCollision(int16_t item_num, struct ITEM_INFO *laraitem, struct COLL_INFO *coll);</title></rect>
<rect width="26.18" height="28.67" x="205.65" y="63.68" class="known"><title>int32_t __cdecl GF_InterpretSequence(int16_t *ptr, int32_t type, int32_t seq_type);</title></rect>
<rect width="26.18" height="27.71" x="205.65" y="95.35" class="known"><title>enum TARGET_TYPE __cdecl Box_CalculateTarget(struct PHD_VECTOR *target, struct ITEM_INFO *item, struct LOT_INFO *lot);</title></rect>
<rect width="26.18" height="27.13" x="205.65" y="126.06" class="known"><title>void __cdecl Output_InsertGT4_ZBuffered(struct PHD_VBUF *vtx0, struct PHD_VBUF *vtx1, struct PHD_VBUF *vtx2, struct PHD_VBUF *vtx3, struct PHD_TEXTURE *texture);</title></rect>
<rect width="26.18" height="27.02" x="205.65" y="156.19" class="known"><title>int32_t __cdecl SkidooControl(void);</title></rect>
<rect width="26.18" height="26.99" x="205.65" y="186.20" class="known"><title>void __cdecl CreatureMood(struct ITEM_INFO *item, struct AI_INFO *info, int32_t violent);</title></rect>
<rect width="26.18" height="26.88" x="205.65" y="216.19" class="known"><title>int16_t *__cdecl Output_InsertObjectG4_Sorted(int16_t *obj_ptr, int32_t num, enum SORT_TYPE sort_type);</title></rect>
<rect width="26.18" height="26.41" x="205.65" y="246.07" class="known"><title>void __cdecl Worker2Control(int16_t item_num);</title></rect>
<rect width="26.18" height="26.27" x="205.65" y="275.48" class="known"><title>void __cdecl ShowEndStatsText(void);</title></rect>
<rect width="26.18" height="26.19" x="205.65" y="304.76" class="known"><title>int32_t __cdecl Output_XYGClipper(int32_t vtx_count, struct VERTEX_INFO *vtx);</title></rect>
<rect width="26.18" height="26.05" x="205.65" y="333.95" class="known"><title>void __cdecl DrawInventoryItem(struct INVENTORY_ITEM *inv_item);</title></rect>
<rect width="25.71" height="26.02" x="234.83" y="0" class="known"><title>void __cdecl Cult2Control(int16_t item_num);</title></rect>
<rect width="25.71" height="25.94" x="234.83" y="29.02" class="known"><title>void __cdecl Bandit2Control(int16_t item_num);</title></rect>
<rect width="25.71" height="25.74" x="234.83" y="57.96" class="known"><title>void __cdecl Cult1Control(int16_t item_num);</title></rect>
<rect width="25.71" height="25.63" x="234.83" y="86.70" class="known"><title>void __cdecl ControlRocket(int16_t item_num);</title></rect>
<rect width="25.71" height="25.46" x="234.83" y="115.34" class="known"><title>void __cdecl DrawXianLord(struct ITEM_INFO *item);</title></rect>
<rect width="25.71" height="24.87" x="234.83" y="143.80" class="known"><title>void __cdecl SkidManControl(int16_t rider_num);</title></rect>
<rect width="25.71" height="24.71" x="234.83" y="171.67" class="known"><title>void __cdecl InitialiseDoor(int16_t item_num);</title></rect>
<rect width="25.71" height="24.42" x="234.83" y="199.38" class="known"><title>int32_t __cdecl Collide_CollideStaticObjects(struct COLL_INFO *coll, int32_t x, int32_t y, int32_t z, int16_t room_num, int32_t hite);</title></rect>
<rect width="25.71" height="24.42" x="234.83" y="226.80" class="known"><title>void __cdecl ClipRoom(struct ROOM_INFO *r);</title></rect>
<rect width="25.71" height="24.42" x="234.83" y="254.23" class="known"><title>void __cdecl T_DrawThisText(struct TEXTSTRING *textstring);</title></rect>
<rect width="25.71" height="24.40" x="234.83" y="281.65" class="known"><title>int16_t *__cdecl Output_InsertObjectG4(int16_t *obj_ptr, int32_t num, enum SORT_TYPE sort_type);</title></rect>
<rect width="25.71" height="24.20" x="234.83" y="309.05" class="known"><title>void __cdecl Worker1Control(int16_t item_num);</title></rect>
<rect width="25.71" height="23.75" x="234.83" y="336.25" class="known"><title>void __cdecl WarriorControl(int16_t item_num);</title></rect>
<rect width="23.24" height="25.99" x="263.54" y="0" class="known"><title>HRESULT __stdcall EnumDisplayModesCallback(LPDDSDESC lpDDSurfaceDesc, LPVOID lpContext);</title></rect>
<rect width="23.24" height="25.63" x="263.54" y="28.99" class="known"><title>void __cdecl RenderStart(bool isReset);</title></rect>
<rect width="23.24" height="25.47" x="263.54" y="57.62" class="known"><title>BOOL __cdecl LoadRooms(HANDLE hFile);</title></rect>
<rect width="23.24" height="25.35" x="263.54" y="86.09" class="known"><title>int16_t *__cdecl Output_InsertObjectG4_ZBuffered(int16_t *obj_ptr, int32_t num, enum SORT_TYPE sort_type);</title></rect>
<rect width="23.24" height="25.20" x="263.54" y="114.44" class="known"><title>void __cdecl ShowStatsText(char *time_str, int32_t type);</title></rect>
<rect width="23.24" height="24.95" x="263.54" y="142.64" class="known"><title>void __cdecl Lara_GetJointAbsPosition(struct PHD_VECTOR *vec, int32_t joint);</title></rect>
<rect width="23.24" height="24.77" x="263.54" y="170.59" class="known"><title>void __cdecl Diver_Control(int16_t item_num);</title></rect>
<rect width="23.24" height="24.71" x="263.54" y="198.36" class="known"><title>void __cdecl Dog_Control(int16_t item_num);</title></rect>
<rect width="23.24" height="24.68" x="263.54" y="226.07" class="known"><title>int32_t __cdecl Effect_ExplodingDeath(int16_t item_num, int32_t mesh_bits, int16_t damage);</title></rect>
<rect width="23.24" height="24.46" x="263.54" y="253.74" class="known"><title>void __cdecl SetRoomBounds(int16_t *objptr, int32_t room_num, ROOM_INFO *parent);</title></rect>
<rect width="23.24" height="24.43" x="263.54" y="281.20" class="known"><title>void __cdecl AnimateShotgun(int32_t weapon_type);</title></rect>
<rect width="23.24" height="24.25" x="263.54" y="308.63" class="known"><title>void __cdecl DrawAnimatingItem(struct ITEM_INFO *item);</title></rect>
<rect width="23.24" height="24.12" x="263.54" y="335.88" class="known"><title>void __cdecl WinVidStart(void);</title></rect>
<rect width="23.34" height="23.96" x="289.78" y="0" class="decompiled"><title>void __cdecl Camera_Move(const struct GAME_VECTOR *target, int32_t speed);</title></rect>
<rect width="23.34" height="23.78" x="289.78" y="26.96" class="known"><title>void __cdecl Lara_InitialiseInventory(int32_t level_num);</title></rect>
<rect width="23.34" height="23.69" x="289.78" y="53.74" class="known"><title>void __cdecl RingNotActive(struct INVENTORY_ITEM *inv_item);</title></rect>
<rect width="23.34" height="23.41" x="289.78" y="80.43" class="known"><title>int32_t __cdecl FireWeapon(int32_t weapon_type, struct ITEM_INFO *target, struct ITEM_INFO *src, PHD_ANGLE *angles);</title></rect>
<rect width="23.34" height="23.11" x="289.78" y="106.85" class="known"><title>int32_t __cdecl Game_Control(int32_t nframes, int32_t demo_mode);</title></rect>
<rect width="23.34" height="22.95" x="289.78" y="132.95" class="known"><title>INT_PTR __stdcall SE_GraphicsDlgProc(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="23.34" height="22.68" x="289.78" y="158.91" class="known"><title>int32_t __cdecl SE_ReadAppSettings(APP_SETTINGS *settings);</title></rect>
<rect width="23.34" height="22.65" x="289.78" y="184.59" class="known"><title>void __cdecl Output_InsertSprite_Sorted(int32_t z, int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t sprite_idx, int16_t shade);</title></rect>
<rect width="23.34" height="22.65" x="289.78" y="210.24" class="known"><title>void __cdecl RollingBallControl(int16_t item_num);</title></rect>
<rect width="23.34" height="22.56" x="289.78" y="235.89" class="known"><title>void __cdecl ControlHarpoonBolt(int16_t item_num);</title></rect>
<rect width="23.34" height="22.53" x="289.78" y="261.44" class="known"><title>int16_t *__cdecl Output_InsertObjectG3_Sorted(int16_t *obj_ptr, int32_t num, enum SORT_TYPE sort_type);</title></rect>
<rect width="23.34" height="22.47" x="289.78" y="286.97" class="known"><title>void __fastcall wgtmapA(int32_t y0, int32_t y1, BYTE *texPage);</title></rect>
<rect width="23.34" height="22.37" x="289.78" y="312.44" class="known"><title>void __cdecl Lara_HangTest(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="23.34" height="22.19" x="289.78" y="337.81" class="known"><title>void __cdecl Item_Animate(struct ITEM_INFO *item);</title></rect>
<rect width="22.54" height="22.72" x="316.12" y="0" class="known"><title>void __cdecl AnimatePistols(int32_t weapon_type);</title></rect>
<rect width="22.54" height="22.62" x="316.12" y="25.72" class="known"><title>void __cdecl CheckCheatMode(void);</title></rect>
<rect width="22.54" height="22.06" x="316.12" y="51.34" class="known"><title>int16_t *__cdecl Output_InsertObjectG3(int16_t *obj_ptr, int32_t num, enum SORT_TYPE sort_type);</title></rect>
<rect width="22.54" height="22.03" x="316.12" y="76.40" class="known"><title>void __cdecl Lara_GetLJAInt(struct ITEM_INFO *item, struct PHD_VECTOR *vec, int16_t *frame1, int16_t *frame2, int32_t frac, int32_t rate);</title></rect>
<rect width="22.54" height="21.55" x="316.12" y="101.43" class="known"><title>void __cdecl BanditControl(int16_t item_num);</title></rect>
<rect width="22.54" height="21.40" x="316.12" y="125.98" class="known"><title>void __cdecl Lara_Push(struct ITEM_INFO *item, struct ITEM_INFO *lara_item, struct COLL_INFO *coll, int32_t spaz_on, int32_t big_push);</title></rect>
<rect width="22.54" height="21.14" x="316.12" y="150.38" class="known"><title>int32_t __cdecl LOS_ObjectOnLOS(struct GAME_VECTOR *start, struct GAME_VECTOR *target);</title></rect>
<rect width="22.54" height="21.11" x="316.12" y="174.52" class="known"><title>void __fastcall gtmapA(int32_t y0, int32_t y1, BYTE *texPage);</title></rect>
<rect width="22.54" height="20.89" x="316.12" y="198.63" class="known"><title>void __cdecl S_CalculateLight(int32_t x, int32_t y, int32_t z, int16_t room_num);</title></rect>
<rect width="22.54" height="20.61" x="316.12" y="222.52" class="known"><title>void __cdecl DragonCollision(int16_t item_num, struct ITEM_INFO *laraitem, struct COLL_INFO *coll);</title></rect>
<rect width="22.54" height="20.58" x="316.12" y="246.13" class="known"><title>int32_t __cdecl LOS_CheckX(struct GAME_VECTOR *start, struct GAME_VECTOR *target);</title></rect>
<rect width="22.54" height="20.54" x="316.12" y="269.70" class="known"><title>int32_t __cdecl LOS_CheckZ(struct GAME_VECTOR *start, struct GAME_VECTOR *target);</title></rect>
<rect width="22.54" height="20.42" x="316.12" y="293.25" class="known"><title>int32_t __cdecl Lara_TestVault(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="22.54" height="20.20" x="316.12" y="316.67" class="known"><title>void __cdecl WinPlayFMV(LPCTSTR fileName, bool isPlayback);</title></rect>
<rect width="22.54" height="20.13" x="316.12" y="339.87" class="known"><title>bool __cdecl SE_ShowSetupDialog(HWND hParent, bool isDefault);</title></rect>
<rect width="20.53" height="21.98" x="341.66" y="0" class="known"><title>void __cdecl do_detail_option(INVENTORY_ITEM *item);</title></rect>
<rect width="20.53" height="21.91" x="341.66" y="24.98" class="known"><title>int32_t __cdecl GetSpheres(struct ITEM_INFO *item, struct SPHERE *ptr, int32_t WorldSpace);</title></rect>
<rect width="20.53" height="21.81" x="341.66" y="49.89" class="known"><title>void __cdecl DrawSkidoo(struct ITEM_INFO *item);</title></rect>
<rect width="20.53" height="21.74" x="341.66" y="74.69" class="known"><title>int16_t *__cdecl Output_InsertObjectG3_ZBuffered(int16_t *obj_ptr, int32_t num, enum SORT_TYPE sort_type);</title></rect>
<rect width="20.53" height="21.64" x="341.66" y="99.43" class="known"><title>int32_t __cdecl Output_XYClipper(int32_t vtx_count, struct VERTEX_INFO *vtx);</title></rect>
<rect width="20.53" height="21.64" x="341.66" y="124.07" class="known"><title>void __cdecl ControlMissile(int16_t fx_num);</title></rect>
<rect width="20.53" height="21.64" x="341.66" y="148.70" class="known"><title>BOOL __cdecl GameMain(void);</title></rect>
<rect width="20.53" height="21.53" x="341.66" y="173.34" class="known"><title>void __cdecl Lara_Animate(struct ITEM_INFO *item);</title></rect>
<rect width="20.53" height="21.43" x="341.66" y="197.87" class="known"><title>void __cdecl GiantYetiControl(int16_t item_num);</title></rect>
<rect width="20.53" height="21.33" x="341.66" y="222.30" class="known"><title>void __cdecl Output_DrawSprite(uint32_t flags, int32_t x, int32_t y, int32_t z, int16_t sprite_idx, int16_t shade, int16_t scale);</title></rect>
<rect width="20.53" height="20.99" x="341.66" y="246.63" class="known"><title>void __cdecl Lara_Initialise(int32_t type);</title></rect>
<rect width="20.53" height="20.85" x="341.66" y="270.62" class="known"><title>void __cdecl SkidooAnimation(struct ITEM_INFO *skidoo, int32_t collide, int32_t dead);</title></rect>
<rect width="20.53" height="20.54" x="341.66" y="294.46" class="known"><title>void __cdecl DrawRooms(int16_t current_room);</title></rect>
<rect width="20.53" height="19.58" x="341.66" y="318.01" class="known"><title>void __cdecl PuzzleHoleCollision(int16_t item_num, struct ITEM_INFO *laraitem, struct COLL_INFO *coll);</title></rect>
<rect width="20.53" height="19.41" x="341.66" y="340.59" class="known"><title>void __cdecl ControlDeathSlide(int16_t item_num);</title></rect>
<rect width="18.92" height="20.76" x="365.19" y="0" class="known"><title>void __cdecl DinoControl(int16_t item_num);</title></rect>
<rect width="18.92" height="20.65" x="365.19" y="23.76" class="known"><title>bool __cdecl Output_XGen_XGUVPerspFP(int16_t *obj_ptr);</title></rect>
<rect width="18.92" height="20.43" x="365.19" y="47.41" class="known"><title>void __cdecl Tiger_Control(int16_t item_num);</title></rect>
<rect width="18.92" height="20.39" x="365.19" y="70.84" class="known"><title>const int16_t *Output_CalcRoomVertices(const int16_t *obj_ptr);</title></rect>
<rect width="18.92" height="20.36" x="365.19" y="94.24" class="known"><title>void __cdecl SharkControl(int16_t item_num);</title></rect>
<rect width="18.92" height="20.36" x="365.19" y="117.60" class="known"><title>int32_t __cdecl DoShift(struct ITEM_INFO *skidoo, struct PHD_VECTOR *pos, struct PHD_VECTOR *old);</title></rect>
<rect width="18.92" height="19.92" x="365.19" y="140.95" class="known"><title>int32_t __cdecl S_GetObjectBounds(int16_t *bPtr);</title></rect>
<rect width="18.92" height="19.55" x="365.19" y="163.87" class="known"><title>void __cdecl Viewport_Init(int16_t x, int16_t y, int32_t width, int32_t height, int32_t near_z, int32_t far_z, int16_t view_angle, int32_t screen_width, int32_t screen_height);</title></rect>
<rect width="18.92" height="19.51" x="365.19" y="186.42" class="known"><title>int32_t __cdecl Room_GetHeight(const struct FLOOR_INFO *floor, int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="18.92" height="19.51" x="365.19" y="208.93" class="known"><title>BOOL __cdecl LoadSamples(HANDLE hFile);</title></rect>
<rect width="18.92" height="19.44" x="365.19" y="231.45" class="known"><title>int32_t __cdecl Lara_TestClimb(int32_t x, int32_t y, int32_t z, int32_t xfront, int32_t zfront, int32_t item_height, int16_t item_room, int32_t *shift);</title></rect>
<rect width="18.92" height="19.40" x="365.19" y="253.89" class="known"><title>bool __cdecl SE_WriteAppSettings(APP_SETTINGS *settings);</title></rect>
<rect width="18.92" height="18.89" x="365.19" y="276.29" class="known"><title>void __cdecl S_CopyBufferToScreen(void);</title></rect>
<rect width="18.92" height="18.78" x="365.19" y="298.18" class="known"><title>void __cdecl DrawTextureTile(int32_t sx, int32_t sy, int32_t width, int32_t height, HWR_TEXHANDLE texSource, int32_t tu, int32_t tv, int32_t t_width, int32_t t_height, D3DCOLOR color0, D3DCOLOR color1, D3DCOLOR color2, D3DCOLOR color3);</title></rect>
<rect width="18.92" height="18.52" x="365.19" y="319.96" class="known"><title>void __cdecl RollingBallCollision(int16_t item_num, struct ITEM_INFO *litem, struct COLL_INFO *coll);</title></rect>
<rect width="18.92" height="18.52" x="365.19" y="341.48" class="known"><title>BOOL __cdecl LoadLevel(LPCTSTR fileName, int32_t levelID);</title></rect>
<rect width="19.14" height="18.13" x="387.11" y="0" class="decompiled"><title>void __cdecl Camera_LoadCutsceneFrame(void);</title></rect>
<rect width="19.02" height="18.13" x="409.25" y="0" class="known"><title>void __cdecl Creature_AIInfo(struct ITEM_INFO *item, struct AI_INFO *info);</title></rect>
<rect width="18.83" height="18.13" x="431.27" y="0" class="known"><title>int32_t __cdecl Room_GetCeiling(const struct FLOOR_INFO *floor, int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="18.72" height="18.13" x="453.10" y="0" class="known"><title>void __cdecl GameApplySettings(struct APP_SETTINGS *newSettings);</title></rect>
<rect width="18.72" height="18.13" x="474.81" y="0" class="known"><title>LRESULT __stdcall SE_SetupWindowProc(HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="18.68" height="18.13" x="496.53" y="0" class="known"><title>void __cdecl MovableBlockCollision(int16_t item_num, struct ITEM_INFO *laraitem, struct COLL_INFO *coll);</title></rect>
<rect width="18.53" height="18.13" x="518.21" y="0" class="known"><title>int32_t __cdecl Lara_TestClimbUpPos(struct ITEM_INFO *item, int32_t front, int32_t right, int32_t *shift, int32_t *ledge);</title></rect>
<rect width="18.49" height="18.13" x="539.73" y="0" class="known"><title>void __cdecl SE_OptionsDlgUpdate(HWND hwndDlg);</title></rect>
<rect width="18.45" height="18.13" x="561.22" y="0" class="known"><title>int32_t __cdecl SkidooCheckGetOff(void);</title></rect>
<rect width="18.45" height="18.13" x="582.67" y="0" class="known"><title>void __cdecl DisplayCredits(void);</title></rect>
<rect width="17.92" height="18.13" x="604.12" y="0" class="known"><title>void __cdecl undraw_pistols(int32_t weapon_type);</title></rect>
<rect width="17.92" height="18.13" x="625.04" y="0" class="known"><title>int32_t __cdecl TestBlockPull(struct ITEM_INFO *item, int32_t blokhite, uint16_t quadrant);</title></rect>
<rect width="17.84" height="18.13" x="645.95" y="0" class="known"><title>void __cdecl Output_DrawScaledSpriteC(int16_t *obj_ptr);</title></rect>
<rect width="17.84" height="18.13" x="666.79" y="0" class="known"><title>void __cdecl Lara_HandleUnderwater(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="17.84" height="18.13" x="687.63" y="0" class="known"><title>void __cdecl KeyHoleCollision(int16_t item_num, struct ITEM_INFO *laraitem, struct COLL_INFO *coll);</title></rect>
<rect width="17.76" height="18.13" x="708.47" y="0" class="known"><title>void __cdecl undraw_flare(void);</title></rect>
<rect width="17.76" height="18.13" x="729.24" y="0" class="known"><title>BOOL __cdecl LoadBoxes(HANDLE hFile);</title></rect>
<rect width="17.97" height="17.88" x="387.11" y="21.13" class="known"><title>void __cdecl BGND_DrawInGameBackground(void);</title></rect>
<rect width="17.97" height="17.73" x="387.11" y="42.01" class="known"><title>void __cdecl LaraGetNewTarget(struct WEAPON_INFO *winfo);</title></rect>
<rect width="17.97" height="17.73" x="387.11" y="62.74" class="known"><title>int32_t __cdecl Lara_TestWaterClimbOut(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="17.97" height="17.69" x="387.11" y="83.47" class="known"><title>void __cdecl BaracuddaControl(int16_t item_num);</title></rect>
<rect width="17.97" height="17.61" x="387.11" y="104.16" class="known"><title>bool __cdecl Output_XGenXGUV(int16_t *obj_ptr);</title></rect>
<rect width="17.97" height="17.58" x="387.11" y="124.78" class="known"><title>void __cdecl PrintObjects(int16_t room_num);</title></rect>
<rect width="17.97" height="17.23" x="387.11" y="145.35" class="known"><title>void __cdecl FinalLevelCounter(int16_t item_num);</title></rect>
<rect width="17.97" height="17.15" x="387.11" y="165.58" class="known"><title>void __cdecl Lara_Col_ClimbStance(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="17.97" height="17.04" x="387.11" y="185.73" class="known"><title>void __cdecl SwitchCollision(int16_t item_num, struct ITEM_INFO *laraitem, struct COLL_INFO *coll);</title></rect>
<rect width="17.97" height="16.88" x="387.11" y="205.77" class="known"><title>void __cdecl SpiderControl(int16_t item_num);</title></rect>
<rect width="17.97" height="16.88" x="387.11" y="225.65" class="known"><title>void __cdecl S_LightRoom(ROOM_INFO *room);</title></rect>
<rect width="17.97" height="16.81" x="387.11" y="245.54" class="known"><title>bool __cdecl ApplySettings(struct APP_SETTINGS *newSettings);</title></rect>
<rect width="17.97" height="16.69" x="387.11" y="265.35" class="known"><title>void __cdecl CreateStartInfo(int32_t level_num);</title></rect>
<rect width="17.97" height="16.65" x="387.11" y="285.04" class="known"><title>void __cdecl Eagle_Control(int16_t item_num);</title></rect>
<rect width="17.97" height="16.65" x="387.11" y="304.69" class="known"><title>void __cdecl ControlBodyPart(int16_t fx_num);</title></rect>
<rect width="17.97" height="16.39" x="387.11" y="324.35" class="known"><title>void __cdecl SkidooBaddieCollision(struct ITEM_INFO *skidoo);</title></rect>
<rect width="17.97" height="16.27" x="387.11" y="343.73" class="known"><title>void __cdecl S_DrawAirBar(int32_t percent);</title></rect>
<rect width="16.34" height="17.86" x="408.09" y="21.13" class="known"><title>void __cdecl ScreenShot(LPDDS screen);</title></rect>
<rect width="16.34" height="17.82" x="408.09" y="41.99" class="known"><title>void __cdecl MineControl(int16_t mine_num);</title></rect>
<rect width="16.34" height="17.77" x="408.09" y="62.80" class="known"><title>int32_t __cdecl Box_SearchLOT(struct LOT_INFO *lot, int32_t expansion);</title></rect>
<rect width="16.34" height="17.69" x="408.09" y="83.58" class="known"><title>void __cdecl S_PrintShadow(int16_t radius, int16_t *bPtr, ITEM_INFO *item);</title></rect>
<rect width="16.34" height="17.48" x="408.09" y="104.27" class="known"><title>void __cdecl Lara_WaterCurrent(struct COLL_INFO *coll);</title></rect>
<rect width="16.34" height="17.36" x="408.09" y="124.75" class="known"><title>int32_t __cdecl GF_LoadScriptFile(char *fname);</title></rect>
<rect width="16.34" height="17.27" x="408.09" y="145.11" class="decompiled"><title>void __cdecl Matrix_RotYXZpack(uint32_t rpack);</title></rect>
<rect width="16.34" height="17.07" x="408.09" y="165.38" class="decompiled"><title>void __cdecl Camera_Look(const struct ITEM_INFO *item);</title></rect>
<rect width="16.34" height="17.02" x="408.09" y="185.45" class="known"><title>void __cdecl EelControl(int16_t item_num);</title></rect>
<rect width="16.34" height="16.82" x="408.09" y="205.47" class="decompiled"><title>void __cdecl Matrix_RotYXZ(int16_t ry, int16_t rx, int16_t rz);</title></rect>
<rect width="16.34" height="16.82" x="408.09" y="225.29" class="known"><title>void __cdecl MouseControl(int16_t item_num);</title></rect>
<rect width="16.34" height="16.82" x="408.09" y="245.10" class="known"><title>void __cdecl SE_GraphicsDlgFullScreenModesUpdate(HWND hwndDlg);</title></rect>
<rect width="16.34" height="16.77" x="408.09" y="264.92" class="known"><title>void __cdecl Creature_GetBaddieTarget(int16_t item_num, int32_t goody);</title></rect>
<rect width="16.34" height="16.61" x="408.09" y="284.69" class="known"><title>void __cdecl CreateFlare(int32_t thrown);</title></rect>
<rect width="16.34" height="16.57" x="408.09" y="304.30" class="known"><title>void __cdecl ShowGymStatsText(char *time_str, int32_t type);</title></rect>
<rect width="16.34" height="16.57" x="408.09" y="323.87" class="known"><title>BOOL __cdecl LoadItems(HANDLE hFile);</title></rect>
<rect width="16.34" height="16.57" x="408.09" y="343.43" class="known"><title>int32_t __stdcall WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPTSTR lpCmdLine, int32_t nShowCmd);</title></rect>
<rect width="16.85" height="16.03" x="427.43" y="21.13" class="known"><title>const int16_t *Output_CalcObjectVertices(const int16_t *obj_ptr);</title></rect>
<rect width="16.63" height="16.03" x="447.27" y="21.13" class="decompiled"><title>void __cdecl Matrix_GenerateW2V(struct PHD_3DPOS *viewpos);</title></rect>
<rect width="16.47" height="16.03" x="466.91" y="21.13" class="known"><title>void __cdecl S_DrawHealthBar(int32_t percent);</title></rect>
<rect width="16.34" height="16.03" x="486.37" y="21.13" class="known"><title>void __cdecl Output_InsertFlatRect_ZBuffered(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t z, uint8_t color_idx);</title></rect>
<rect width="16.34" height="16.03" x="505.71" y="21.13" class="known"><title>void __cdecl FadeToPal(int32_t fadeValue, RGB888 *palette);</title></rect>
<rect width="16.21" height="16.03" x="525.05" y="21.13" class="known"><title>void __cdecl GetRoomBounds(void);</title></rect>
<rect width="16.13" height="16.03" x="544.26" y="21.13" class="known"><title>int32_t __cdecl ShotLara(struct ITEM_INFO *item, AI_INFO *info, struct BITE_INFO *gun, int16_t extra_rotation, int32_t damage);</title></rect>
<rect width="16.04" height="16.03" x="563.39" y="21.13" class="known"><title>int32_t __cdecl LevelStats(int32_t levelID);</title></rect>
<rect width="16" height="16.03" x="582.43" y="21.13" class="known"><title>void __cdecl Boat_DoShift(int32_t boat_num);</title></rect>
<rect width="15.96" height="16.03" x="601.43" y="21.13" class="known"><title>void __cdecl WinVidResizeGameWindow(HWND hWnd, int32_t edge, LPRECT rect);</title></rect>
<rect width="15.87" height="16.03" x="620.39" y="21.13" class="known"><title>BOOL __stdcall EnumDisplayAdaptersCallback(GUID *lpGUID, LPTSTR lpDriverDescription, LPTSTR lpDriverName, LPVOID lpContext);</title></rect>
<rect width="15.62" height="16.03" x="639.26" y="21.13" class="known"><title>void __cdecl BGND_Make640x480(uint8_t *bitmap, struct RGB888 *palette);</title></rect>
<rect width="15.62" height="16.03" x="657.88" y="21.13" class="known"><title>void __cdecl D3DDeviceCreate(LPDDS lpBackBuffer);</title></rect>
<rect width="15.53" height="16.03" x="676.50" y="21.13" class="known"><title>int32_t __cdecl SkidooUserControl(struct ITEM_INFO *skidoo, int32_t height, int32_t *pitch);</title></rect>
<rect width="15.41" height="16.03" x="695.03" y="21.13" class="known"><title>void __cdecl InitialiseItem(int16_t item_num);</title></rect>
<rect width="15.28" height="16.03" x="713.44" y="21.13" class="known"><title>int32_t __cdecl Demo_Start(int32_t level_num);</title></rect>
<rect width="15.28" height="16.03" x="731.72" y="21.13" class="known"><title>int32_t __cdecl LOT_EnableBaddieAI(int16_t item_num, int32_t always);</title></rect>
<rect width="15.64" height="15.48" x="427.43" y="40.16" class="known"><title>void __cdecl Output_InsertClippedPoly_Textured(int32_t vtx_count, float z, int16_t poly_type, int16_t tex_page);</title></rect>
<rect width="15.34" height="15.48" x="446.07" y="40.16" class="known"><title>void __cdecl InterpolateMatrix(void);</title></rect>
<rect width="15.34" height="15.48" x="464.40" y="40.16" class="known"><title>void __cdecl BigSpiderControl(int16_t item_num);</title></rect>
<rect width="15.29" height="15.48" x="482.74" y="40.16" class="known"><title>void __cdecl ClearBuffers(DWORD flags, DWORD fillColor);</title></rect>
<rect width="15.08" height="15.48" x="501.04" y="40.16" class="known"><title>void __cdecl Output_DrawPolyLine(int16_t *obj_ptr);</title></rect>
<rect width="15.03" height="15.48" x="519.11" y="40.16" class="decompiled"><title>int32_t __cdecl Camera_ShiftClamp(struct GAME_VECTOR *pos, int32_t clamp);</title></rect>
<rect width="15.03" height="15.48" x="537.14" y="40.16" class="known"><title>int32_t __cdecl Lara_TestHangJump(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="14.99" height="15.48" x="555.17" y="40.16" class="known"><title>void __cdecl BigEelControl(int16_t item_num);</title></rect>
<rect width="14.94" height="15.48" x="573.16" y="40.16" class="known"><title>void __cdecl Lara_Col_ClimbDown(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="14.86" height="15.48" x="591.11" y="40.16" class="known"><title>void __cdecl GetJointAbsPosition(struct ITEM_INFO *item, struct PHD_VECTOR *vec, int32_t joint);</title></rect>
<rect width="14.77" height="15.48" x="608.97" y="40.16" class="known"><title>struct FLOOR_INFO __cdecl *Room_GetFloor(int32_t x, int32_t y, int32_t z, int16_t *room_num);</title></rect>
<rect width="14.68" height="15.48" x="626.74" y="40.16" class="known"><title>int32_t __cdecl AddTexturePage16(int32_t width, int32_t height, BYTE *pageBuffer);</title></rect>
<rect width="14.64" height="15.48" x="644.42" y="40.16" class="known"><title>void __cdecl Output_InsertTrans8_Sorted(struct PHD_VBUF *vbuf, int16_t shade);</title></rect>
<rect width="14.64" height="15.48" x="662.06" y="40.16" class="known"><title>void __cdecl Lara_BaddieCollision(struct ITEM_INFO *lara_item, struct COLL_INFO *coll);</title></rect>
<rect width="14.64" height="15.48" x="679.70" y="40.16" class="known"><title>void __cdecl Lara_HandleAboveWater(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="14.60" height="15.48" x="697.34" y="40.16" class="known"><title>void __cdecl LaraTargetInfo(struct WEAPON_INFO *winfo);</title></rect>
<rect width="14.55" height="15.48" x="714.94" y="40.16" class="known"><title>void __cdecl BartoliControl(int16_t item_num);</title></rect>
<rect width="14.51" height="15.48" x="732.49" y="40.16" class="known"><title>int32_t __cdecl Lara_GetWaterDepth(int32_t x, int32_t y, int32_t z, int16_t room_num);</title></rect>
<rect width="14.46" height="15.49" x="427.43" y="58.64" class="decompiled"><title>void __cdecl Lara_Col_Walk(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="14.46" height="15.44" x="427.43" y="77.13" class="known"><title>void __cdecl PropellerControl(int16_t item_num);</title></rect>
<rect width="14.46" height="15.35" x="427.43" y="95.58" class="decompiled"><title>void __cdecl Camera_Combat(const struct ITEM_INFO *item);</title></rect>
<rect width="14.46" height="15.26" x="427.43" y="113.93" class="known"><title>void __cdecl PistolHandler(int32_t weapon_type);</title></rect>
<rect width="14.46" height="15.12" x="427.43" y="132.18" class="known"><title>void __cdecl T_draw_border(int32_t xpos, int32_t ypos, int32_t zpos, int32_t width, int32_t height);</title></rect>
<rect width="14.46" height="15.07" x="427.43" y="150.31" class="known"><title>BOOL __cdecl LoadTexturePages(HANDLE hFile);</title></rect>
<rect width="14.46" height="15.07" x="427.43" y="168.38" class="known"><title>BOOL __cdecl LoadDepthQ(HANDLE hFile);</title></rect>
<rect width="14.46" height="15.03" x="427.43" y="186.45" class="known"><title>int32_t __cdecl Boat_UserControl(struct ITEM_INFO *boat);</title></rect>
<rect width="14.46" height="15.03" x="427.43" y="204.48" class="known"><title>int32_t __cdecl Lara_MovePosition(struct PHD_VECTOR *vec, struct ITEM_INFO *item, struct ITEM_INFO *lara_item);</title></rect>
<rect width="14.46" height="15.03" x="427.43" y="222.51" class="known"><title>void __cdecl FireHarpoon(void);</title></rect>
<rect width="14.46" height="14.66" x="427.43" y="240.54" class="known"><title>void __cdecl Output_InsertFlatRect_Sorted(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t z, uint8_t color_idx);</title></rect>
<rect width="14.46" height="14.66" x="427.43" y="258.20" class="known"><title>void __cdecl ControlTwinkle(int16_t fx_num);</title></rect>
<rect width="14.46" height="14.52" x="427.43" y="275.86" class="decompiled"><title>void __cdecl S_Audio_Sample_Init2(HWND hwnd);</title></rect>
<rect width="14.46" height="14.52" x="427.43" y="293.38" class="known"><title>void __cdecl SE_GraphicsDlgInit(HWND hwndDlg);</title></rect>
<rect width="14.46" height="14.47" x="427.43" y="310.90" class="known"><title>void __cdecl SpinningBlade(int16_t item_num);</title></rect>
<rect width="14.46" height="14.38" x="427.43" y="328.37" class="known"><title>void __cdecl LiftFloorCeiling(struct ITEM_INFO *item, int32_t x, int32_t y, int32_t z, int32_t *floor, int32_t *ceiling);</title></rect>
<rect width="14.46" height="14.24" x="427.43" y="345.76" class="decompiled"><title>void __cdecl Lara_Col_Run(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="14.36" height="14.30" x="444.89" y="58.64" class="known"><title>void __cdecl Output_InsertPoly_Gouraud(int32_t vtx_count, float z, int32_t red, int32_t green, int32_t blue, int16_t poly_type);</title></rect>
<rect width="14.36" height="14.26" x="444.89" y="75.95" class="known"><title>void __cdecl Boat_DoWakeEffect(struct ITEM_INFO *boat);</title></rect>
<rect width="14.36" height="14.26" x="444.89" y="93.20" class="known"><title>bool __cdecl TexturePageInit(TEXPAGE_DESC *page);</title></rect>
<rect width="14.36" height="14.16" x="444.89" y="110.46" class="known"><title>void __cdecl WinstonControl(int16_t item_num);</title></rect>
<rect width="14.36" height="14.07" x="444.89" y="127.62" class="known"><title>int32_t __cdecl Boat_CheckGeton(int16_t item_num, struct COLL_INFO *coll);</title></rect>
<rect width="14.36" height="14.02" x="444.89" y="144.69" class="known"><title>void __cdecl Creature_Kill(struct ITEM_INFO *item, int32_t kill_anim, int32_t kill_state, int32_t lara_kill_state);</title></rect>
<rect width="14.36" height="14.02" x="444.89" y="161.72" class="known"><title>int32_t __cdecl Game_Cutscene_Control(int32_t nframes);</title></rect>
<rect width="14.36" height="13.98" x="444.89" y="178.74" class="known"><title>int32_t __cdecl Misc_Move3DPosTo3DPos(struct PHD_3DPOS *src_pos, struct PHD_3DPOS *dest_pos, int32_t velocity, PHD_ANGLE ang_add);</title></rect>
<rect width="14.36" height="13.93" x="444.89" y="195.72" class="known"><title>const int16_t *Output_CalcVerticeLight(const int16_t *obj_ptr);</title></rect>
<rect width="14.36" height="13.93" x="444.89" y="212.65" class="known"><title>int32_t __cdecl Lara_TestHangJumpUp(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="14.36" height="13.89" x="444.89" y="229.59" class="known"><title>void __cdecl HWR_DrawPolyList(void);</title></rect>
<rect width="14.36" height="13.75" x="444.89" y="246.47" class="known"><title>void __cdecl Boat_Animation(struct ITEM_INFO *boat, int32_t collide);</title></rect>
<rect width="14.36" height="13.75" x="444.89" y="263.22" class="known"><title>void __cdecl draw_flare(void);</title></rect>
<rect width="14.36" height="13.70" x="444.89" y="279.96" class="known"><title>int32_t __cdecl Room_GetWaterHeight(int32_t x, int32_t y, int32_t z, int16_t room_num);</title></rect>
<rect width="14.36" height="13.65" x="444.89" y="296.66" class="known"><title>void __cdecl RingIsOpen(struct RING_INFO *ring);</title></rect>
<rect width="14.36" height="13.61" x="444.89" y="313.32" class="known"><title>void __cdecl draw_shotgun(int32_t weapon_type);</title></rect>
<rect width="14.36" height="13.56" x="444.89" y="329.92" class="known"><title>BOOL __cdecl S_FrontEndCheck(void);</title></rect>
<rect width="14.36" height="13.51" x="444.89" y="346.49" class="known"><title>void __cdecl FlameControl(int16_t fx_num);</title></rect>
<rect width="14.63" height="13.16" x="462.24" y="58.64" class="known"><title>void __cdecl Lara_Col_Wade(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="14.53" height="13.16" x="479.88" y="58.64" class="known"><title>void __fastcall gourA(int32_t y0, int32_t y1, BYTE colorIdx);</title></rect>
<rect width="14.48" height="13.16" x="497.41" y="58.64" class="known"><title>int32_t __cdecl Level_Initialise(int32_t level_num, int32_t level_type);</title></rect>
<rect width="14.43" height="13.16" x="514.89" y="58.64" class="known"><title>void __cdecl Boat_Collision(int16_t item_num, struct ITEM_INFO *lara_item, struct COLL_INFO *coll);</title></rect>
<rect width="14.33" height="13.16" x="532.33" y="58.64" class="known"><title>void __cdecl Lara_SwimCollision(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="14.13" height="13.16" x="549.66" y="58.64" class="known"><title>void __cdecl Lara_HandleSurface(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="14.04" height="13.16" x="566.80" y="58.64" class="known"><title>void __cdecl Construct_Inventory(void);</title></rect>
<rect width="13.99" height="13.16" x="583.83" y="58.64" class="known"><title>void __cdecl SpikeCollision(int16_t item_num, struct ITEM_INFO *litem, struct COLL_INFO *coll);</title></rect>
<rect width="13.99" height="13.16" x="600.82" y="58.64" class="known"><title>void __cdecl DartsControl(int16_t item_num);</title></rect>
<rect width="13.94" height="13.16" x="617.80" y="58.64" class="decompiled"><title>void __cdecl Camera_Shift(int32_t *x, int32_t *y, int32_t *h, int32_t target_x, int32_t target_y, int32_t target_h, int32_t left, int32_t top, int32_t right, int32_t bottom);</title></rect>
<rect width="13.84" height="13.16" x="634.74" y="58.64" class="known"><title>int16_t *__cdecl Output_InsertRoomSprite(int16_t *obj_ptr, int32_t vtx_count);</title></rect>
<rect width="13.59" height="13.16" x="651.57" y="58.64" class="known"><title>void __cdecl Lara_Col_Climbing(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="13.49" height="13.16" x="668.16" y="58.64" class="known"><title>void __cdecl DrawGunFlash(int32_t weapon_type, int32_t clip);</title></rect>
<rect width="13.39" height="13.16" x="684.65" y="58.64" class="known"><title>INT_PTR __stdcall SE_SoundDlgProc(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="13.34" height="13.16" x="701.04" y="58.64" class="decompiled"><title>void __cdecl Lara_State_Stop(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="13.34" height="13.16" x="717.37" y="58.64" class="known"><title>void __cdecl MovableBlock(int16_t item_num);</title></rect>
<rect width="13.29" height="13.16" x="733.71" y="58.64" class="known"><title>void __cdecl DrawEffect(int16_t fx_num);</title></rect>
<rect width="13.41" height="13" x="462.24" y="74.81" class="known"><title>bool __cdecl Output_XGenXG(int16_t *obj_ptr);</title></rect>
<rect width="13.36" height="13" x="478.65" y="74.81" class="known"><title>void __cdecl DrawAssaultTimer(void);</title></rect>
<rect width="13.31" height="13" x="495" y="74.81" class="known"><title>int16_t __cdecl StartGame(int32_t levelID, GF_LEVEL_TYPE levelType);</title></rect>
<rect width="13.25" height="13" x="511.31" y="74.81" class="decompiled"><title>void __cdecl Lara_State_Run(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="13.10" height="13" x="527.56" y="74.81" class="known"><title>int32_t __cdecl Output_ZedClipper(int32_t vtx_count, struct POINT_INFO *pts, struct VERTEX_INFO *vtx);</title></rect>
<rect width="13.10" height="13" x="543.67" y="74.81" class="known"><title>void __cdecl Output_DrawClippedPoly_Textured(int32_t vtx_count);</title></rect>
<rect width="13.10" height="13" x="559.77" y="74.81" class="known"><title>void __cdecl DoSnowEffect(struct ITEM_INFO *skidoo);</title></rect>
<rect width="13.05" height="13" x="575.88" y="74.81" class="known"><title>void __cdecl Lara_UseItem(int16_t object_num);</title></rect>
<rect width="13" height="13" x="591.93" y="74.81" class="known"><title>void __cdecl Inv_RingDoMotions(struct RING_INFO *ring);</title></rect>
<rect width="12.95" height="13" x="607.93" y="74.81" class="known"><title>void __cdecl Output_InsertTransQuad_Sorted(int32_t x, int32_t y, int32_t width, int32_t height, int32_t z);</title></rect>
<rect width="12.90" height="13" x="623.89" y="74.81" class="known"><title>void __cdecl RestoreLostBuffers(void);</title></rect>
<rect width="12.85" height="13" x="639.79" y="74.81" class="known"><title>void __cdecl Item_AlignPosition(struct PHD_VECTOR *vec, struct ITEM_INFO *src_item, struct ITEM_INFO *dst_item);</title></rect>
<rect width="12.85" height="13" x="655.64" y="74.81" class="known"><title>void __cdecl CreateScreenBuffers(void);</title></rect>
<rect width="12.80" height="13" x="671.49" y="74.81" class="known"><title>void __fastcall transA(int32_t y0, int32_t y1, BYTE depthQ);</title></rect>
<rect width="12.70" height="13" x="687.30" y="74.81" class="decompiled"><title>void __cdecl Camera_UpdateCutscene(void);</title></rect>
<rect width="12.70" height="13" x="703" y="74.81" class="known"><title>void __cdecl ControlSpikeWall(int16_t item_num);</title></rect>
<rect width="12.65" height="13" x="718.70" y="74.81" class="known"><title>int32_t __cdecl Item_TestPosition(int16_t *bounds, struct ITEM_INFO *src_item, struct ITEM_INFO *dst_item);</title></rect>
<rect width="12.65" height="13" x="734.35" y="74.81" class="known"><title>int32_t __cdecl TestBlockPush(struct ITEM_INFO *item, int32_t blokhite, uint16_t quadrant);</title></rect>
<rect width="12.20" height="13.48" x="462.24" y="90.80" class="known"><title>void __cdecl CopyBitmapPalette(RGB888 *srcPal, BYTE *srcBitmap, int32_t bitmapSize, RGB888 *destPal);</title></rect>
<rect width="12.20" height="13.42" x="462.24" y="107.28" class="known"><title>void __cdecl Lara_DeflectEdgeJump(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12.20" height="13.37" x="462.24" y="123.70" class="known"><title>BOOL __cdecl LoadSprites(HANDLE hFile);</title></rect>
<rect width="12.20" height="13.32" x="462.24" y="140.07" class="known"><title>void __cdecl Output_InsertBackground(int16_t *obj_ptr);</title></rect>
<rect width="12.20" height="13.26" x="462.24" y="156.39" class="known"><title>void __cdecl Output_InsertLine_ZBuffered(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t z, uint8_t color_idx);</title></rect>
<rect width="12.20" height="13.21" x="462.24" y="172.65" class="known"><title>void __cdecl DrawAmmoInfo(void);</title></rect>
<rect width="12.20" height="13.21" x="462.24" y="188.87" class="known"><title>void __cdecl DoInventoryBackground(void);</title></rect>
<rect width="12.20" height="13.16" x="462.24" y="205.08" class="known"><title>int32_t __cdecl Creature_Vault(int16_t item_num, int16_t angle, int32_t vault, int32_t shift);</title></rect>
<rect width="12.20" height="13.10" x="462.24" y="221.23" class="known"><title>int32_t __cdecl Lara_TestSlide(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12.20" height="12.95" x="462.24" y="237.34" class="known"><title>void __cdecl DrawSphereOfDoom(struct ITEM_INFO *item);</title></rect>
<rect width="12.20" height="12.84" x="462.24" y="253.28" class="known"><title>void __cdecl Output_InsertLine_Sorted(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t z, uint8_t color_idx);</title></rect>
<rect width="12.20" height="12.73" x="462.24" y="269.12" class="known"><title>void __cdecl Inv_InsertItem(struct INVENTORY_ITEM *inv_item);</title></rect>
<rect width="12.20" height="12.68" x="462.24" y="284.86" class="known"><title>void __cdecl SphereOfDoomCollision(int16_t item_num, struct ITEM_INFO *laraitem, struct COLL_INFO *coll);</title></rect>
<rect width="12.20" height="12.68" x="462.24" y="300.54" class="known"><title>int32_t __cdecl TestCollision(struct ITEM_INFO *item, struct ITEM_INFO *laraitem);</title></rect>
<rect width="12.20" height="12.68" x="462.24" y="316.22" class="known"><title>void __cdecl HWR_InitState(void);</title></rect>
<rect width="12.20" height="12.63" x="462.24" y="331.90" class="known"><title>void __cdecl Lara_Col_Hang(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="12.20" height="12.47" x="462.24" y="347.53" class="known"><title>void __cdecl S_CalculateStaticMeshLight(int32_t x, int32_t y, int32_t z, int32_t shade1, int32_t shade2, ROOM_INFO *room);</title></rect>
<rect width="11.85" height="12.62" x="477.44" y="90.80" class="known"><title>BOOL __cdecl Key(KEYMAP keyMap);</title></rect>
<rect width="11.85" height="12.51" x="477.44" y="106.42" class="known"><title>void __cdecl KillItem(int16_t item_num);</title></rect>
<rect width="11.85" height="12.40" x="477.44" y="121.93" class="known"><title>void __cdecl InitialiseNewWeapon(void);</title></rect>
<rect width="11.85" height="12.35" x="477.44" y="137.34" class="known"><title>void __cdecl Lara_Col_UpJump(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="11.85" height="12.35" x="477.44" y="152.68" class="known"><title>void __cdecl SkidooGuns(void);</title></rect>
<rect width="11.85" height="12.35" x="477.44" y="168.03" class="known"><title>void __cdecl SE_SoundDlgUpdate(HWND hwndDlg);</title></rect>
<rect width="11.85" height="12.29" x="477.44" y="183.38" class="known"><title>HRESULT __stdcall EnumTextureFormatsCallback(LPDDSDESC lpDdsd, LPVOID lpContext);</title></rect>
<rect width="11.85" height="12.24" x="477.44" y="198.67" class="known"><title>void __cdecl SkidmanPush(struct ITEM_INFO *item, struct ITEM_INFO *laraitem, int32_t radius);</title></rect>
<rect width="11.85" height="12.08" x="477.44" y="213.91" class="known"><title>void __cdecl JellyControl(int16_t item_num);</title></rect>
<rect width="11.85" height="12.08" x="477.44" y="228.99" class="known"><title>void __cdecl S_DrawScreenBox(int32_t sx, int32_t sy, int32_t z, int32_t width, int32_t height, BYTE colorIdx, GOURAUD_OUTLINE *gour, uint16_t flags);</title></rect>
<rect width="11.85" height="12.02" x="477.44" y="244.07" class="known"><title>void __cdecl ControlCeilingSpikes(int16_t item_num);</title></rect>
<rect width="11.85" height="11.97" x="477.44" y="259.09" class="known"><title>void __cdecl InitialiseBartoli(int16_t item_num);</title></rect>
<rect width="11.85" height="11.97" x="477.44" y="274.06" class="known"><title>int32_t __cdecl S_SaveGame(const void *save_data, uint32_t save_size, int32_t slot_num);</title></rect>
<rect width="11.85" height="11.91" x="477.44" y="289.03" class="known"><title>int32_t __cdecl GameStats(int32_t levelID);</title></rect>
<rect width="11.85" height="11.86" x="477.44" y="303.94" class="known"><title>int32_t __cdecl Game_Cutscene_Start(int32_t level_num);</title></rect>
<rect width="11.85" height="11.75" x="477.44" y="318.80" class="known"><title>int32_t __cdecl Inv_RemoveItem(int32_t itemNum);</title></rect>
<rect width="11.85" height="11.75" x="477.44" y="333.55" class="known"><title>int16_t __cdecl TitleSequence(void);</title></rect>
<rect width="11.85" height="11.70" x="477.44" y="348.30" class="known"><title>void __cdecl Inv_RingInit(struct RING_INFO *ring, int16_t type, struct INVENTORY_ITEM **list, int16_t qty, int16_t current, struct IMOTION_INFO *imo);</title></rect>
<rect width="11.66" height="11.88" x="492.29" y="90.80" class="known"><title>void __cdecl ScreenShotPCX(void);</title></rect>
<rect width="11.61" height="11.88" x="506.95" y="90.80" class="decompiled"><title>bool __cdecl S_Audio_Sample_Load(int32_t sample_id, LPWAVEFORMATEX format, const void *data, int32_t data_size);</title></rect>
<rect width="11.50" height="11.88" x="521.56" y="90.80" class="decompiled"><title>void __cdecl Lara_State_Compress(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="11.50" height="11.88" x="536.06" y="90.80" class="known"><title>void __cdecl CopterControl(int16_t item_num);</title></rect>
<rect width="11.45" height="11.88" x="550.56" y="90.80" class="known"><title>void __cdecl ControlLavaBlob(int16_t fx_num);</title></rect>
<rect width="11.45" height="11.88" x="565.01" y="90.80" class="known"><title>bool __cdecl WinVidGoWindowed(int32_t width, int32_t height, DISPLAY_MODE *dispMode);</title></rect>
<rect width="11.39" height="11.88" x="579.45" y="90.80" class="known"><title>void __cdecl InitColours(void);</title></rect>
<rect width="11.39" height="11.88" x="593.85" y="90.80" class="known"><title>void __cdecl Pendulum(int16_t item_num);</title></rect>
<rect width="11.34" height="11.88" x="608.24" y="90.80" class="known"><title>void __cdecl KillerStatueControl(int16_t item_num);</title></rect>
<rect width="11.23" height="11.88" x="622.58" y="90.80" class="known"><title>int32_t __cdecl T_GetTextWidth(struct TEXTSTRING *textstring);</title></rect>
<rect width="11.18" height="11.88" x="636.81" y="90.80" class="known"><title>int32_t __cdecl Diver_GetWaterSurface(int32_t x, int32_t y, int32_t z, int16_t room_num);</title></rect>
<rect width="11.18" height="11.88" x="650.98" y="90.80" class="known"><title>void __cdecl InitialiseSlot(int16_t item_num, int32_t slot);</title></rect>
<rect width="11.18" height="11.88" x="665.16" y="90.80" class="known"><title>int32_t __cdecl SkidooCheckGetOffOK(int32_t direction);</title></rect>
<rect width="11.18" height="11.88" x="679.34" y="90.80" class="known"><title>INT_PTR __stdcall SE_ControlsDlgProc(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="11.12" height="11.88" x="693.51" y="90.80" class="known"><title>TEXTSTRING *__cdecl T_Print(int32_t xpos, int32_t ypos, int32_t zpos, char *string);</title></rect>
<rect width="11.12" height="11.88" x="707.63" y="90.80" class="known"><title>void __cdecl FallingBlock(int16_t item_num);</title></rect>
<rect width="11.12" height="11.88" x="721.76" y="90.80" class="known"><title>void __cdecl FmvBackToGame(void);</title></rect>
<rect width="11.12" height="11.88" x="735.88" y="90.80" class="known"><title>void __cdecl S_DisplayPicture(LPCTSTR fileName, BOOL isTitle);</title></rect>
<rect width="11.08" height="11.87" x="492.29" y="105.68" class="known"><title>void __cdecl undraw_shotgun(int32_t weapon_type);</title></rect>
<rect width="11.08" height="11.87" x="492.29" y="120.56" class="known"><title>bool __cdecl WinVidGetMinMaxInfo(LPMINMAXINFO info);</title></rect>
<rect width="11.08" height="11.53" x="492.29" y="135.43" class="known"><title>void __cdecl IcicleControl(int16_t item_num);</title></rect>
<rect width="11.08" height="11.47" x="492.29" y="149.95" class="known"><title>void __cdecl DrawPickups(int32_t timed);</title></rect>
<rect width="11.08" height="11.41" x="492.29" y="164.42" class="known"><title>void __cdecl InterpolateArmMatrix(void);</title></rect>
<rect width="11.08" height="11.41" x="492.29" y="178.84" class="known"><title>void __cdecl SwitchCollision2(int16_t item_num, struct ITEM_INFO *laraitem, struct COLL_INFO *coll);</title></rect>
<rect width="11.08" height="11.36" x="492.29" y="193.25" class="known"><title>void __cdecl Lara_Col_FastTurn(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="11.08" height="11.30" x="492.29" y="207.60" class="known"><title>void __cdecl Lara_InitialiseMeshes(int32_t level_num);</title></rect>
<rect width="11.08" height="11.30" x="492.29" y="221.90" class="known"><title>BOOL __cdecl DecompPCX(LPCBYTE pcx, DWORD pcxSize, LPBYTE pic, RGB888 *pal);</title></rect>
<rect width="11.08" height="11.18" x="492.29" y="236.20" class="known"><title>int32_t __cdecl Boat_TestWaterHeight(struct ITEM_INFO *item, int32_t z_off, int32_t x_off, struct PHD_VECTOR *pos);</title></rect>
<rect width="11.08" height="11.18" x="492.29" y="250.39" class="known"><title>int32_t __cdecl Creature_CheckBaddieOverlap(int16_t item_num);</title></rect>
<rect width="11.08" height="11.18" x="492.29" y="264.57" class="known"><title>void __cdecl DrawFlareInAir(struct ITEM_INFO *item);</title></rect>
<rect width="11.08" height="11.18" x="492.29" y="278.75" class="known"><title>void __cdecl SkidooCollision(int16_t item_num, struct ITEM_INFO *litem, struct COLL_INFO *coll);</title></rect>
<rect width="11.08" height="11.13" x="492.29" y="292.94" class="known"><title>void __cdecl Output_DrawPoly_Gouraud(int32_t vtx_count, int32_t red, int32_t green, int32_t blue);</title></rect>
<rect width="11.08" height="11.01" x="492.29" y="307.06" class="known"><title>int32_t __cdecl Lara_TestHangOnClimbWall(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="11.08" height="11.01" x="492.29" y="321.08" class="known"><title>void __cdecl RifleHandler(int32_t weapon_type);</title></rect>
<rect width="11.08" height="11.01" x="492.29" y="335.09" class="known"><title>int32_t __cdecl AddTexturePage8(int32_t width, int32_t height, BYTE *pageBuffer, int32_t palIndex);</title></rect>
<rect width="11.08" height="10.90" x="492.29" y="349.10" class="known"><title>void __cdecl Output_InsertPolygons(int16_t *obj_ptr, int32_t clip);</title></rect>
<rect width="10.91" height="11.07" x="506.36" y="105.68" class="known"><title>void __cdecl ControlBubble1(int16_t fx_num);</title></rect>
<rect width="10.91" height="11.07" x="520.27" y="105.68" class="known"><title>void __cdecl Lara_SurfaceCollision(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="10.91" height="11.07" x="534.18" y="105.68" class="known"><title>DWORD __cdecl WinInReadJoystick(int32_t *xPos, int32_t *yPos);</title></rect>
<rect width="10.85" height="11.07" x="548.08" y="105.68" class="known"><title>int32_t __cdecl Box_StalkBox(struct ITEM_INFO *item, struct ITEM_INFO *enemy, int16_t box_num);</title></rect>
<rect width="10.85" height="11.07" x="561.94" y="105.68" class="known"><title>void __cdecl FireShotgun(void);</title></rect>
<rect width="10.74" height="11.07" x="575.79" y="105.68" class="known"><title>void __cdecl SphereOfDoom(int16_t item_num);</title></rect>
<rect width="10.74" height="11.07" x="589.52" y="105.68" class="known"><title>void __cdecl FireRocket(void);</title></rect>
<rect width="10.68" height="11.07" x="603.26" y="105.68" class="known"><title>void __cdecl Lara_DoClimbLeftRight(struct ITEM_INFO *item, struct COLL_INFO *coll, int32_t result, int32_t shift);</title></rect>
<rect width="10.56" height="11.07" x="616.94" y="105.68" class="decompiled"><title>void __cdecl Camera_Chase(const struct ITEM_INFO *item);</title></rect>
<rect width="10.45" height="11.07" x="630.50" y="105.68" class="known"><title>void __cdecl Lara_State_SurfTread(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="10.39" height="11.07" x="643.95" y="105.68" class="known"><title>void __cdecl Output_InsertRoom(const int16_t *obj_ptr);</title></rect>
<rect width="10.28" height="11.07" x="657.34" y="105.68" class="known"><title>void __cdecl CalculateObjectLighting(struct ITEM_INFO *item, int16_t *frame);</title></rect>
<rect width="10.28" height="11.07" x="670.62" y="105.68" class="known"><title>BOOL __stdcall DInputEnumDevicesCallback(LPCDIDEVICEINSTANCE lpddi, LPVOID pvRef);</title></rect>
<rect width="10.28" height="11.07" x="683.90" y="105.68" class="known"><title>void __cdecl CalculateWibbleTable(void);</title></rect>
<rect width="10.22" height="11.07" x="697.17" y="105.68" class="known"><title>void __cdecl Camera_RefreshFromTrigger(int16_t type, int16_t *data);</title></rect>
<rect width="10.22" height="11.07" x="710.40" y="105.68" class="known"><title>int32_t __cdecl Lara_TestWaterStepOut(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="10.22" height="11.07" x="723.62" y="105.68" class="decompiled"><title>int32_t __cdecl S_Audio_Sample_Play(int32_t sample_id, int32_t volume, int32_t pitch, int32_t pan, int32_t flags);</title></rect>
<rect width="10.16" height="11.07" x="736.84" y="105.68" class="known"><title>void __cdecl LavaBurn(struct ITEM_INFO *item);</title></rect>
<rect width="10.35" height="10.88" x="506.36" y="119.75" class="known"><title>void __cdecl RenderFinish(bool needToClearTextures);</title></rect>
<rect width="10.35" height="10.76" x="506.36" y="133.63" class="known"><title>bool __cdecl DInputJoystickCreate(void);</title></rect>
<rect width="10.35" height="10.76" x="506.36" y="147.38" class="known"><title>void __cdecl S_InitialisePolyList(BOOL clearBackBuffer);</title></rect>
<rect width="10.35" height="10.69" x="506.36" y="161.14" class="known"><title>void __cdecl KillEffect(int16_t fx_num);</title></rect>
<rect width="10.35" height="10.69" x="506.36" y="174.83" class="known"><title>void __cdecl BigBowlControl(int16_t item_num);</title></rect>
<rect width="10.35" height="10.63" x="506.36" y="188.53" class="known"><title>void __cdecl Lara_Slide_Slope(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="10.35" height="10.63" x="506.36" y="202.16" class="known"><title>bool __cdecl WinVidSpinMessageLoop(bool needWait);</title></rect>
<rect width="10.35" height="10.63" x="506.36" y="215.80" class="decompiled"><title>BOOL __stdcall S_Audio_Sample_DSoundEnumCallback(LPGUID guid, LPCTSTR description, LPCTSTR module, LPVOID context);</title></rect>
<rect width="10.35" height="10.57" x="506.36" y="229.43" class="known"><title>int32_t __cdecl Lara_TestWall(struct ITEM_INFO *item, int32_t front, int32_t right, int32_t down);</title></rect>
<rect width="10.35" height="10.57" x="506.36" y="243" class="known"><title>int32_t __cdecl SkidooCheckGeton(int16_t item_num, struct COLL_INFO *coll);</title></rect>
<rect width="10.35" height="10.51" x="506.36" y="256.58" class="known"><title>BOOL __cdecl SelectDrive(void);</title></rect>
<rect width="10.35" height="10.39" x="506.36" y="270.09" class="known"><title>void __cdecl ControlHotLiquid(int16_t fx_num);</title></rect>
<rect width="10.35" height="10.27" x="506.36" y="283.49" class="known"><title>void __cdecl CutscenePlayer_Control(int16_t item_num);</title></rect>
<rect width="10.35" height="10.27" x="506.36" y="296.76" class="known"><title>void __cdecl SmashIceControl(int16_t item_num);</title></rect>
<rect width="10.35" height="10.27" x="506.36" y="310.03" class="known"><title>void __cdecl DrawQuad(float sx, float sy, float width, float height, D3DCOLOR color);</title></rect>
<rect width="10.35" height="10.27" x="506.36" y="323.30" class="known"><title>INT_PTR __stdcall SE_AdvancedDlgProc(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="10.35" height="10.21" x="506.36" y="336.58" class="known"><title>void __cdecl EarthQuake(int16_t item_num);</title></rect>
<rect width="10.35" height="10.21" x="506.36" y="349.79" class="known"><title>void __cdecl ModifyStartInfo(int32_t level_num);</title></rect>
<rect width="10.06" height="10.50" x="519.71" y="119.75" class="known"><title>void __cdecl SpringBoardControl(int16_t item_num);</title></rect>
<rect width="10.06" height="10.50" x="532.77" y="119.75" class="known"><title>void __cdecl S_LoadSettings(void);</title></rect>
<rect width="10" height="10.50" x="545.83" y="119.75" class="known"><title>int32_t __cdecl LOS_ClipTarget(struct GAME_VECTOR *start, struct GAME_VECTOR *target, FLOOR_INFO *floor);</title></rect>
<rect width="10" height="10.50" x="558.83" y="119.75" class="known"><title>void __cdecl Control_TriggerMusicNormalTrack(int16_t value, int16_t flags, int16_t type);</title></rect>
<rect width="9.94" height="10.50" x="571.82" y="119.75" class="known"><title>void __cdecl CreateBartoliLight(int16_t item_num);</title></rect>
<rect width="9.94" height="10.50" x="584.76" y="119.75" class="known"><title>void __cdecl DragonBones(int16_t item_num);</title></rect>
<rect width="9.94" height="10.50" x="597.70" y="119.75" class="known"><title>void __cdecl MiniCopterControl(int16_t item_num);</title></rect>
<rect width="9.82" height="10.50" x="610.64" y="119.75" class="decompiled"><title>void __cdecl Camera_Clip(int32_t *x, int32_t *y, int32_t *h, int32_t target_x, int32_t target_y, int32_t target_h, int32_t left, int32_t top, int32_t right, int32_t bottom);</title></rect>
<rect width="9.82" height="10.50" x="623.46" y="119.75" class="decompiled"><title>void __cdecl Lara_Col_ForwardJump(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="9.82" height="10.50" x="636.29" y="119.75" class="known"><title>bool __cdecl SE_GraphicsTestStart(void);</title></rect>
<rect width="9.70" height="10.50" x="649.11" y="119.75" class="known"><title>int16_t __cdecl Creature_Turn(struct ITEM_INFO *item, int16_t maximum_turn);</title></rect>
<rect width="9.70" height="10.50" x="661.81" y="119.75" class="known"><title>void __cdecl WinVidSetDisplayAdapter(DISPLAY_ADAPTER *dispAdapter);</title></rect>
<rect width="9.64" height="10.50" x="674.51" y="119.75" class="known"><title>void __cdecl LiftControl(int16_t item_num);</title></rect>
<rect width="9.58" height="10.50" x="687.15" y="119.75" class="known"><title>void __cdecl Output_InsertTransQuad(int32_t x, int32_t y, int32_t width, int32_t height, int32_t z);</title></rect>
<rect width="9.58" height="10.50" x="699.73" y="119.75" class="decompiled"><title>void __cdecl Lara_State_ForwardJump(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="9.58" height="10.50" x="712.31" y="119.75" class="known"><title>void __cdecl DoFlareInHand(int32_t flare_age);</title></rect>
<rect width="9.58" height="10.50" x="724.90" y="119.75" class="known"><title>void __cdecl CreateWindowPalette(void);</title></rect>
<rect width="9.52" height="10.50" x="737.48" y="119.75" class="known"><title>bool __cdecl Output_XGenX(int16_t *obj_ptr);</title></rect>
<rect width="9.76" height="10.25" x="519.71" y="133.25" class="known"><title>void __cdecl GeneralControl(int16_t item_num);</title></rect>
<rect width="9.76" height="10.25" x="519.71" y="146.50" class="known"><title>DWORD __cdecl EncodeLinePCX(BYTE *src, DWORD width, BYTE *dst);</title></rect>
<rect width="9.76" height="10.06" x="519.71" y="159.75" class="known"><title>void __cdecl UpdateFrame(bool needRunMessageLoop, LPRECT rect);</title></rect>
<rect width="9.76" height="9.99" x="519.71" y="172.81" class="known"><title>void __cdecl Lara_TestWaterDepth(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="9.76" height="9.99" x="519.71" y="185.80" class="known"><title>void __cdecl GetCarriedItems(void);</title></rect>
<rect width="9.76" height="9.93" x="519.71" y="198.80" class="known"><title>void __cdecl Demo_LoadLaraPos(void);</title></rect>
<rect width="9.76" height="9.81" x="519.71" y="211.73" class="known"><title>void __cdecl Output_InsertFlatRect(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t z, uint8_t color_idx);</title></rect>
<rect width="9.76" height="9.81" x="519.71" y="224.53" class="known"><title>int32_t __cdecl Item_TestBoundsCollide(struct ITEM_INFO *src_item, struct ITEM_INFO *dst_item, int32_t radius);</title></rect>
<rect width="9.76" height="9.74" x="519.71" y="237.34" class="decompiled"><title>void __cdecl Lara_State_Wade(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="9.76" height="9.68" x="519.71" y="250.08" class="known"><title>void __cdecl DInputKeyboardCreate(void);</title></rect>
<rect width="9.76" height="9.62" x="519.71" y="262.76" class="known"><title>void __cdecl Room_GetNearbyRooms(int32_t x, int32_t y, int32_t z, int32_t r, int32_t h, int16_t room_num);</title></rect>
<rect width="9.76" height="9.62" x="519.71" y="275.38" class="known"><title>BYTE __cdecl FindNearestPaletteEntry(RGB888 *palette, int32_t red, int32_t green, int32_t blue, bool ignoreSysPalette);</title></rect>
<rect width="9.76" height="9.55" x="519.71" y="288" class="known"><title>void Output_RotateLight(int16_t pitch, int16_t yaw);</title></rect>
<rect width="9.76" height="9.55" x="519.71" y="300.55" class="known"><title>bool __cdecl SE_SoundTestStart(void);</title></rect>
<rect width="9.76" height="9.49" x="519.71" y="313.10" class="unused"><title>sub_4449D0</title></rect>
<rect width="9.76" height="9.49" x="519.71" y="325.59" class="known"><title>bool __cdecl WinVidCreateGameWindow(void);</title></rect>
<rect width="9.76" height="9.49" x="519.71" y="338.08" class="known"><title>BOOL __cdecl Read_Strings(DWORD dwCount, char **stringTable, char **stringBuffer, LPDWORD lpBufferSize, HANDLE hFile);</title></rect>
<rect width="9.76" height="9.43" x="519.71" y="350.57" class="known"><title>void __cdecl Output_QuickSort(int32_t left, int32_t right);</title></rect>
<rect width="9.37" height="9.82" x="532.47" y="133.25" class="known"><title>void __cdecl LavaSpray(int16_t item_num);</title></rect>
<rect width="9.31" height="9.82" x="544.85" y="133.25" class="known"><title>void __cdecl SmashWindow(int16_t item_num);</title></rect>
<rect width="9.31" height="9.82" x="557.16" y="133.25" class="decompiled"><title>bool __cdecl S_Audio_Sample_DSoundBufferTest(void);</title></rect>
<rect width="9.31" height="9.82" x="569.47" y="133.25" class="known"><title>BOOL __cdecl S_ReloadLevelGraphics(BOOL reloadPalettes, BOOL reloadTexPages);</title></rect>
<rect width="9.31" height="9.82" x="581.78" y="133.25" class="known"><title>void __thiscall SE_LoadBitmapResource(BITMAP_RESOURCE *bmpRsrc, LPCTSTR lpName);</title></rect>
<rect width="9.19" height="9.82" x="594.09" y="133.25" class="known"><title>void __cdecl Splash(struct ITEM_INFO *item);</title></rect>
<rect width="9.12" height="9.82" x="606.28" y="133.25" class="known"><title>int32_t __cdecl Inv_GetItemOption(int32_t itemNum);</title></rect>
<rect width="9.12" height="9.82" x="618.40" y="133.25" class="known"><title>void __cdecl AimWeapon(struct WEAPON_INFO *winfo, struct LARA_ARM *arm);</title></rect>
<rect width="9.06" height="9.82" x="630.53" y="133.25" class="known"><title>void __cdecl ChangeRequesterItem(struct REQUEST_INFO *req, int32_t item, char *text1, uint32_t flags1, char *text2, uint32_t flags2);</title></rect>
<rect width="9.06" height="9.82" x="642.59" y="133.25" class="known"><title>void __cdecl do_compass_option(INVENTORY_ITEM *item);</title></rect>
<rect width="9.06" height="9.82" x="654.65" y="133.25" class="known"><title>void __cdecl AnimateTextures(int32_t nTicks);</title></rect>
<rect width="8.93" height="9.82" x="666.71" y="133.25" class="known"><title>void __cdecl Lara_Col_StepRight(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="8.93" height="9.82" x="678.64" y="133.25" class="known"><title>int32_t __cdecl Lara_TestClimbStance(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="8.93" height="9.82" x="690.58" y="133.25" class="known"><title>void __cdecl SE_SoundDlgInit(HWND hwndDlg);</title></rect>
<rect width="8.87" height="9.82" x="702.51" y="133.25" class="known"><title>void __cdecl ControlGongBonger(int16_t item_num);</title></rect>
<rect width="8.87" height="9.82" x="714.38" y="133.25" class="known"><title>int32_t __cdecl SwitchTrigger(int16_t item_num, int16_t timer);</title></rect>
<rect width="8.87" height="9.82" x="726.26" y="133.25" class="known"><title>void __cdecl TeethTrap(int16_t item_num);</title></rect>
<rect width="8.87" height="9.82" x="738.13" y="133.25" class="known"><title>HRESULT __stdcall Enum3DDevicesCallback(GUID *lpGuid, LPTSTR lpDeviceDescription, LPTSTR lpDeviceName, LPD3DDEVICEDESC lpD3DHWDeviceDesc, LPD3DDEVICEDESC lpD3DHELDeviceDesc, LPVOID lpContext);</title></rect>
<rect width="9.33" height="9.34" x="532.47" y="146.07" class="known"><title>void __cdecl SE_ControlsDlgInit(HWND hwndDlg);</title></rect>
<rect width="9.33" height="9.28" x="532.47" y="158.41" class="decompiled"><title>void __cdecl Lara_State_Extra_PullDagger(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="9.33" height="9.28" x="532.47" y="170.69" class="known"><title>int32_t __cdecl Lara_TestClimbPos(struct ITEM_INFO *item, int32_t front, int32_t right, int32_t origin, int32_t height, int32_t *shift);</title></rect>
<rect width="9.33" height="9.28" x="532.47" y="182.97" class="known"><title>bool __cdecl WinVidCheckGameWindowPalette(HWND hWnd);</title></rect>
<rect width="9.33" height="9.28" x="532.47" y="195.24" class="known"><title>void __cdecl CreateZBuffer(void);</title></rect>
<rect width="9.33" height="9.21" x="532.47" y="207.52" class="known"><title>int32_t __cdecl Lara_LandedBad(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="9.33" height="9.21" x="532.47" y="219.73" class="known"><title>void __cdecl AlterFloorHeight(struct ITEM_INFO *item, int32_t height);</title></rect>
<rect width="9.33" height="9.15" x="532.47" y="231.94" class="known"><title>void __cdecl Lara_CheatGetStuff(void);</title></rect>
<rect width="9.33" height="9.08" x="532.47" y="244.09" class="known"><title>int16_t __cdecl GunHit(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE yrot, int16_t room_num);</title></rect>
<rect width="9.33" height="9.08" x="532.47" y="256.17" class="known"><title>int32_t __cdecl BGND_AddTexture(int32_t tileIndex, BYTE *bitmap, int32_t pal_index, struct RGB888 *bmp_pal);</title></rect>
<rect width="9.33" height="9.08" x="532.47" y="268.25" class="known"><title>bool __cdecl D3DSetViewport(void);</title></rect>
<rect width="9.33" height="9.02" x="532.47" y="280.33" class="known"><title>void __cdecl Creature_Die(int16_t item_num, int32_t explode);</title></rect>
<rect width="9.33" height="9.02" x="532.47" y="292.34" class="known"><title>void __cdecl CreateZone(struct ITEM_INFO *item);</title></rect>
<rect width="9.33" height="8.82" x="532.47" y="304.36" class="known"><title>void __cdecl Output_InsertLine(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t z, uint8_t color_idx);</title></rect>
<rect width="9.33" height="8.75" x="532.47" y="316.18" class="known"><title>void __cdecl PrintRooms(int16_t room_num);</title></rect>
<rect width="9.33" height="8.69" x="532.47" y="327.93" class="known"><title>void __cdecl Gondola_Control(int16_t item_num);</title></rect>
<rect width="9.33" height="8.69" x="532.47" y="339.62" class="known"><title>void __cdecl Room_FlipMap(void);</title></rect>
<rect width="9.33" height="8.69" x="532.47" y="351.31" class="decompiled"><title>void __cdecl Lara_Col_FastBack(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="9.37" height="8.65" x="544.80" y="146.07" class="known"><title>void __cdecl Lara_Col_Special(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="9.30" height="8.65" x="557.17" y="146.07" class="known"><title>void __cdecl AssaultFinished(struct ITEM_INFO *item);</title></rect>
<rect width="9.30" height="8.65" x="569.47" y="146.07" class="known"><title>int32_t __cdecl TestHeight(struct ITEM_INFO *item, int32_t z_off, int32_t x_off, struct PHD_VECTOR *pos);</title></rect>
<rect width="9.23" height="8.65" x="581.78" y="146.07" class="known"><title>int32_t __cdecl Lara_TestHangSwingIn(struct ITEM_INFO *item, PHD_ANGLE angle);</title></rect>
<rect width="9.23" height="8.65" x="594.01" y="146.07" class="known"><title>int32_t __cdecl OnDrawBridge(struct ITEM_INFO *item, int32_t x, int32_t y);</title></rect>
<rect width="9.23" height="8.65" x="606.24" y="146.07" class="known"><title>void __cdecl S_AnimateTextures(int32_t nTicks);</title></rect>
<rect width="9.16" height="8.65" x="618.48" y="146.07" class="decompiled"><title>void __cdecl Camera_Initialise(void);</title></rect>
<rect width="9.09" height="8.65" x="630.64" y="146.07" class="known"><title>bool __cdecl WinVidGetDisplayAdapters(void);</title></rect>
<rect width="9.03" height="8.65" x="642.73" y="146.07" class="known"><title>void __cdecl ControlWaterSprite(int16_t fx_num);</title></rect>
<rect width="9.03" height="8.65" x="654.76" y="146.07" class="known"><title>DWORD __cdecl CompPCX(BYTE *bitmap, DWORD width, DWORD height, RGB888 *palette, BYTE **pcxData);</title></rect>
<rect width="9.03" height="8.65" x="666.79" y="146.07" class="known"><title>void __cdecl SyncSurfacePalettes(void *srcData, int32_t width, int32_t height, int32_t srcPitch, RGB888 *srcPalette, void *dstData, int32_t dstPitch, RGB888 *dstPalette, bool preserveSysPalette);</title></rect>
<rect width="8.96" height="8.65" x="678.81" y="146.07" class="known"><title>int32_t __cdecl Lara_TestEdgeCatch(struct ITEM_INFO *item, struct COLL_INFO *coll, int32_t *edge);</title></rect>
<rect width="8.89" height="8.65" x="690.77" y="146.07" class="known"><title>void __cdecl AddRequesterItem(struct REQUEST_INFO *req, char *text1, uint32_t flags1, char *text2, uint32_t flags2);</title></rect>
<rect width="8.89" height="8.65" x="702.66" y="146.07" class="known"><title>void __cdecl SpiderLeap(int16_t item_num, int16_t angle);</title></rect>
<rect width="8.82" height="8.65" x="714.54" y="146.07" class="decompiled"><title>bool __cdecl Matrix_TranslateRel(int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="8.82" height="8.65" x="726.36" y="146.07" class="known"><title>int32_t __cdecl Item_GetAnimChange(struct ITEM_INFO *item, struct ANIM_STRUCT *anim);</title></rect>
<rect width="8.82" height="8.65" x="738.18" y="146.07" class="known"><title>int16_t __cdecl DragonFire(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE yrot, int16_t room_num);</title></rect>
<rect width="8.54" height="8.93" x="544.80" y="157.72" class="known"><title>void __cdecl DrawHealthBar(int32_t flash_state);</title></rect>
<rect width="8.54" height="8.93" x="556.34" y="157.72" class="known"><title>void __cdecl Lara_SlideEdgeJump(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="8.54" height="8.93" x="567.89" y="157.72" class="known"><title>void __cdecl S_CopyScreenToBuffer(void);</title></rect>
<rect width="8.47" height="8.93" x="579.43" y="157.72" class="decompiled"><title>void __cdecl Matrix_RotX(int16_t rx);</title></rect>
<rect width="8.47" height="8.93" x="590.90" y="157.72" class="known"><title>int16_t *__cdecl Output_InsertObjectGT3_ZBuffered(int16_t *obj_ptr, int32_t num, enum SORT_TYPE sort_type);</title></rect>
<rect width="8.47" height="8.93" x="602.38" y="157.72" class="known"><title>void __cdecl SetRequesterHeading(struct REQUEST_INFO *req, char *text1, uint32_t flags1, char *text2, uint32_t flags2);</title></rect>
<rect width="8.47" height="8.93" x="613.85" y="157.72" class="known"><title>int32_t __cdecl Lara_CheckForLetGo(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="8.47" height="8.93" x="625.33" y="157.72" class="known"><title>void __cdecl find_target_point(struct ITEM_INFO *item, struct GAME_VECTOR *target);</title></rect>
<rect width="8.47" height="8.93" x="636.80" y="157.72" class="known"><title>bool __cdecl GuidStringToBinary(LPCTSTR lpString, GUID *guid);</title></rect>
<rect width="8.34" height="8.93" x="648.28" y="157.72" class="decompiled"><title>void __cdecl Matrix_RotY(int16_t ry);</title></rect>
<rect width="8.34" height="8.93" x="659.62" y="157.72" class="decompiled"><title>void __cdecl Matrix_RotZ(int16_t rz);</title></rect>
<rect width="8.34" height="8.93" x="670.96" y="157.72" class="known"><title>void __cdecl Creature_Float(int16_t item_num);</title></rect>
<rect width="8.34" height="8.93" x="682.30" y="157.72" class="known"><title>void __cdecl XianDamage(struct ITEM_INFO *item, CREATURE_INFO *xian, int32_t damage);</title></rect>
<rect width="8.27" height="8.93" x="693.64" y="157.72" class="known"><title>void __cdecl Output_InsertSprite(int32_t z, int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t sprite_idx, int16_t shade);</title></rect>
<rect width="8.27" height="8.93" x="704.91" y="157.72" class="known"><title>int32_t __cdecl Box_ValidBox(struct ITEM_INFO *item, int16_t zone_num, int16_t box_num);</title></rect>
<rect width="8.27" height="8.93" x="716.18" y="157.72" class="known"><title>void __cdecl ShootAtLara(struct FX_INFO *fx);</title></rect>
<rect width="8.27" height="8.93" x="727.46" y="157.72" class="known"><title>int16_t __cdecl GunMiss(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE yrot, int16_t room_num);</title></rect>
<rect width="8.27" height="8.93" x="738.73" y="157.72" class="known"><title>bool __cdecl ShowDDrawGameWindow(bool active);</title></rect>
<rect width="8.38" height="8.67" x="544.80" y="169.65" class="decompiled"><title>void __cdecl Lara_State_Extra_StartHouse(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="8.38" height="8.60" x="544.80" y="181.32" class="known"><title>int32_t __cdecl Box_EscapeBox(struct ITEM_INFO *item, struct ITEM_INFO *enemy, int16_t box_num);</title></rect>
<rect width="8.38" height="8.60" x="544.80" y="192.92" class="known"><title>void __cdecl DoLotsOfBlood(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE direction, int16_t room_num, int32_t num);</title></rect>
<rect width="8.38" height="8.53" x="544.80" y="204.53" class="known"><title>void __cdecl Remove_Requester(struct REQUEST_INFO *req);</title></rect>
<rect width="8.38" height="8.53" x="544.80" y="216.06" class="decompiled"><title>void __cdecl Lara_State_Extra_FinalAnim(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="8.38" height="8.53" x="544.80" y="227.59" class="known"><title>int32_t __cdecl OnTrapDoor(struct ITEM_INFO *item, int32_t x, int32_t z);</title></rect>
<rect width="8.38" height="8.46" x="544.80" y="239.12" class="known"><title>bool __cdecl LoadTexturePage(int32_t pageIndex, bool reset);</title></rect>
<rect width="8.38" height="8.39" x="544.80" y="250.58" class="known"><title>void __cdecl Viewport_AlterFOV(int16_t fov);</title></rect>
<rect width="8.38" height="8.39" x="544.80" y="261.97" class="known"><title>void __cdecl gar_RotYXZsuperpack(int16_t **pprot, int32_t skip);</title></rect>
<rect width="8.38" height="8.39" x="544.80" y="273.36" class="known"><title>void __cdecl CreateRenderBuffer(void);</title></rect>
<rect width="8.38" height="8.32" x="544.80" y="284.75" class="known"><title>int32_t __cdecl LOS_Check(struct GAME_VECTOR *start, struct GAME_VECTOR *target);</title></rect>
<rect width="8.38" height="8.25" x="544.80" y="296.07" class="known"><title>int16_t *__cdecl Output_InsertObjectGT3_Sorted(int16_t *obj_ptr, int32_t num, enum SORT_TYPE sort_type);</title></rect>
<rect width="8.38" height="8.25" x="544.80" y="307.32" class="known"><title>void __cdecl setup_screen_size(void);</title></rect>
<rect width="8.38" height="8.11" x="544.80" y="318.57" class="known"><title>void __cdecl Output_DrawScreenSprite(int32_t sx, int32_t sy, int32_t sz, int32_t scale_h, int32_t scale_v, int16_t sprite_idx, int16_t shade, uint16_t flags);</title></rect>
<rect width="8.38" height="8.11" x="544.80" y="329.68" class="known"><title>int32_t __cdecl DoFlareLight(struct PHD_VECTOR *pos, int32_t flare_age);</title></rect>
<rect width="8.38" height="8.11" x="544.80" y="340.79" class="known"><title>void __cdecl InitialiseFinalLevel(void);</title></rect>
<rect width="8.38" height="8.11" x="544.80" y="351.89" class="known"><title>void __cdecl CreateClipper(void);</title></rect>
<rect width="7.81" height="8.62" x="556.18" y="169.65" class="known"><title>void __cdecl ItemNewRoom(int16_t item_num, int16_t room_num);</title></rect>
<rect width="7.81" height="8.62" x="556.18" y="181.27" class="decompiled"><title>bool __cdecl S_Audio_Sample_Init(void);</title></rect>
<rect width="7.81" height="8.54" x="556.18" y="192.89" class="known"><title>void __cdecl Lara_CollideStop(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="7.81" height="8.47" x="556.18" y="204.43" class="known"><title>void __cdecl swap_meshes_with_meshswap3(struct ITEM_INFO *item);</title></rect>
<rect width="7.81" height="8.47" x="556.18" y="215.90" class="known"><title>void __cdecl LoadDemoExternal(LPCTSTR levelName);</title></rect>
<rect width="7.81" height="8.47" x="556.18" y="227.37" class="known"><title>int32_t __cdecl GameLoop(BOOL demoMode);</title></rect>
<rect width="7.81" height="8.40" x="556.18" y="238.84" class="decompiled"><title>void __cdecl Camera_Fixed(void);</title></rect>
<rect width="7.81" height="8.40" x="556.18" y="250.24" class="known"><title>int16_t __cdecl Room_GetTiltType(struct FLOOR_INFO *floor, int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="7.81" height="8.40" x="556.18" y="261.63" class="known"><title>void __cdecl Lara_Col_FastFall(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="7.81" height="8.32" x="556.18" y="273.03" class="known"><title>void __cdecl WarriorSparkleTrail(struct ITEM_INFO *item);</title></rect>
<rect width="7.81" height="8.32" x="556.18" y="284.35" class="known"><title>void __cdecl CreateBackBuffer(void);</title></rect>
<rect width="7.81" height="8.32" x="556.18" y="295.67" class="known"><title>bool __cdecl CreateTexturePageSurface(TEXPAGE_DESC *desc);</title></rect>
<rect width="7.81" height="8.25" x="556.18" y="306.99" class="known"><title>void __cdecl DrawAirBar(int32_t flash_state);</title></rect>
<rect width="7.81" height="8.25" x="556.18" y="318.24" class="known"><title>void __cdecl AdjustTextureUVs(bool resetUvAdd);</title></rect>
<rect width="7.81" height="8.17" x="556.18" y="329.48" class="known"><title>void __cdecl Output_DrawScreenSprite2D(int32_t sx, int32_t sy, int32_t sz, int32_t scale_h, int32_t scale_v, int16_t sprite_idx, int16_t shade, uint16_t flags);</title></rect>
<rect width="7.81" height="8.17" x="556.18" y="340.66" class="known"><title>void __cdecl Lara_Control_Cutscene(int16_t item_num);</title></rect>
<rect width="7.81" height="8.17" x="556.18" y="351.83" class="known"><title>void __cdecl Room_RemoveFlipItems(struct ROOM_INFO *r);</title></rect>
<rect width="7.86" height="8.12" x="566.99" y="169.65" class="known"><title>void __cdecl floor_shake_effect(struct ITEM_INFO *item);</title></rect>
<rect width="7.86" height="8.12" x="577.85" y="169.65" class="decompiled"><title>void __cdecl Lara_State_DeathSlide(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="7.86" height="8.12" x="588.72" y="169.65" class="known"><title>void __cdecl Lara_Col_Back( ITEM_INFO *item, COLL_INFO *coll );</title></rect>
<rect width="7.86" height="8.12" x="599.58" y="169.65" class="known"><title>void __cdecl HitTarget(struct ITEM_INFO *item, struct GAME_VECTOR *hitpos, int32_t damage);</title></rect>
<rect width="7.86" height="8.12" x="610.44" y="169.65" class="known"><title>void __cdecl WindowControl(int16_t item_num);</title></rect>
<rect width="7.86" height="8.12" x="621.31" y="169.65" class="known"><title>int32_t __cdecl S_LoadGame(void *save_data, uint32_t save_size, int32_t slot_num);</title></rect>
<rect width="7.86" height="8.12" x="632.17" y="169.65" class="known"><title>void __cdecl S_ChangeCtrlText(void);</title></rect>
<rect width="7.79" height="8.12" x="643.03" y="169.65" class="known"><title>void __cdecl Output_SetNearZ(int32_t near_z);</title></rect>
<rect width="7.79" height="8.12" x="653.82" y="169.65" class="known"><title>void __cdecl Box_TargetBox(struct LOT_INFO *lot, int16_t box_num);</title></rect>
<rect width="7.79" height="8.12" x="664.61" y="169.65" class="decompiled"><title>void __cdecl Lara_Col_TurnRight(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="7.79" height="8.12" x="675.41" y="169.65" class="known"><title>bool __cdecl GetRegistryStringValue(LPCTSTR lpValueName, LPTSTR value, DWORD maxSize, LPCTSTR defaultValue);</title></rect>
<rect width="7.72" height="8.12" x="686.20" y="169.65" class="known"><title>void __cdecl CreatePrimarySurface(void);</title></rect>
<rect width="7.65" height="8.12" x="696.91" y="169.65" class="known"><title>void __cdecl Misc_InitCinematicRooms(void);</title></rect>
<rect width="7.65" height="8.12" x="707.56" y="169.65" class="known"><title>void __cdecl EffectNewRoom(int16_t fx_num, int16_t room_num);</title></rect>
<rect width="7.65" height="8.12" x="718.21" y="169.65" class="known"><title>void __cdecl SE_AdvancedDlgUpdate(HWND hwndDlg);</title></rect>
<rect width="7.57" height="8.12" x="728.85" y="169.65" class="known"><title>int32_t __cdecl Item_GetFrames(struct ITEM_INFO *item, int16_t *frmptr[], int32_t *rate);</title></rect>
<rect width="7.57" height="8.12" x="739.43" y="169.65" class="decompiled"><title>void __cdecl Music_SetVolume(int32_t volume);</title></rect>
<rect width="7.69" height="7.92" x="566.99" y="180.76" class="known"><title>int16_t *__cdecl Output_InsertObjectGT4_ZBuffered(int16_t *obj_ptr, int32_t num, enum SORT_TYPE sort_type);</title></rect>
<rect width="7.69" height="7.92" x="566.99" y="191.69" class="decompiled"><title>void __cdecl Lara_State_Extra_SharkKill(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="7.69" height="7.92" x="566.99" y="202.61" class="known"><title>bool __cdecl GetRegistryGuidValue(LPCTSTR lpValueName, GUID *value, GUID *defaultValue);</title></rect>
<rect width="7.69" height="7.85" x="566.99" y="213.54" class="known"><title>void __cdecl Lara_Col_Reach(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="7.69" height="7.85" x="566.99" y="224.38" class="known"><title>int32_t __cdecl GetCollisionAnim(struct ITEM_INFO *skidoo, struct PHD_VECTOR *moved);</title></rect>
<rect width="7.69" height="7.85" x="566.99" y="235.23" class="known"><title>void __cdecl FlameEmitterControl(int16_t item_num);</title></rect>
<rect width="7.69" height="7.85" x="566.99" y="246.08" class="known"><title>bool __cdecl WinVidCopyBitmapToBuffer(LPDDS surface, BYTE *bitmap);</title></rect>
<rect width="7.69" height="7.77" x="566.99" y="256.93" class="known"><title>void __cdecl CutscenePlayer1_Initialise(int16_t item_num);</title></rect>
<rect width="7.69" height="7.77" x="566.99" y="267.70" class="known"><title>void __cdecl FloodFX(struct ITEM_INFO *item);</title></rect>
<rect width="7.69" height="7.70" x="566.99" y="278.47" class="known"><title>void __cdecl HWR_LoadTexturePages(int32_t pagesCount, LPVOID pagesBuffer, RGB888 *palette);</title></rect>
<rect width="7.69" height="7.62" x="566.99" y="289.17" class="known"><title>void __cdecl DetonatorControl(int16_t item_num);</title></rect>
<rect width="7.69" height="7.55" x="566.99" y="299.79" class="known"><title>int16_t *__cdecl Output_InsertObjectGT4_Sorted(int16_t *obj_ptr, int32_t num, enum SORT_TYPE sort_type);</title></rect>
<rect width="7.69" height="7.55" x="566.99" y="310.34" class="known"><title>int32_t __cdecl ItemNearLara(struct PHD_3DPOS *pos, int32_t distance);</title></rect>
<rect width="7.69" height="7.55" x="566.99" y="320.89" class="known"><title>void __cdecl T_AddBackground(struct TEXTSTRING *textstring, int16_t xsize, int16_t ysize, int16_t xoff, int16_t yoff, int16_t zoff, int16_t colour, uint16_t *gourptr, uint16_t flags);</title></rect>
<rect width="7.69" height="7.55" x="566.99" y="331.43" class="unused"><title>sub_444B20</title></rect>
<rect width="7.69" height="7.55" x="566.99" y="341.98" class="known"><title>bool __cdecl WinVidGetDisplayMode(DISPLAY_MODE *dispMode);</title></rect>
<rect width="7.69" height="7.47" x="566.99" y="352.53" class="known"><title>int32_t __cdecl Box_BadFloor(int32_t x, int32_t y, int32_t z, int32_t box_height, int32_t next_height, int16_t room_num, struct LOT_INFO *lot);</title></rect>
<rect width="7.93" height="7.24" x="577.68" y="180.76" class="decompiled"><title>void __cdecl Lara_State_Walk(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="7.93" height="7.24" x="588.61" y="180.76" class="known"><title>D3DCOLOR __cdecl BGND_CenterLighting(int32_t x, int32_t y, int32_t width, int32_t height);</title></rect>
<rect width="7.85" height="7.24" x="599.54" y="180.76" class="known"><title>void __cdecl Item_RemoveActive(int16_t item_num);</title></rect>
<rect width="7.85" height="7.24" x="610.40" y="180.76" class="decompiled"><title>void __cdecl Lara_State_TurnRight(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="7.85" height="7.24" x="621.25" y="180.76" class="known"><title>BOOL __cdecl LoadDemo(HANDLE hFile);</title></rect>
<rect width="7.85" height="7.24" x="632.10" y="180.76" class="known"><title>INT_PTR __stdcall SE_OptionsDlgProc(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="7.78" height="7.24" x="642.96" y="180.76" class="known"><title>void __cdecl Eagle_Initialise(int16_t item_num);</title></rect>
<rect width="7.78" height="7.24" x="653.73" y="180.76" class="known"><title>void __cdecl SelectMeshes(struct INVENTORY_ITEM *inv_item);</title></rect>
<rect width="7.78" height="7.24" x="664.51" y="180.76" class="known"><title>void __cdecl Lara_ResetLook(void);</title></rect>
<rect width="7.78" height="7.24" x="675.28" y="180.76" class="decompiled"><title>void __cdecl Lara_State_TurnLeft(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="7.78" height="7.24" x="686.06" y="180.76" class="known"><title>void __cdecl S_OutputPolyList(void);</title></rect>
<rect width="7.70" height="7.24" x="696.83" y="180.76" class="known"><title>bool __cdecl WinVidGoFullScreen(DISPLAY_MODE *dispMode);</title></rect>
<rect width="7.70" height="7.24" x="707.53" y="180.76" class="known"><title>bool __cdecl IntroFMV(LPCTSTR fileName1, LPCTSTR fileName2);</title></rect>
<rect width="7.62" height="7.24" x="718.23" y="180.76" class="known"><title>bool __cdecl HideDDrawGameWindow(void);</title></rect>
<rect width="7.62" height="7.24" x="728.84" y="180.76" class="known"><title>int32_t __cdecl CreateTexturePalette(RGB888 *pal);</title></rect>
<rect width="7.54" height="7.24" x="739.46" y="180.76" class="known"><title>void __cdecl Lara_SwimTurn(struct ITEM_INFO *item);</title></rect>
<rect width="7.43" height="7.34" x="577.68" y="191" class="known"><title>void __cdecl Sound_UpdateContinued(void);</title></rect>
<rect width="7.43" height="7.34" x="577.68" y="201.35" class="known"><title>void __cdecl HookControl(int16_t item_num);</title></rect>
<rect width="7.43" height="7.27" x="577.68" y="211.69" class="known"><title>void __cdecl Output_DrawPickup(int32_t sx, int32_t sy, int32_t scale, int16_t sprite_idx, int16_t shade);</title></rect>
<rect width="7.43" height="7.27" x="577.68" y="221.96" class="known"><title>void __cdecl Lara_State_Tread(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="7.43" height="7.27" x="577.68" y="232.23" class="known"><title>int32_t __cdecl Targetable(struct ITEM_INFO *item, AI_INFO *info);</title></rect>
<rect width="7.43" height="7.19" x="577.68" y="242.49" class="decompiled"><title>void __cdecl Lara_State_Back(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="7.43" height="7.19" x="577.68" y="252.68" class="decompiled"><title>bool __cdecl Music_PlaySynced(int32_t trackID);</title></rect>
<rect width="7.43" height="7.11" x="577.68" y="262.87" class="known"><title>void __cdecl DrawSpriteItem(struct ITEM_INFO *item);</title></rect>
<rect width="7.43" height="7.11" x="577.68" y="272.99" class="known"><title>void __cdecl Lara_Col_Fallback(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="7.43" height="7.04" x="577.68" y="283.10" class="known"><title>void __cdecl ControlBlood1(int16_t fx_num);</title></rect>
<rect width="7.43" height="7.04" x="577.68" y="293.14" class="known"><title>void __cdecl Init_Requester(struct REQUEST_INFO *req);</title></rect>
<rect width="7.43" height="7.04" x="577.68" y="303.17" class="known"><title>void __cdecl HWR_EnableZBuffer(bool z_write_enable, bool z_enable);</title></rect>
<rect width="7.43" height="6.96" x="577.68" y="313.21" class="known"><title>int32_t __cdecl AnimateInventoryItem(struct INVENTORY_ITEM *inv_item);</title></rect>
<rect width="7.43" height="6.96" x="577.68" y="323.17" class="known"><title>void __cdecl RingIsNotOpen(struct RING_INFO *ring);</title></rect>
<rect width="7.43" height="6.96" x="577.68" y="333.12" class="known"><title>int32_t __cdecl AddAssaultTime(uint32_t time);</title></rect>
<rect width="7.43" height="6.96" x="577.68" y="343.08" class="decompiled"><title>void __cdecl Lara_Col_Stop(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="7.43" height="6.96" x="577.68" y="353.04" class="known"><title>void __cdecl Lara_Col_Roll2(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="7.35" height="7.03" x="588.11" y="191" class="known"><title>void __cdecl SkidmanCollision(int16_t item_num, struct ITEM_INFO *laraitem, struct COLL_INFO *coll);</title></rect>
<rect width="7.19" height="7.03" x="598.46" y="191" class="known"><title>int32_t __cdecl Room_FindByPos(int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="7.19" height="7.03" x="608.65" y="191" class="known"><title>void __cdecl ControlExplosion1(int16_t fx_num);</title></rect>
<rect width="7.19" height="7.03" x="618.85" y="191" class="known"><title>int32_t __cdecl Lara_DeflectEdge(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="7.19" height="7.03" x="629.04" y="191" class="known"><title>void __cdecl InitialiseSkidman(int16_t item_num);</title></rect>
<rect width="7.19" height="7.03" x="639.23" y="191" class="known"><title>bool __cdecl WinInputInit(void);</title></rect>
<rect width="7.19" height="7.03" x="649.43" y="191" class="known"><title>void __cdecl S_SeedRandom(void);</title></rect>
<rect width="7.19" height="7.03" x="659.62" y="191" class="known"><title>void __cdecl do_inventory_options(INVENTORY_ITEM *item);</title></rect>
<rect width="7.11" height="7.03" x="669.82" y="191" class="known"><title>void __cdecl BellControl(int16_t item_num);</title></rect>
<rect width="7.11" height="7.03" x="679.93" y="191" class="known"><title>void __cdecl FlashConflicts(void);</title></rect>
<rect width="7.11" height="7.03" x="690.04" y="191" class="known"><title>void __cdecl S_SyncPictureBufferPalette(void);</title></rect>
<rect width="7.03" height="7.03" x="700.16" y="191" class="known"><title>void __cdecl S_SaveSettings(void);</title></rect>
<rect width="6.95" height="7.03" x="710.19" y="191" class="known"><title>int16_t *__cdecl Item_GetBoundsAccurate(const struct ITEM_INFO *item);</title></rect>
<rect width="6.95" height="7.03" x="720.14" y="191" class="known"><title>int32_t __cdecl GlobalItemReplace(int32_t in_objnum, int32_t out_objnum);</title></rect>
<rect width="6.95" height="7.03" x="730.09" y="191" class="decompiled"><title>void __cdecl Lara_State_StepRight(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="6.95" height="7.03" x="740.05" y="191" class="decompiled"><title>void __cdecl Lara_State_StepLeft(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="7.32" height="6.68" x="588.11" y="201.03" class="known"><title>void __cdecl draw_pistols(int32_t weapon_type);</title></rect>
<rect width="7.32" height="6.68" x="598.42" y="201.03" class="known"><title>void __cdecl InitialiseDyingMonk(int16_t item_num);</title></rect>
<rect width="7.32" height="6.68" x="608.74" y="201.03" class="known"><title>void __cdecl SkidooExplode(struct ITEM_INFO *skidoo);</title></rect>
<rect width="7.32" height="6.68" x="619.05" y="201.03" class="known"><title>int32_t __cdecl WinGameStart(void);</title></rect>
<rect width="7.23" height="6.68" x="629.37" y="201.03" class="known"><title>void __cdecl FireM16(int32_t running);</title></rect>
<rect width="7.15" height="6.68" x="639.60" y="201.03" class="known"><title>void __cdecl Matrix_TranslateAbs(int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="7.15" height="6.68" x="649.75" y="201.03" class="known"><title>int16_t __cdecl Diver_Harpoon(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE y_rot, int16_t room_num);</title></rect>
<rect width="7.15" height="6.68" x="659.90" y="201.03" class="known"><title>void __cdecl DisplayModeInfo(char* string);</title></rect>
<rect width="7.07" height="6.68" x="670.05" y="201.03" class="known"><title>void __cdecl Misc_EffectSpaz(struct ITEM_INFO *lara_item, struct COLL_INFO *coll);</title></rect>
<rect width="7.07" height="6.68" x="680.12" y="201.03" class="known"><title>void __cdecl Lara_Col_FastDive(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="7.07" height="6.68" x="690.18" y="201.03" class="known"><title>BOOL __cdecl LoadCinematic(HANDLE hFile);</title></rect>
<rect width="6.98" height="6.68" x="700.25" y="201.03" class="known"><title>void __cdecl Math_GetVectorAngles(int32_t x, int32_t y, int32_t z, int16_t *dest);</title></rect>
<rect width="6.98" height="6.68" x="710.23" y="201.03" class="known"><title>void __cdecl Creature_Collision(int16_t item_num, struct ITEM_INFO *lara_item, struct COLL_INFO *coll);</title></rect>
<rect width="6.98" height="6.68" x="720.22" y="201.03" class="known"><title>void __cdecl LaraBubbles(struct ITEM_INFO *item);</title></rect>
<rect width="6.90" height="6.68" x="730.20" y="201.03" class="known"><title>void __cdecl Door_Collision(int16_t item_num, struct ITEM_INFO *lara_item, struct COLL_INFO *coll);</title></rect>
<rect width="6.90" height="6.68" x="740.10" y="201.03" class="known"><title>int32_t __cdecl Inv_RequestItem(int32_t itemNum);</title></rect>
<rect width="6.80" height="6.78" x="588.11" y="210.71" class="decompiled"><title>bool __cdecl Music_Init(void);</title></rect>
<rect width="6.80" height="6.70" x="588.11" y="220.49" class="known"><title>int16_t __cdecl Knife(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE yrot, int16_t room_num);</title></rect>
<rect width="6.80" height="6.70" x="588.11" y="230.19" class="known"><title>void __cdecl DrawHair(void);</title></rect>
<rect width="6.80" height="6.70" x="588.11" y="239.89" class="known"><title>void __cdecl Lara_State_Glide(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="6.80" height="6.70" x="588.11" y="249.58" class="known"><title>bool __cdecl GetRegistryBoolValue(LPCTSTR lpValueName, bool *pValue, bool defaultValue);</title></rect>
<rect width="6.80" height="6.62" x="588.11" y="259.28" class="known"><title>int16_t __cdecl Lara_FloorFront(struct ITEM_INFO *item, PHD_ANGLE ang, int32_t dist);</title></rect>
<rect width="6.80" height="6.62" x="588.11" y="268.90" class="known"><title>void __cdecl Lara_State_ClimbStance(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="6.80" height="6.53" x="588.11" y="278.51" class="known"><title>void __cdecl InitialiseHair(void);</title></rect>
<rect width="6.80" height="6.53" x="588.11" y="288.05" class="known"><title>void __cdecl Lara_Col_Jumper(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="6.80" height="6.45" x="588.11" y="297.58" class="known"><title>void __cdecl GameWindowCalculateSizeFromClient(int32_t *width, int32_t *height);</title></rect>
<rect width="6.80" height="6.37" x="588.11" y="307.03" class="decompiled"><title>void __cdecl Matrix_LookAt(int32_t xsrc, int32_t ysrc, int32_t zsrc, int32_t xtar, int32_t ytar, int32_t ztar, int16_t roll);</title></rect>
<rect width="6.80" height="6.37" x="588.11" y="316.40" class="known"><title>void __cdecl Richochet(struct GAME_VECTOR *pos);</title></rect>
<rect width="6.80" height="6.37" x="588.11" y="325.77" class="known"><title>void __cdecl Lara_LookLeftRight(void);</title></rect>
<rect width="6.80" height="6.29" x="588.11" y="335.14" class="known"><title>void __cdecl ControlSplash1(int16_t fx_num);</title></rect>
<rect width="6.80" height="6.29" x="588.11" y="344.43" class="known"><title>void __thiscall WinVidGetColorBitMasks(COLOR_BIT_MASKS *bm, LPDDPIXELFORMAT pixelFormat);</title></rect>
<rect width="6.80" height="6.29" x="588.11" y="353.71" class="known"><title>BOOL __cdecl LoadPalettes(HANDLE hFile);</title></rect>
<rect width="6.79" height="6.30" x="597.90" y="210.71" class="known"><title>bool __cdecl GetRegistryBinaryValue(LPCTSTR lpValueName, LPBYTE value, DWORD valueSize, LPBYTE defaultValue);</title></rect>
<rect width="6.70" height="6.30" x="607.69" y="210.71" class="known"><title>void __cdecl ready_shotgun(int32_t weapon_type);</title></rect>
<rect width="6.70" height="6.30" x="617.39" y="210.71" class="known"><title>void __cdecl Lara_State_SurfSwim(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="6.70" height="6.30" x="627.09" y="210.71" class="known"><title>void __cdecl CreatePictureBuffer(void);</title></rect>
<rect width="6.61" height="6.30" x="636.79" y="210.71" class="known"><title>int32_t __cdecl Box_UpdateLOT(struct LOT_INFO *lot, int32_t expansion);</title></rect>
<rect width="6.61" height="6.30" x="646.41" y="210.71" class="known"><title>void __cdecl RemoveDrawnItem(int16_t item_num);</title></rect>
<rect width="6.61" height="6.30" x="656.02" y="210.71" class="decompiled"><title>void __cdecl Music_Play(int16_t track_id, bool is_looped);</title></rect>
<rect width="6.61" height="6.30" x="665.64" y="210.71" class="known"><title>BOOL __cdecl UT_CenterWindow(HWND hWnd);</title></rect>
<rect width="6.53" height="6.30" x="675.25" y="210.71" class="known"><title>void __cdecl UT_MemBlt(BYTE *dstBuf, DWORD dstX, DWORD dstY, DWORD width, DWORD height, DWORD dstPitch, BYTE *srcBuf, DWORD srcX, DWORD srcY, DWORD srcPitch);</title></rect>
<rect width="6.35" height="6.30" x="684.78" y="210.71" class="known"><title>bool __cdecl Output_VisibleZClip(struct PHD_VBUF *vtx0, struct PHD_VBUF *vtx1, struct PHD_VBUF *vtx2);</title></rect>
<rect width="6.35" height="6.30" x="694.13" y="210.71" class="known"><title>void __cdecl AddDisplayPickup(int16_t obj_num);</title></rect>
<rect width="6.35" height="6.30" x="703.49" y="210.71" class="known"><title>int16_t __cdecl CreateEffect(int16_t room_num);</title></rect>
<rect width="6.35" height="6.30" x="712.84" y="210.71" class="known"><title>void *__cdecl game_malloc(DWORD allocSize, DWORD bufIndex);</title></rect>
<rect width="6.27" height="6.30" x="722.20" y="210.71" class="known"><title>void __cdecl Output_SetFarZ(int32_t far_z);</title></rect>
<rect width="6.27" height="6.30" x="731.46" y="210.71" class="known"><title>void __cdecl Lara_State_Swim(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="6.27" height="6.30" x="740.73" y="210.71" class="known"><title>void __cdecl DrawUnclippedItem(struct ITEM_INFO *item);</title></rect>
<rect width="6.42" height="6.15" x="597.90" y="220" class="known"><title>bool __cdecl PlayFMV(LPCTSTR fileName);</title></rect>
<rect width="6.42" height="6.06" x="597.90" y="229.15" class="known"><title>void __cdecl Direct3DRelease(void);</title></rect>
<rect width="6.42" height="6.06" x="597.90" y="238.21" class="known"><title>void __cdecl GameWindowCalculateSizeFromClientByZero(int32_t *width, int32_t *height);</title></rect>
<rect width="6.42" height="6.06" x="597.90" y="247.27" class="known"><title>bool __cdecl WinVidRegisterGameWindowClass(void);</title></rect>
<rect width="6.42" height="6.06" x="597.90" y="256.33" class="known"><title>int32_t __cdecl CreateTexturePage(int32_t width, int32_t height, bool alpha);</title></rect>
<rect width="6.42" height="5.97" x="597.90" y="265.39" class="known"><title>void __cdecl Lara_Col_SwanDive(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="6.42" height="5.89" x="597.90" y="274.37" class="known"><title>void __cdecl Sound_Update(void);</title></rect>
<rect width="6.42" height="5.89" x="597.90" y="283.25" class="known"><title>void __cdecl ControlClockChimes(int16_t item_num);</title></rect>
<rect width="6.42" height="5.89" x="597.90" y="292.14" class="known"><title>void __cdecl Lara_Col_Death(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="6.42" height="5.89" x="597.90" y="301.03" class="known"><title>void __cdecl InitialiseObjects(void);</title></rect>
<rect width="6.42" height="5.89" x="597.90" y="309.92" class="unused"><title>sub_4470F0</title></rect>
<rect width="6.42" height="5.89" x="597.90" y="318.81" class="unused"><title>sub_447AC0</title></rect>
<rect width="6.42" height="5.89" x="597.90" y="327.70" class="known"><title>void __cdecl SE_ControlsDlgUpdate(HWND hwndDlg);</title></rect>
<rect width="6.42" height="5.80" x="597.90" y="336.59" class="known"><title>void __cdecl Object_CollisionTrap(int16_t item_num, struct ITEM_INFO *lara_item, struct COLL_INFO *coll);</title></rect>
<rect width="6.42" height="5.80" x="597.90" y="345.39" class="known"><title>void __cdecl ControlAlarmSound(int16_t item_num);</title></rect>
<rect width="6.42" height="5.80" x="597.90" y="354.20" class="known"><title>int32_t __cdecl Lara_HitCeiling(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="6.23" height="5.99" x="607.32" y="220" class="known"><title>void __cdecl UpdateGameResolution(void);</title></rect>
<rect width="6.14" height="5.99" x="616.55" y="220" class="known"><title>int32_t __cdecl GF_DoLevelSequence(int32_t level, int32_t type);</title></rect>
<rect width="6.14" height="5.99" x="625.68" y="220" class="known"><title>void __cdecl Lara_LookUpDown(void);</title></rect>
<rect width="6.14" height="5.99" x="634.82" y="220" class="known"><title>int16_t __cdecl GunShot(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE yrot, int16_t room_num);</title></rect>
<rect width="5.96" height="5.99" x="643.95" y="220" class="known"><title>void __cdecl CreateBubble(struct PHD_3DPOS *pos, int16_t room_num);</title></rect>
<rect width="5.96" height="5.99" x="652.91" y="220" class="known"><title>int32_t __cdecl GameInit(bool skipCDInit);</title></rect>
<rect width="5.96" height="5.99" x="661.87" y="220" class="known"><title>void __thiscall SE_DrawBitmap(BITMAP_RESOURCE *bmpRsrc, HDC hdc, int32_t x, int32_t y);</title></rect>
<rect width="5.87" height="5.99" x="670.82" y="220" class="known"><title>void __cdecl swap_meshes_with_meshswap1(struct ITEM_INFO *item);</title></rect>
<rect width="5.87" height="5.99" x="679.69" y="220" class="known"><title>void __cdecl swap_meshes_with_meshswap2(struct ITEM_INFO *item);</title></rect>
<rect width="5.87" height="5.99" x="688.56" y="220" class="known"><title>void __cdecl Inv_RingMotionInit(struct RING_INFO *ring, int16_t frames, int16_t status, int16_t status_target);</title></rect>
<rect width="5.87" height="5.99" x="697.42" y="220" class="known"><title>void __cdecl Inv_RingMotionItemDeselect(struct RING_INFO *ring, struct INVENTORY_ITEM *inv_item);</title></rect>
<rect width="5.78" height="5.99" x="706.29" y="220" class="known"><title>void __cdecl InitialiseStartInfo(void);</title></rect>
<rect width="5.78" height="5.99" x="715.07" y="220" class="known"><title>void __cdecl IncreaseScreenSize(void);</title></rect>
<rect width="5.78" height="5.99" x="723.85" y="220" class="known"><title>void __cdecl DecreaseScreenSize(void);</title></rect>
<rect width="5.69" height="5.99" x="732.62" y="220" class="known"><title>void __cdecl InitialiseGameFlags(void);</title></rect>
<rect width="5.69" height="5.99" x="741.31" y="220" class="known"><title>DWORD __cdecl CalculateCompatibleColor(COLOR_BIT_MASKS *mask, int32_t red, int32_t green, int32_t blue, int32_t alpha);</title></rect>
<rect width="5.62" height="6.06" x="607.32" y="228.99" class="decompiled"><title>int32_t __cdecl Music_GetFrames(void);</title></rect>
<rect width="5.62" height="6.06" x="607.32" y="238.06" class="known"><title>bool __cdecl SE_RegisterSetupWindowClass(void);</title></rect>
<rect width="5.62" height="6.06" x="607.32" y="247.12" class="known"><title>void __fastcall flatA(int32_t y0, int32_t y1, BYTE colorIdx);</title></rect>
<rect width="5.62" height="5.97" x="607.32" y="256.19" class="known"><title>void __cdecl Inv_RingGetView(struct RING_INFO *ring, struct PHD_3DPOS *viewer);</title></rect>
<rect width="5.62" height="5.97" x="607.32" y="265.16" class="known"><title>void __cdecl Lara_State_SurfLeft(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="5.62" height="5.97" x="607.32" y="274.13" class="known"><title>void __cdecl Lara_State_SurfRight(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="5.62" height="5.97" x="607.32" y="283.10" class="known"><title>BOOL __cdecl LoadCameras(HANDLE hFile);</title></rect>
<rect width="5.62" height="5.97" x="607.32" y="292.07" class="known"><title>BOOL __cdecl LoadSoundEffects(HANDLE hFile);</title></rect>
<rect width="5.62" height="5.97" x="607.32" y="301.04" class="known"><title>void __cdecl UT_InitAccurateTimer(void);</title></rect>
<rect width="5.62" height="5.88" x="607.32" y="310.01" class="known"><title>void __cdecl Item_Translate(struct ITEM_INFO *item, int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="5.62" height="5.88" x="607.32" y="318.89" class="known"><title>void __cdecl BGND_DrawInGameBlack(void);</title></rect>
<rect width="5.62" height="5.88" x="607.32" y="327.77" class="unused"><title>sub_444AB0</title></rect>
<rect width="5.62" height="5.78" x="607.32" y="336.65" class="known"><title>void __cdecl Lara_State_SurfBack(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="5.62" height="5.78" x="607.32" y="345.43" class="known"><title>void __cdecl Sound_StopEffect(int32_t sample_id);</title></rect>
<rect width="5.62" height="5.78" x="607.32" y="354.22" class="known"><title>bool __cdecl GetRegistryDwordValue(LPCTSTR lpValueName, DWORD *pValue, DWORD defaultValue);</title></rect>
<rect width="5.81" height="5.50" x="615.94" y="228.99" class="known"><title>void __cdecl Item_UpdateRoom(struct ITEM_INFO *item, int32_t height);</title></rect>
<rect width="5.81" height="5.50" x="615.94" y="237.49" class="known"><title>void __cdecl ControlBirdTweeter(int16_t item_num);</title></rect>
<rect width="5.81" height="5.50" x="615.94" y="245.98" class="known"><title>void __cdecl Inv_RingMotionItemSelect(struct RING_INFO *ring, struct INVENTORY_ITEM *inv_item);</title></rect>
<rect width="5.81" height="5.50" x="615.94" y="254.48" class="known"><title>void __cdecl Lara_Col_ClimbLeft(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="5.81" height="5.50" x="615.94" y="262.97" class="known"><title>void __cdecl BaddieBiteEffect(struct ITEM_INFO *item, struct BITE_INFO *bite);</title></rect>
<rect width="5.81" height="5.50" x="615.94" y="271.47" class="known"><title>LRESULT __stdcall SE_NewPropSheetWndProc(HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam);</title></rect>
<rect width="5.81" height="5.40" x="615.94" y="279.97" class="known"><title>int16_t __cdecl Creature_Effect(struct ITEM_INFO *item, struct BITE_INFO *bite, int16_t (*spawn)(int32_t x, int32_t y, int32_t z, int16_t speed, int16_t y_rot, int16_t room_num));</title></rect>
<rect width="5.81" height="5.40" x="615.94" y="288.37" class="known"><title>void __cdecl Room_AddFlipItems(struct ROOM_INFO *r);</title></rect>
<rect width="5.81" height="5.40" x="615.94" y="296.77" class="known"><title>void __cdecl ready_pistols(int32_t weapon_type);</title></rect>
<rect width="5.81" height="5.40" x="615.94" y="305.18" class="known"><title>BOOL __cdecl S_InitialiseSystem(void);</title></rect>
<rect width="5.81" height="5.40" x="615.94" y="313.58" class="known"><title>bool __cdecl GetRegistryFloatValue(LPCTSTR lpValueName, double *value, double defaultValue);</title></rect>
<rect width="5.81" height="5.31" x="615.94" y="321.99" class="known"><title>void __cdecl Lara_Col_UWDeath(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="5.81" height="5.22" x="615.94" y="330.30" class="known"><title>void __cdecl AddActiveItem(int16_t item_num);</title></rect>
<rect width="5.81" height="5.22" x="615.94" y="338.52" class="known"><title>void __cdecl WinInReadKeyboard(LPVOID lpInputData);</title></rect>
<rect width="5.81" height="5.13" x="615.94" y="346.74" class="known"><title>int32_t __cdecl Demo_Control(int32_t level_num);</title></rect>
<rect width="5.81" height="5.13" x="615.94" y="354.87" class="known"><title>int16_t __cdecl DoBloodSplat(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE direction, int16_t room_num);</title></rect>
<rect width="5.46" height="5.47" x="624.75" y="228.99" class="known"><title>void __cdecl DoChimeSound(struct ITEM_INFO *item);</title></rect>
<rect width="5.46" height="5.47" x="633.22" y="228.99" class="known"><title>void __cdecl Lara_Col_Splat(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="5.46" height="5.47" x="641.68" y="228.99" class="known"><title>void __cdecl Lara_Col_ClimbRight(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="5.46" height="5.47" x="650.14" y="228.99" class="known"><title>void __cdecl HWR_ResetZBuffer(void);</title></rect>
<rect width="5.37" height="5.47" x="658.61" y="228.99" class="known"><title>void __cdecl InitialiseXianLord(int16_t item_num);</title></rect>
<rect width="5.37" height="5.47" x="666.98" y="228.99" class="known"><title>void __cdecl ClearBodyBag(void);</title></rect>
<rect width="5.37" height="5.47" x="675.35" y="228.99" class="decompiled"><title>void __cdecl Lara_State_Hang(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="5.37" height="5.47" x="683.71" y="228.99" class="decompiled"><title>void __cdecl Lara_State_PickupFlare(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="5.37" height="5.47" x="692.08" y="228.99" class="known"><title>DWORD __cdecl Sync(void);</title></rect>
<rect width="5.27" height="5.47" x="700.45" y="228.99" class="decompiled"><title>void __cdecl Lara_State_FastBack(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="5.27" height="5.47" x="708.73" y="228.99" class="known"><title>void __cdecl S_Wait(int32_t timeout, BOOL inputCheck);</title></rect>
<rect width="5.27" height="5.47" x="717" y="228.99" class="known"><title>int32_t __cdecl SE_GraphicsTest(void);</title></rect>
<rect width="5.27" height="5.47" x="725.27" y="228.99" class="known"><title>int32_t __cdecl SE_SoundTest(void);</title></rect>
<rect width="5.27" height="5.47" x="733.55" y="228.99" class="known"><title>void __thiscall SE_ChangeBitmapPalette(BITMAP_RESOURCE *bmpRsrc, HWND hWnd);</title></rect>
<rect width="5.18" height="5.47" x="741.82" y="228.99" class="known"><title>void __cdecl ReqItemRightalign(struct REQUEST_INFO *req, struct TEXTSTRING *txt);</title></rect>
<rect width="5.49" height="5.06" x="624.75" y="237.46" class="known"><title>void __cdecl Room_GetNewRoom(int32_t x, int32_t y, int32_t z, int16_t room_num);</title></rect>
<rect width="5.49" height="5.06" x="633.24" y="237.46" class="known"><title>void __cdecl Object_Collision(int16_t item_num, struct ITEM_INFO *lara_item, struct COLL_INFO *coll);</title></rect>
<rect width="5.49" height="5.06" x="641.73" y="237.46" class="known"><title>int32_t __cdecl Item_IsTriggerActive(struct ITEM_INFO *item);</title></rect>
<rect width="5.49" height="5.06" x="650.22" y="237.46" class="known"><title>BOOL __cdecl LoadAnimatedTextures(HANDLE hFile);</title></rect>
<rect width="5.49" height="5.06" x="658.71" y="237.46" class="known"><title>void __cdecl Shell_Cleanup(void);</title></rect>
<rect width="5.39" height="5.06" x="667.20" y="237.46" class="known"><title>void __cdecl ReqItemLeftalign(struct REQUEST_INFO *req, struct TEXTSTRING *txt);</title></rect>
<rect width="5.39" height="5.06" x="675.59" y="237.46" class="decompiled"><title>void __cdecl Lara_State_FastDive(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="5.39" height="5.06" x="683.98" y="237.46" class="known"><title>int32_t __cdecl DoDynamics(int32_t height, int32_t fallspeed, int32_t *y);</title></rect>
<rect width="5.39" height="5.06" x="692.37" y="237.46" class="known"><title>bool __cdecl DDrawCreate(LPGUID lpGUID);</title></rect>
<rect width="5.29" height="5.06" x="700.76" y="237.46" class="known"><title>void __cdecl Lara_State_UWDeath(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="5.29" height="5.06" x="709.05" y="237.46" class="known"><title>void __cdecl InitialiseLOTarray(void);</title></rect>
<rect width="5.29" height="5.06" x="717.34" y="237.46" class="known"><title>bool __cdecl WinVidGetDisplayModes(void);</title></rect>
<rect width="5.19" height="5.06" x="725.63" y="237.46" class="known"><title>void __cdecl InitialiseItemArray(int32_t numitems);</title></rect>
<rect width="5.09" height="5.06" x="733.82" y="237.46" class="decompiled"><title>void __cdecl Lara_State_Extra_DinoKill(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="5.09" height="5.06" x="741.91" y="237.46" class="known"><title>int32_t __cdecl Lara_Fallen(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="5.18" height="4.97" x="624.75" y="245.52" class="known"><title>void __cdecl SmashItem(int16_t item_num, int32_t weapon_type);</title></rect>
<rect width="5.18" height="4.97" x="624.75" y="253.49" class="known"><title>void __cdecl S_SetupBelowWater(BOOL underwater);</title></rect>
<rect width="5.18" height="4.97" x="624.75" y="261.46" class="decompiled"><title>void __cdecl Music_Shutdown(void);</title></rect>
<rect width="5.18" height="4.97" x="624.75" y="269.43" class="known"><title>bool __cdecl TIME_Init(void);</title></rect>
<rect width="5.18" height="4.97" x="624.75" y="277.40" class="known"><title>LPCTSTR __cdecl GuidBinaryToString(GUID *guid);</title></rect>
<rect width="5.18" height="4.87" x="624.75" y="285.37" class="known"><title>void __cdecl Creature_Underwater(struct ITEM_INFO *item, int32_t depth);</title></rect>
<rect width="5.18" height="4.87" x="624.75" y="293.24" class="decompiled"><title>const struct FLOOR_INFO __cdecl *Camera_GoodPosition(int32_t x, int32_t y, int32_t z, int16_t room_num);</title></rect>
<rect width="5.18" height="4.87" x="624.75" y="301.11" class="known"><title>void __cdecl InitialiseCult3(int16_t item_num);</title></rect>
<rect width="5.18" height="4.77" x="624.75" y="308.98" class="known"><title>void __cdecl set_arm_info(struct LARA_ARM *arm, int32_t frame);</title></rect>
<rect width="5.18" height="4.77" x="624.75" y="316.76" class="known"><title>void __cdecl DisableBaddieAI(int16_t item_num);</title></rect>
<rect width="5.18" height="4.77" x="624.75" y="324.53" class="known"><title>void __cdecl TrapDoorControl(int16_t item_num);</title></rect>
<rect width="5.18" height="4.67" x="624.75" y="332.30" class="known"><title>void __cdecl Creature_Neck(struct ITEM_INFO *item, int16_t required);</title></rect>
<rect width="5.18" height="4.67" x="624.75" y="339.98" class="known"><title>int16_t __cdecl Room_GetDoor(struct FLOOR_INFO *floor);</title></rect>
<rect width="5.18" height="4.67" x="624.75" y="347.65" class="known"><title>void __cdecl draw_pistol_meshes(int32_t weapon_type);</title></rect>
<rect width="5.18" height="4.67" x="624.75" y="355.33" class="known"><title>int32_t __cdecl TestBlockMovable(struct ITEM_INFO *item, int32_t blokhite);</title></rect>
<rect width="4.95" height="4.90" x="632.93" y="245.52" class="known"><title>void __cdecl ControlGunShot(int16_t fx_num);</title></rect>
<rect width="4.95" height="4.90" x="640.89" y="245.52" class="known"><title>JOYSTICK_NODE *__cdecl GetJoystick(GUID *lpGuid);</title></rect>
<rect width="4.95" height="4.90" x="648.84" y="245.52" class="known"><title>bool __cdecl OpenGameRegistryKey(LPCTSTR key);</title></rect>
<rect width="4.95" height="4.90" x="656.80" y="245.52" class="known"><title>double __cdecl UT_Microseconds(void);</title></rect>
<rect width="4.85" height="4.90" x="664.75" y="245.52" class="decompiled"><title>void __cdecl Lara_State_Extra_StartAnim(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="4.85" height="4.90" x="672.60" y="245.52" class="known"><title>void __cdecl BGND_Free(void);</title></rect>
<rect width="4.85" height="4.90" x="680.45" y="245.52" class="known"><title>bool __cdecl WinVidClearBuffer(LPDDS surface, LPRECT rect, DWORD fillColor);</title></rect>
<rect width="4.85" height="4.90" x="688.31" y="245.52" class="known"><title>void __cdecl WinVidExitMessage(void);</title></rect>
<rect width="4.75" height="4.90" x="696.16" y="245.52" class="decompiled"><title>void __cdecl Lara_State_Extra_Breath(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="4.75" height="4.90" x="703.91" y="245.52" class="known"><title>void __cdecl WriteSG(void *pointer, int32_t size);</title></rect>
<rect width="4.75" height="4.90" x="711.66" y="245.52" class="known"><title>void __cdecl GetSavedGamesList(REQUEST_INFO *req);</title></rect>
<rect width="4.65" height="4.90" x="719.41" y="245.52" class="known"><title>int32_t __cdecl Boat_DoDynamics(int32_t height, int32_t fallspeed, int32_t *y);</title></rect>
<rect width="4.65" height="4.90" x="727.06" y="245.52" class="decompiled"><title>void __cdecl Lara_State_FastTurn(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="4.65" height="4.90" x="734.70" y="245.52" class="known"><title>void __cdecl set_flare_arm(int32_t frame);</title></rect>
<rect width="4.65" height="4.90" x="742.35" y="245.52" class="known"><title>void __cdecl DartEffectControl(int16_t fx_num);</title></rect>
<rect width="4.53" height="5.02" x="632.93" y="253.42" class="known"><title>void __cdecl SE_OptionsStrCat(LPTSTR *dstString, bool isEnabled, bool *isNext, LPCTSTR srcString);</title></rect>
<rect width="4.53" height="4.91" x="632.93" y="261.43" class="decompiled"><title>void __cdecl Lara_State_BackJump(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="4.53" height="4.91" x="632.93" y="269.35" class="known"><title>DISPLAY_MODE *__thiscall InsertDisplayModeInListTail(DISPLAY_MODE_LIST *modeList);</title></rect>
<rect width="4.53" height="4.91" x="632.93" y="277.26" class="known"><title>void __cdecl HWR_EnableColorKey(bool state);</title></rect>
<rect width="4.53" height="4.91" x="632.93" y="285.17" class="known"><title>void __cdecl HWR_FreeTexturePages(void);</title></rect>
<rect width="4.53" height="4.91" x="632.93" y="293.08" class="known"><title>LONG __cdecl SetRegistryStringValue(LPCTSTR lpValueName, LPCTSTR value, int32_t length);</title></rect>
<rect width="4.53" height="4.80" x="632.93" y="300.99" class="known"><title>void __cdecl Creature_Head(struct ITEM_INFO *item, int16_t required);</title></rect>
<rect width="4.53" height="4.80" x="632.93" y="308.80" class="known"><title>void __cdecl ClearLOT(struct LOT_INFO *LOT);</title></rect>
<rect width="4.53" height="4.80" x="632.93" y="316.60" class="known"><title>void __cdecl LaraBurn(void);</title></rect>
<rect width="4.53" height="4.80" x="632.93" y="324.40" class="known"><title>BOOL __cdecl ReadFileSync(HANDLE hFile, LPVOID lpBuffer, DWORD nBytesToRead, LPDWORD lpnBytesRead, LPOVERLAPPED lpOverlapped);</title></rect>
<rect width="4.53" height="4.70" x="632.93" y="332.21" class="known"><title>void __cdecl AddDynamicLight(int32_t x, int32_t y, int32_t z, int32_t intensity, int32_t falloff);</title></rect>
<rect width="4.53" height="4.70" x="632.93" y="339.91" class="known"><title>int32_t __cdecl CalculateWindowWidth(int32_t width, int32_t height);</title></rect>
<rect width="4.53" height="4.70" x="632.93" y="347.60" class="known"><title>DISPLAY_ADAPTER_NODE *__cdecl WinVidGetDisplayAdapter(GUID *lpGuid);</title></rect>
<rect width="4.53" height="4.70" x="632.93" y="355.30" class="known"><title>DISPLAY_MODE *__thiscall InsertDisplayModeInListHead(DISPLAY_MODE_LIST *modeList);</title></rect>
<rect width="4.47" height="4.76" x="640.46" y="253.42" class="decompiled"><title>const struct SOUND_ADAPTER_NODE *__cdecl S_Audio_Sample_GetAdapter(GUID *guid);</title></rect>
<rect width="4.47" height="4.76" x="647.93" y="253.42" class="known"><title>void __cdecl WinStopFMV(bool isPlayback);</title></rect>
<rect width="4.47" height="4.76" x="655.40" y="253.42" class="decompiled"><title>int32_t __fastcall Math_Atan(int32_t x, int32_t y);</title></rect>
<rect width="4.36" height="4.76" x="662.87" y="253.42" class="known"><title>int32_t __cdecl Creature_Activate(int16_t item_num);</title></rect>
<rect width="4.36" height="4.76" x="670.23" y="253.42" class="known"><title>void __cdecl phd_TranslateRel_ID(int32_t x, int32_t y, int32_t z, int32_t x2, int32_t y2, int32_t z2);</title></rect>
<rect width="4.36" height="4.76" x="677.60" y="253.42" class="decompiled"><title>void __cdecl Lara_State_Extra_YetiKill(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="4.26" height="4.76" x="684.96" y="253.42" class="known"><title>void __cdecl InitialiseKillerStatue(int16_t item_num);</title></rect>
<rect width="4.26" height="4.76" x="692.22" y="253.42" class="known"><title>HRESULT __cdecl DDrawSurfaceRestoreLost(LPDDS surface1, LPDDS surface2, bool blank);</title></rect>
<rect width="4.26" height="4.76" x="699.48" y="253.42" class="known"><title>DWORD __cdecl GetRenderBitDepth(DWORD dwRGBBitCount);</title></rect>
<rect width="4.26" height="4.76" x="706.75" y="253.42" class="known"><title>void __cdecl S_InsertBackPolygon(int32_t x0, int32_t y0, int32_t x1, int32_t y1);</title></rect>
<rect width="4.26" height="4.76" x="714.01" y="253.42" class="decompiled"><title>int32_t __cdecl S_Audio_Sample_OutPlay(int32_t sample_id, uint16_t volume, int32_t pitch, int32_t pan);</title></rect>
<rect width="4.26" height="4.76" x="721.27" y="253.42" class="decompiled"><title>int32_t __cdecl S_Audio_Sample_OutPlayLooped(int32_t track_id, uint16_t volume, int32_t pitch, int32_t pan);</title></rect>
<rect width="4.16" height="4.76" x="728.53" y="253.42" class="known"><title>void __cdecl DrawGameInfo(int32_t timed);</title></rect>
<rect width="4.16" height="4.76" x="735.69" y="253.42" class="known"><title>bool __thiscall CompareVideoModes(DISPLAY_MODE *mode1, DISPLAY_MODE *mode2);</title></rect>
<rect width="4.16" height="4.76" x="742.84" y="253.42" class="decompiled"><title>bool __cdecl S_Audio_Sample_IsTrackPlaying(int32_t track_id);</title></rect>
<rect width="4.36" height="4.44" x="640.46" y="261.18" class="known"><title>HRESULT __cdecl DDrawSurfaceCreate(LPDDSDESC dsp, LPDDS *surface);</title></rect>
<rect width="4.36" height="4.44" x="640.46" y="268.61" class="known"><title>void __cdecl BitMaskGetNumberOfBits(DWORD bitMask, DWORD *bitDepth, DWORD *bitOffset);</title></rect>
<rect width="4.36" height="4.44" x="640.46" y="276.05" class="known"><title>void __cdecl GetValidLevelsList(REQUEST_INFO *req);</title></rect>
<rect width="4.36" height="4.33" x="640.46" y="283.49" class="known"><title>void __cdecl draw_right_gun(struct ITEM_INFO *item);</title></rect>
<rect width="4.36" height="4.33" x="640.46" y="290.82" class="known"><title>void __cdecl draw_left_gun(struct ITEM_INFO *item);</title></rect>
<rect width="4.36" height="4.33" x="640.46" y="298.14" class="known"><title>void __cdecl InitialiseCult1(int16_t item_num);</title></rect>
<rect width="4.36" height="4.33" x="640.46" y="305.47" class="known"><title>void __cdecl WinVidShowGameWindow(int32_t nCmdShow);</title></rect>
<rect width="4.36" height="4.33" x="640.46" y="312.80" class="known"><title>void __cdecl S_FadeToBlack(void);</title></rect>
<rect width="4.36" height="4.22" x="640.46" y="320.13" class="known"><title>void __cdecl ShutThatDoor(struct DOORPOS_DATA *d);</title></rect>
<rect width="4.36" height="4.22" x="640.46" y="327.35" class="known"><title>int32_t __cdecl UT_ErrorBox(UINT uID, HWND hWnd);</title></rect>
<rect width="4.36" height="4.11" x="640.46" y="334.56" class="known"><title>void __cdecl phd_TranslateRel_I(int32_t x, int32_t y, int32_t z);</title></rect>
<rect width="4.36" height="4.11" x="640.46" y="341.67" class="known"><title>void __cdecl phd_RotYXZ_I(int16_t y, int16_t x, int16_t z);</title></rect>
<rect width="4.36" height="4.11" x="640.46" y="348.78" class="known"><title>void __cdecl WinVidSetMinWindowSize(int32_t width, int32_t height);</title></rect>
<rect width="4.36" height="4.11" x="640.46" y="355.89" class="known"><title>void __cdecl WinVidSetMaxWindowSize(int32_t width, int32_t height);</title></rect>
<rect width="3.98" height="4.38" x="647.83" y="261.18" class="known"><title>void __cdecl lara_normal_effect(struct ITEM_INFO *item);</title></rect>
<rect width="3.98" height="4.38" x="647.83" y="268.56" class="known"><title>void __cdecl Inv_RingLight(struct RING_INFO *ring);</title></rect>
<rect width="3.98" height="4.38" x="647.83" y="275.94" class="decompiled"><title>void __cdecl Lara_State_FastFall(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="3.98" height="4.38" x="647.83" y="283.32" class="known"><title>void __cdecl InitialiseSkidoo(int16_t item_num);</title></rect>
<rect width="3.98" height="4.38" x="647.83" y="290.70" class="known"><title>bool __cdecl WinVidInit(void);</title></rect>
<rect width="3.98" height="4.38" x="647.83" y="298.08" class="known"><title>void __cdecl DefaultConflict(void);</title></rect>
<rect width="3.98" height="4.38" x="647.83" y="305.46" class="known"><title>void __cdecl UpdateTicks(void);</title></rect>
<rect width="3.98" height="4.26" x="647.83" y="312.84" class="known"><title>void __cdecl TrapDoorCeiling(struct ITEM_INFO *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="3.98" height="4.15" x="647.83" y="320.10" class="known"><title>void __cdecl ready_flare(void);</title></rect>
<rect width="3.98" height="4.15" x="647.83" y="327.25" class="known"><title>void __cdecl FallingBlockFloor(struct ITEM_INFO *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="3.98" height="4.15" x="647.83" y="334.40" class="known"><title>void __cdecl Enumerate3DDevices(struct DISPLAY_ADAPTER *adapter);</title></rect>
<rect width="3.98" height="4.15" x="647.83" y="341.55" class="known"><title>DWORD __cdecl EncodePutPCX(BYTE value, BYTE num, BYTE *buffer);</title></rect>
<rect width="3.98" height="4.15" x="647.83" y="348.70" class="known"><title>int32_t __stdcall SE_PropSheetCallback(HWND hwndDlg, UINT uMsg, LPARAM lParam);</title></rect>
<rect width="3.98" height="4.15" x="647.83" y="355.85" class="known"><title>HWR_TEXHANDLE __cdecl GetTexturePageHandle(int32_t pageIndex);</title></rect>
<rect width="3.90" height="4.12" x="654.81" y="261.18" class="known"><title>void __cdecl gar_RotYXZsuperpack_I(int16_t **pprot1, int16_t **pprot2, int32_t skip);</title></rect>
<rect width="3.90" height="4.12" x="661.70" y="261.18" class="known"><title>int32_t __cdecl KeyTrigger(int16_t item_num);</title></rect>
<rect width="3.90" height="4.12" x="668.60" y="261.18" class="known"><title>HRESULT __cdecl WinVidBufferLock(LPDDS surface, LPDDSDESC desc, DWORD flags);</title></rect>
<rect width="3.90" height="4.12" x="675.50" y="261.18" class="known"><title>int32_t __cdecl SE_SoundTestExecute(void);</title></rect>
<rect width="3.78" height="4.12" x="682.39" y="261.18" class="known"><title>void __cdecl Output_DrawPolyGTMap(int16_t *obj_ptr);</title></rect>
<rect width="3.78" height="4.12" x="689.18" y="261.18" class="known"><title>void __cdecl Output_DrawPolyWGTMap(int16_t *obj_ptr);</title></rect>
<rect width="3.78" height="4.12" x="695.96" y="261.18" class="known"><title>void __cdecl Boat_Initialise(int16_t item_num);</title></rect>
<rect width="3.78" height="4.12" x="702.74" y="261.18" class="known"><title>void __cdecl ControlCutShotgun(int16_t item_num);</title></rect>
<rect width="3.78" height="4.12" x="709.53" y="261.18" class="known"><title>void __cdecl InitialiseRollingBall(int16_t item_num);</title></rect>
<rect width="3.78" height="4.12" x="716.31" y="261.18" class="known"><title>int32_t __cdecl RenderErrorBox(int32_t errorCode);</title></rect>
<rect width="3.78" height="4.12" x="723.09" y="261.18" class="decompiled"><title>void __cdecl Shell_ExitSystem(const char *message);</title></rect>
<rect width="3.78" height="4.12" x="729.88" y="261.18" class="decompiled"><title>void __cdecl S_Audio_Sample_OutCloseAllTracks(void);</title></rect>
<rect width="3.67" height="4.12" x="736.66" y="261.18" class="known"><title>int32_t __cdecl CheckForHoldingState(int32_t state);</title></rect>
<rect width="3.67" height="4.12" x="743.33" y="261.18" class="known"><title>int32_t __cdecl WeaponObject(int32_t weapon_type);</title></rect>
<rect width="3.91" height="3.87" x="654.81" y="268.30" class="known"><title>void __cdecl DrawBridgeCeiling(struct ITEM_INFO *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="3.91" height="3.87" x="654.81" y="275.17" class="known"><title>int32_t __cdecl GetOffset(struct ITEM_INFO *item, int32_t x, int32_t z);</title></rect>
<rect width="3.91" height="3.87" x="654.81" y="282.04" class="known"><title>void __cdecl ControlGlow(int16_t nFX);</title></rect>
<rect width="3.91" height="3.87" x="654.81" y="288.92" class="known"><title>void __cdecl WaitPrimaryBufferFlip(void);</title></rect>
<rect width="3.91" height="3.87" x="654.81" y="295.79" class="known"><title>void __cdecl S_RemoveCtrlText(void);</title></rect>
<rect width="3.91" height="3.87" x="654.81" y="302.66" class="known"><title>void __cdecl TexturePageReleaseVidMemSurface(TEXPAGE_DESC *page);</title></rect>
<rect width="3.91" height="3.76" x="654.81" y="309.53" class="known"><title>void __cdecl undraw_pistol_mesh_left(int32_t weapon_type);</title></rect>
<rect width="3.91" height="3.76" x="654.81" y="316.29" class="known"><title>void __cdecl undraw_pistol_mesh_right(int32_t weapon_type);</title></rect>
<rect width="3.91" height="3.76" x="654.81" y="323.05" class="known"><title>void __cdecl WinVidHideGameWindow(void);</title></rect>
<rect width="3.91" height="3.64" x="654.81" y="329.80" class="known"><title>void __cdecl Output_InitPolyList(void);</title></rect>
<rect width="3.91" height="3.64" x="654.81" y="336.44" class="known"><title>void __cdecl SetPCRequesterSize(struct REQUEST_INFO *req, int32_t maxlines, int32_t ypos);</title></rect>
<rect width="3.91" height="3.64" x="654.81" y="343.08" class="known"><title>int16_t __cdecl CreateItem(void);</title></rect>
<rect width="3.91" height="3.64" x="654.81" y="349.72" class="decompiled"><title>void __cdecl Lara_State_SwitchOn(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="3.91" height="3.64" x="654.81" y="356.36" class="known"><title>void __cdecl SwitchControl(int16_t item_num);</title></rect>
<rect width="3.88" height="3.67" x="661.72" y="268.30" class="known"><title>uint32_t __cdecl GetTextScaleV(uint32_t scale_v);</title></rect>
<rect width="3.88" height="3.67" x="668.60" y="268.30" class="unused"><title>sub_447170</title></rect>
<rect width="3.88" height="3.67" x="675.49" y="268.30" class="known"><title>void __cdecl TempVideoRemove(void);</title></rect>
<rect width="3.88" height="3.67" x="682.37" y="268.30" class="unused"><title>sub_447B40</title></rect>
<rect width="3.88" height="3.67" x="689.25" y="268.30" class="decompiled"><title>int32_t __cdecl S_Audio_Sample_GetFreeTrackIndex(void);</title></rect>
<rect width="3.88" height="3.67" x="696.14" y="268.30" class="known"><title>void __cdecl Shell_Shutdown(void);</title></rect>
<rect width="3.88" height="3.67" x="703.02" y="268.30" class="decompiled"><title>void __cdecl S_Audio_Sample_OutSetPanAndVolume(int32_t track_id, int32_t pan, uint16_t volume);</title></rect>
<rect width="3.88" height="3.67" x="709.91" y="268.30" class="decompiled"><title>void __cdecl Music_Stop(void);</title></rect>
<rect width="3.64" height="3.67" x="716.79" y="268.30" class="known"><title>void __cdecl Output_DrawPolyGTMapPersp(int16_t *obj_ptr);</title></rect>
<rect width="3.64" height="3.67" x="723.43" y="268.30" class="known"><title>void __cdecl Output_DrawPolyWGTMapPersp(int16_t *obj_ptr);</title></rect>
<rect width="3.64" height="3.67" x="730.07" y="268.30" class="known"><title>void __cdecl Item_ShiftCol(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="3.64" height="3.67" x="736.72" y="268.30" class="known"><title>int32_t __cdecl DrawPhaseCinematic(void);</title></rect>
<rect width="3.64" height="3.67" x="743.36" y="268.30" class="known"><title>int32_t __cdecl DrawPhaseGame(void);</title></rect>
<rect width="3.47" height="3.84" x="661.72" y="274.97" class="known"><title>void __cdecl T_ChangeText(struct TEXTSTRING *textstring, char *string);</title></rect>
<rect width="3.47" height="3.84" x="661.72" y="281.80" class="known"><title>uint32_t __cdecl GetTextScaleH(uint32_t scale_h);</title></rect>
<rect width="3.47" height="3.84" x="661.72" y="288.64" class="known"><title>bool __cdecl D3DIsSupported(LPD3DDEVICEDESC desc);</title></rect>
<rect width="3.47" height="3.84" x="661.72" y="295.48" class="known"><title>void __cdecl S_InitialiseScreen(GF_LEVEL_TYPE levelType);</title></rect>
<rect width="3.47" height="3.84" x="661.72" y="302.32" class="known"><title>LONG __cdecl SetRegistryBinaryValue(LPCTSTR lpValueName, LPBYTE value, DWORD valueSize);</title></rect>
<rect width="3.47" height="3.84" x="661.72" y="309.16" class="known"><title>void __thiscall SE_ReleaseBitmapResource(BITMAP_RESOURCE *bmpRsrc);</title></rect>
<rect width="3.47" height="3.71" x="661.72" y="316" class="known"><title>void __cdecl Output_PrintPolyList(uint8_t *surface_ptr);</title></rect>
<rect width="3.47" height="3.71" x="661.72" y="322.71" class="known"><title>void __cdecl Lara_Col_Default(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="3.47" height="3.71" x="661.72" y="329.43" class="known"><title>void __cdecl DrawBridgeFloor(struct ITEM_INFO *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="3.47" height="3.71" x="661.72" y="336.14" class="known"><title>void __cdecl ChangeFileNameExtension(char *fileName, const char *fileExt);</title></rect>
<rect width="3.47" height="3.71" x="661.72" y="342.86" class="known"><title>DWORD __cdecl S_DumpScreen(void);</title></rect>
<rect width="3.47" height="3.71" x="661.72" y="349.57" class="known"><title>LPVOID __cdecl UT_LoadResource(LPCTSTR lpName, LPCTSTR lpType);</title></rect>
<rect width="3.47" height="3.71" x="661.72" y="356.29" class="known"><title>LONG __cdecl SetRegistryFloatValue(LPCTSTR lpValueName, double value);</title></rect>
<rect width="3.29" height="3.78" x="668.19" y="274.97" class="known"><title>void __cdecl Output_DrawPolyFlat(int16_t *obj_ptr);</title></rect>
<rect width="3.29" height="3.78" x="674.49" y="274.97" class="known"><title>void __cdecl Output_DrawPolyTrans(int16_t *obj_ptr);</title></rect>
<rect width="3.29" height="3.78" x="680.78" y="274.97" class="known"><title>void __cdecl Output_DrawPolyGouraud(int16_t *obj_ptr);</title></rect>
<rect width="3.29" height="3.78" x="687.07" y="274.97" class="known"><title>void __cdecl Creature_Tilt(struct ITEM_INFO *item, int16_t angle);</title></rect>
<rect width="3.29" height="3.78" x="693.37" y="274.97" class="known"><title>int16_t *__cdecl GetBestFrame(struct ITEM_INFO *item);</title></rect>
<rect width="3.29" height="3.78" x="699.66" y="274.97" class="decompiled"><title>void __cdecl Lara_State_HangLeft(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="3.29" height="3.78" x="705.95" y="274.97" class="decompiled"><title>void __cdecl Lara_State_HangRight(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="3.29" height="3.78" x="712.24" y="274.97" class="known"><title>void __cdecl Lara_State_ClimbLeft(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="3.29" height="3.78" x="718.54" y="274.97" class="known"><title>void __cdecl Lara_State_ClimbRight(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="3.29" height="3.78" x="724.83" y="274.97" class="known"><title>void __cdecl LiftFloor(struct ITEM_INFO *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="3.29" height="3.78" x="731.12" y="274.97" class="known"><title>void __cdecl LiftCeiling(struct ITEM_INFO *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="3.29" height="3.78" x="737.41" y="274.97" class="known"><title>void __cdecl BridgeTilt1Ceiling(struct ITEM_INFO *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="3.29" height="3.78" x="743.71" y="274.97" class="known"><title>void __cdecl ReadSG(void *pointer, int32_t size);</title></rect>
<rect width="3.72" height="3.35" x="668.19" y="281.75" class="known"><title>void __cdecl WinVidSetGameWindowSize(int32_t width, int32_t height);</title></rect>
<rect width="3.72" height="3.35" x="668.19" y="288.10" class="decompiled"><title>void __thiscall S_FlaggedString_InitAdapter(struct DISPLAY_ADAPTER *adapter);</title></rect>
<rect width="3.72" height="3.35" x="668.19" y="294.45" class="known"><title>void __cdecl S_FadeInInventory(BOOL isFade);</title></rect>
<rect width="3.72" height="3.35" x="668.19" y="300.80" class="known"><title>void __cdecl S_DrawScreenLine(int32_t x, int32_t y, int32_t z, int32_t xLen, int32_t yLen, BYTE colorIdx, D3DCOLOR *gour, uint16_t flags);</title></rect>
<rect width="3.72" height="3.35" x="668.19" y="307.15" class="known"><title>void __cdecl HWR_GetPageHandles(void);</title></rect>
<rect width="3.72" height="3.35" x="668.19" y="313.50" class="known"><title>bool __cdecl ReloadTextures(bool reset);</title></rect>
<rect width="3.72" height="3.23" x="668.19" y="319.86" class="known"><title>void __cdecl InitInterpolate(int32_t frac, int32_t rate);</title></rect>
<rect width="3.72" height="3.23" x="668.19" y="326.09" class="known"><title>void __cdecl TempVideoAdjust(int32_t hires, double sizer);</title></rect>
<rect width="3.72" height="3.23" x="668.19" y="332.32" class="known"><title>void __cdecl game_free(DWORD freeSize);</title></rect>
<rect width="3.72" height="3.11" x="668.19" y="338.55" class="known"><title>void __cdecl Output_SortPolyList(void);</title></rect>
<rect width="3.72" height="3.11" x="668.19" y="344.66" class="known"><title>void __cdecl CutscenePlayerGen_Initialise(int16_t item_num);</title></rect>
<rect width="3.72" height="3.11" x="668.19" y="350.78" class="decompiled"><title>void __cdecl Lara_State_RightJump(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="3.72" height="3.11" x="668.19" y="356.89" class="decompiled"><title>void __cdecl Lara_State_LeftJump(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="3.32" height="3.50" x="674.91" y="281.75" class="known"><title>void __cdecl Lara_Col_HangLeft(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="3.32" height="3.50" x="681.23" y="281.75" class="known"><title>void __cdecl Lara_Col_HangRight(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="3.32" height="3.50" x="687.55" y="281.75" class="known"><title>void __cdecl draw_shotgun_meshes(int32_t weapon_type);</title></rect>
<rect width="3.32" height="3.50" x="693.87" y="281.75" class="known"><title>int32_t __cdecl PickupTrigger(int16_t item_num);</title></rect>
<rect width="3.32" height="3.50" x="700.19" y="281.75" class="known"><title>void __cdecl DDrawRelease(void);</title></rect>
<rect width="3.32" height="3.50" x="706.51" y="281.75" class="known"><title>void __cdecl phd_PushUnitMatrix(void);</title></rect>
<rect width="3.20" height="3.50" x="712.83" y="281.75" class="known"><title>int16_t *__cdecl Output_CalcBackgroundLight(const int16_t *obj_ptr);</title></rect>
<rect width="3.20" height="3.50" x="719.02" y="281.75" class="known"><title>void __cdecl RingActive(void);</title></rect>
<rect width="3.20" height="3.50" x="725.22" y="281.75" class="known"><title>void __cdecl Lara_GetLaraCollisionInfo(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="3.20" height="3.50" x="731.41" y="281.75" class="known"><title>void __cdecl Lara_Col_SurfSwim(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="3.20" height="3.50" x="737.61" y="281.75" class="known"><title>void __cdecl OpenThatDoor(struct DOORPOS_DATA *d);</title></rect>
<rect width="3.20" height="3.50" x="743.80" y="281.75" class="known"><title>void __cdecl BGND_GetPageHandles(void);</title></rect>
<rect width="3.31" height="3.38" x="674.91" y="288.24" class="known"><title>void __thiscall DisplayModeListDelete(DISPLAY_MODE_LIST *pList);</title></rect>
<rect width="3.31" height="3.38" x="674.91" y="294.62" class="known"><title>void __cdecl FreeTexturePage(int32_t pageIndex);</title></rect>
<rect width="3.31" height="3.25" x="674.91" y="301" class="known"><title>void __cdecl phd_RotY_I(int16_t ang);</title></rect>
<rect width="3.31" height="3.25" x="674.91" y="307.25" class="known"><title>void __cdecl phd_RotX_I(int16_t ang);</title></rect>
<rect width="3.31" height="3.25" x="674.91" y="313.50" class="known"><title>void __cdecl phd_RotZ_I(int16_t ang);</title></rect>
<rect width="3.31" height="3.25" x="674.91" y="319.75" class="known"><title>int32_t __cdecl Music_GetRealTrack(int32_t track);</title></rect>
<rect width="3.31" height="3.25" x="674.91" y="326" class="decompiled"><title>void __cdecl S_Audio_Sample_AdjustTrackPitch(int32_t track_id, int32_t pitch);</title></rect>
<rect width="3.31" height="3.25" x="674.91" y="332.26" class="known"><title>void __cdecl S_CalculateStaticLight(int16_t adder);</title></rect>
<rect width="3.31" height="3.12" x="674.91" y="338.51" class="known"><title>void __cdecl ControlRichochet1(int16_t fx_num);</title></rect>
<rect width="3.31" height="3.12" x="674.91" y="344.63" class="known"><title>void __cdecl InitialiseFXArray(void);</title></rect>
<rect width="3.31" height="3.12" x="674.91" y="350.75" class="decompiled"><title>void __cdecl Lara_State_PushBlock(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="3.31" height="3.12" x="674.91" y="356.88" class="decompiled"><title>void __cdecl Lara_State_Pickup(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="3.32" height="3.11" x="681.22" y="288.24" class="decompiled"><title>void __cdecl Lara_State_UseKey(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="3.32" height="3.11" x="687.55" y="288.24" class="known"><title>void __cdecl BridgeTilt1Floor(struct ITEM_INFO *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="3.32" height="3.11" x="693.87" y="288.24" class="known"><title>bool __cdecl BGND_Init(void);</title></rect>
<rect width="3.32" height="3.11" x="700.20" y="288.24" class="known"><title>void __cdecl CleanupTextures(void);</title></rect>
<rect width="3.32" height="3.11" x="706.52" y="288.24" class="known"><title>BOOL __cdecl OpenRegistryKey(LPCTSTR lpSubKey);</title></rect>
<rect width="3.19" height="3.11" x="712.84" y="288.24" class="known"><title>void __cdecl Creature_Initialise(int16_t item_num);</title></rect>
<rect width="3.19" height="3.11" x="719.04" y="288.24" class="known"><title>int32_t __cdecl Room_FindGridShift(int32_t src, int32_t dst);</title></rect>
<rect width="3.19" height="3.11" x="725.23" y="288.24" class="known"><title>void __cdecl Inv_RingRotateLeft(struct RING_INFO *ring);</title></rect>
<rect width="3.19" height="3.11" x="731.42" y="288.24" class="known"><title>void __cdecl Inv_RingRotateRight(struct RING_INFO *ring);</title></rect>
<rect width="3.19" height="3.11" x="737.61" y="288.24" class="decompiled"><title>void __cdecl Lara_State_SwanDive(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="3.19" height="3.11" x="743.81" y="288.24" class="known"><title>void __cdecl BridgeTilt2Floor(struct ITEM_INFO *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="2.86" height="3.45" x="681.22" y="294.35" class="unused"><title>sub_4471C0</title></rect>
<rect width="2.86" height="3.45" x="681.22" y="300.81" class="unused"><title>sub_447B90</title></rect>
<rect width="2.86" height="3.45" x="681.22" y="307.26" class="decompiled"><title>void __cdecl S_Audio_Sample_CloseTrack(int32_t track_id);</title></rect>
<rect width="2.86" height="3.32" x="681.22" y="313.71" class="decompiled"><title>void __cdecl S_Audio_Sample_CloseAllTracks(void);</title></rect>
<rect width="2.86" height="3.32" x="681.22" y="320.03" class="known"><title>void __cdecl S_DrawScreenFBox(int32_t sx, int32_t sy, int32_t z, int32_t width, int32_t height, BYTE colorIdx, GOURAUD_FILL *gour, uint16_t flags);</title></rect>
<rect width="2.86" height="3.18" x="681.22" y="326.34" class="known"><title>void __cdecl Demo_GetInput(void);</title></rect>
<rect width="2.86" height="3.18" x="681.22" y="332.52" class="known"><title>int32_t __cdecl FlashIt(void);</title></rect>
<rect width="2.86" height="3.18" x="681.22" y="338.70" class="known"><title>void __cdecl WinInStart(void);</title></rect>
<rect width="2.86" height="3.04" x="681.22" y="344.88" class="known"><title>void __cdecl ChandelierFX(struct ITEM_INFO *item);</title></rect>
<rect width="2.86" height="3.04" x="681.22" y="350.92" class="known"><title>void __cdecl DrawModeInfo(void);</title></rect>
<rect width="2.86" height="3.04" x="681.22" y="356.96" class="known"><title>void __cdecl Inv_RingCalcAdders(struct RING_INFO *ring, int16_t rotation_duration);</title></rect>
<rect width="2.75" height="3.16" x="687.09" y="294.35" class="known"><title>void __cdecl Inv_RingMotionSetup(struct RING_INFO *ring, int16_t status, int16_t status_target, int16_t frames);</title></rect>
<rect width="2.75" height="3.16" x="692.84" y="294.35" class="decompiled"><title>void __cdecl Lara_State_Fallback(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="2.75" height="3.16" x="698.60" y="294.35" class="known"><title>void __cdecl InitialiseMovingBlock(int16_t item_num);</title></rect>
<rect width="2.75" height="3.16" x="704.35" y="294.35" class="known"><title>void __cdecl DrawBridgeCollision(int16_t item_num, struct ITEM_INFO *laraitem, struct COLL_INFO *coll);</title></rect>
<rect width="2.75" height="3.16" x="710.11" y="294.35" class="known"><title>void __cdecl T_InitPrint(void);</title></rect>
<rect width="2.75" height="3.16" x="715.86" y="294.35" class="decompiled"><title>void __cdecl S_Audio_Sample_AdjustTrackVolumeAndPan(int32_t track_id, int32_t volume, int32_t pan);</title></rect>
<rect width="2.75" height="3.16" x="721.62" y="294.35" class="known"><title>LPTSTR __cdecl UT_FindArg(LPCTSTR str);</title></rect>
<rect width="2.75" height="3.16" x="727.37" y="294.35" class="decompiled"><title>uint32_t  __fastcall Math_Sqrt(uint32_t n);</title></rect>
<rect width="2.62" height="3.16" x="733.13" y="294.35" class="decompiled"><title>void __cdecl Lara_State_Slide(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="2.62" height="3.16" x="738.75" y="294.35" class="known"><title>void __cdecl undraw_shotgun_meshes(int32_t weapon_type);</title></rect>
<rect width="2.62" height="3.16" x="744.38" y="294.35" class="known"><title>void __cdecl T_FlashText(struct TEXTSTRING *textstring, int16_t enable, int16_t rate);</title></rect>
<rect width="2.94" height="2.83" x="687.09" y="300.51" class="known"><title>DWORD __cdecl GetZBufferDepth(void);</title></rect>
<rect width="2.94" height="2.83" x="687.09" y="306.34" class="known"><title>void __cdecl HWR_ResetColorKey(void);</title></rect>
<rect width="2.94" height="2.69" x="687.09" y="312.17" class="known"><title>void __cdecl phd_PutPolygons_I(int16_t *ptr, int32_t clip);</title></rect>
<rect width="2.94" height="2.69" x="687.09" y="317.86" class="known"><title>void __cdecl Sound_Init(void);</title></rect>
<rect width="2.94" height="2.69" x="687.09" y="323.55" class="decompiled"><title>void __cdecl S_Audio_Sample_Shutdown(void);</title></rect>
<rect width="2.94" height="2.69" x="687.09" y="329.25" class="known"><title>void __cdecl S_UnloadLevelFile(void);</title></rect>
<rect width="2.94" height="2.69" x="687.09" y="334.94" class="decompiled"><title>int32_t __cdecl S_Audio_Sample_CalculateSampleVolume(int32_t volume);</title></rect>
<rect width="2.94" height="2.69" x="687.09" y="340.63" class="known"><title>LONG __cdecl SetRegistryBoolValue(LPCTSTR lpValueName, bool value);</title></rect>
<rect width="2.94" height="2.56" x="687.09" y="346.33" class="known"><title>void __cdecl T_AddOutline(struct TEXTSTRING *textstring, int16_t enable, int16_t colour, uint16_t *gourptr, uint16_t flags);</title></rect>
<rect width="2.94" height="2.56" x="687.09" y="351.88" class="known"><title>void __cdecl DInputKeyboardRelease(void);</title></rect>
<rect width="2.94" height="2.56" x="687.09" y="357.44" class="known"><title>void __cdecl HWR_ResetTexSource(void);</title></rect>
<rect width="2.86" height="2.50" x="693.03" y="300.51" class="known"><title>void __cdecl MakeAmmoString(char *string);</title></rect>
<rect width="2.86" height="2.50" x="698.89" y="300.51" class="known"><title>int32_t __cdecl CalculateWindowHeight(int32_t width, int32_t height);</title></rect>
<rect width="2.71" height="2.50" x="704.74" y="300.51" class="known"><title>void __cdecl phd_PushMatrix_I(void);</title></rect>
<rect width="2.71" height="2.50" x="710.46" y="300.51" class="decompiled"><title>void __cdecl Lara_State_PPReady(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="2.71" height="2.50" x="716.17" y="300.51" class="known"><title>void __cdecl InitialiseLevelFlags(void);</title></rect>
<rect width="2.71" height="2.50" x="721.88" y="300.51" class="known"><title>void __cdecl T_DrawText(void);</title></rect>
<rect width="2.71" height="2.50" x="727.59" y="300.51" class="known"><title>void __cdecl S_FadeOutInventory(BOOL isFade);</title></rect>
<rect width="2.57" height="2.50" x="733.30" y="300.51" class="known"><title>void __cdecl Inv_RingMotionRadius(struct RING_INFO *ring, int16_t target);</title></rect>
<rect width="2.57" height="2.50" x="738.87" y="300.51" class="known"><title>LPCTSTR __cdecl GetFullPath(LPCTSTR fileName);</title></rect>
<rect width="2.57" height="2.50" x="744.43" y="300.51" class="known"><title>void __cdecl ScreenClear(bool isPhdWinSize);</title></rect>
<rect width="2.84" height="2.24" x="693.03" y="306.01" class="decompiled"><title>int32_t __cdecl S_Audio_Sample_CalculateSamplePan(int16_t pan);</title></rect>
<rect width="2.84" height="2.24" x="698.86" y="306.01" class="known"><title>void __cdecl FreeTexturePages(void);</title></rect>
<rect width="2.84" height="2.24" x="704.70" y="306.01" class="known"><title>void __cdecl SE_PassMessageToImage(HWND hWnd, UINT uMsg, WPARAM wParam);</title></rect>
<rect width="2.68" height="2.24" x="710.53" y="306.01" class="known"><title>void __cdecl Inv_RingMotionCameraPos(struct RING_INFO *ring, int16_t target);</title></rect>
<rect width="2.68" height="2.24" x="716.22" y="306.01" class="known"><title>int32_t __cdecl T_RemovePrint(struct TEXTSTRING *textstring);</title></rect>
<rect width="2.68" height="2.24" x="721.90" y="306.01" class="known"><title>HRESULT __cdecl WinVidBufferUnlock(LPDDS surface, LPDDSDESC desc);</title></rect>
<rect width="2.68" height="2.24" x="727.58" y="306.01" class="known"><title>LPDIRECT3DTEXTURE2 __cdecl Create3DTexture(LPDDS surface);</title></rect>
<rect width="2.68" height="2.24" x="733.26" y="306.01" class="known"><title>HRESULT __cdecl EnumerateTextureFormats(void);</title></rect>
<rect width="2.53" height="2.24" x="738.94" y="306.01" class="known"><title>void __cdecl Control_TriggerMusicTrack(int16_t value, int16_t flags, int16_t type);</title></rect>
<rect width="2.53" height="2.24" x="744.47" y="306.01" class="known"><title>void __cdecl AssaultStart(struct ITEM_INFO *item);</title></rect>
<rect width="2.52" height="2.25" x="693.03" y="311.25" class="known"><title>void __cdecl RemoveInventoryText(void);</title></rect>
<rect width="2.52" height="2.25" x="693.03" y="316.50" class="known"><title>void __cdecl Sound_Shutdown(void);</title></rect>
<rect width="2.52" height="2.25" x="693.03" y="321.75" class="known"><title>int16_t __cdecl T_GetStringLen(char *string);</title></rect>
<rect width="2.52" height="2.25" x="693.03" y="326.99" class="known"><title>bool __cdecl DInputEnumDevices(JOYSTICK_LIST *joystickList);</title></rect>
<rect width="2.52" height="2.25" x="693.03" y="332.24" class="known"><title>void __cdecl HWR_TexSource(HWR_TEXHANDLE texSource);</title></rect>
<rect width="2.52" height="2.10" x="693.03" y="337.49" class="known"><title>void __cdecl RubbleFX(struct ITEM_INFO *item);</title></rect>
<rect width="2.52" height="2.10" x="693.03" y="342.59" class="known"><title>void __cdecl ExplosionFX(struct ITEM_INFO *item);</title></rect>
<rect width="2.52" height="2.10" x="693.03" y="347.69" class="known"><title>void __cdecl Lara_Col_BackJump(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="2.52" height="2.10" x="693.03" y="352.80" class="known"><title>void __cdecl Lara_Col_RightJump(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="2.52" height="2.10" x="693.03" y="357.90" class="known"><title>void __cdecl Lara_Col_LeftJump(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="2.19" height="2.43" x="698.55" y="311.25" class="known"><title>void __cdecl Lara_Col_SlideBack(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="2.19" height="2.43" x="703.74" y="311.25" class="known"><title>void __cdecl Lara_Col_SurfBack(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="2.19" height="2.43" x="708.93" y="311.25" class="known"><title>void __cdecl Lara_Col_SurfLeft(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="2.19" height="2.43" x="714.12" y="311.25" class="known"><title>void __cdecl Lara_Col_SurfRight(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="2.19" height="2.43" x="719.31" y="311.25" class="known"><title>void __cdecl SecretControl(int16_t item_num);</title></rect>
<rect width="2.19" height="2.43" x="724.50" y="311.25" class="known"><title>uint16_t __cdecl S_COLOUR(int32_t red, int32_t green, int32_t blue);</title></rect>
<rect width="2.19" height="2.43" x="729.69" y="311.25" class="known"><title>void __cdecl FreePalette(int32_t paletteIndex);</title></rect>
<rect width="2.04" height="2.43" x="734.88" y="311.25" class="known"><title>void __cdecl phd_PopMatrix_I(void);</title></rect>
<rect width="2.04" height="2.43" x="739.92" y="311.25" class="known"><title>void __cdecl Inv_RingMotionRotation(struct RING_INFO *ring, int16_t rotation, int16_t target);</title></rect>
<rect width="2.04" height="2.43" x="744.96" y="311.25" class="known"><title>void __cdecl DrawMovableBlock(struct ITEM_INFO *item);</title></rect>
<rect width="2.14" height="2.32" x="698.55" y="316.68" class="known"><title>void __cdecl WinVidFreeWindow(void);</title></rect>
<rect width="2.14" height="2.32" x="698.55" y="322" class="known"><title>bool __cdecl DInputCreate(void);</title></rect>
<rect width="2.14" height="2.32" x="698.55" y="327.32" class="known"><title>bool __cdecl HWR_Init(void);</title></rect>
<rect width="2.14" height="2.16" x="698.55" y="332.64" class="known"><title>void __cdecl Lara_InitialiseLoad(int16_t item_num);</title></rect>
<rect width="2.14" height="2.16" x="698.55" y="337.81" class="known"><title>void __cdecl init_game_malloc(void);</title></rect>
<rect width="2.14" height="2.16" x="698.55" y="342.97" class="known"><title>void __cdecl S_SetupAboveWater(BOOL underwater);</title></rect>
<rect width="2.14" height="2.01" x="698.55" y="348.13" class="known"><title>void __cdecl Inv_RingMotionCameraPitch(struct RING_INFO *ring, int16_t target);</title></rect>
<rect width="2.14" height="2.01" x="698.55" y="353.14" class="known"><title>void __cdecl SafeFreeTexturePage(int32_t pageIndex);</title></rect>
<rect width="2.14" height="1.85" x="698.55" y="358.15" class="known"><title>void __cdecl AssaultStop(struct ITEM_INFO *item);</title></rect>
<rect width="2.22" height="1.78" x="703.70" y="316.68" class="known"><title>int32_t __cdecl GF_DoFrontEndSequence(void);</title></rect>
<rect width="2.22" height="1.78" x="708.92" y="316.68" class="known"><title>bool __cdecl D3DCreate(void);</title></rect>
<rect width="2.22" height="1.78" x="714.13" y="316.68" class="decompiled"><title>void __thiscall S_FlaggedString_Create(struct STRING_FLAGGED *string, int32_t size);</title></rect>
<rect width="2.22" height="1.78" x="719.35" y="316.68" class="decompiled"><title>BOOL __cdecl S_Audio_Sample_OutIsTrackPlaying(int32_t track_id);</title></rect>
<rect width="2.22" height="1.78" x="724.57" y="316.68" class="known"><title>bool __cdecl InitTextures(void);</title></rect>
<rect width="2.05" height="1.78" x="729.79" y="316.68" class="known"><title>void __cdecl Lara_Col_Slide(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="2.05" height="1.78" x="734.85" y="316.68" class="known"><title>void __cdecl Lara_State_ClimbEnd(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="2.05" height="1.78" x="739.90" y="316.68" class="known"><title>void __cdecl Lara_Col_SurfTread(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="2.05" height="1.78" x="744.95" y="316.68" class="known"><title>void __cdecl T_CentreH(struct TEXTSTRING *textstring, int16_t enable);</title></rect>
<rect width="1.63" height="2.21" x="703.70" y="321.46" class="known"><title>void __cdecl T_CentreV(struct TEXTSTRING *textstring, int16_t enable);</title></rect>
<rect width="1.63" height="2.21" x="703.70" y="326.68" class="known"><title>void __cdecl T_RightAlign(struct TEXTSTRING *textstring, int16_t enable);</title></rect>
<rect width="1.63" height="2.21" x="703.70" y="331.89" class="known"><title>void __cdecl T_BottomAlign(struct TEXTSTRING *textstring, int16_t enable);</title></rect>
<rect width="1.63" height="2.21" x="703.70" y="337.10" class="known"><title>int32_t __cdecl Random_GetControl(void);</title></rect>
<rect width="1.63" height="2.21" x="703.70" y="342.32" class="known"><title>int32_t __cdecl GetRandomDraw(void);</title></rect>
<rect width="1.63" height="2.21" x="703.70" y="347.53" class="known"><title>LONG __cdecl SetRegistryDwordValue(LPCTSTR lpValueName, DWORD value);</title></rect>
<rect width="1.63" height="2.21" x="703.70" y="352.75" class="known"><title>void __cdecl phd_PushMatrix(void);</title></rect>
<rect width="1.63" height="2.04" x="703.70" y="357.96" class="decompiled"><title>void __cdecl Lara_State_Special(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="1.90" height="1.76" x="708.33" y="321.46" class="decompiled"><title>void __cdecl Lara_State_Extra_GongBong(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="1.90" height="1.60" x="708.33" y="326.22" class="known"><title>void __cdecl BoilerFX(struct ITEM_INFO *item);</title></rect>
<rect width="1.90" height="1.60" x="708.33" y="330.82" class="known"><title>void __cdecl PistonFX(struct ITEM_INFO *item);</title></rect>
<rect width="1.90" height="1.60" x="708.33" y="335.42" class="known"><title>void __cdecl CurtainFX(struct ITEM_INFO *item);</title></rect>
<rect width="1.90" height="1.60" x="708.33" y="340.01" class="known"><title>void __cdecl StatueFX(struct ITEM_INFO *item);</title></rect>
<rect width="1.90" height="1.60" x="708.33" y="344.61" class="known"><title>void __cdecl SetChangeFX(struct ITEM_INFO *item);</title></rect>
<rect width="1.90" height="1.60" x="708.33" y="349.21" class="decompiled"><title>void __cdecl Lara_State_Reach(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="1.90" height="1.60" x="708.33" y="353.81" class="decompiled"><title>bool __cdecl S_Audio_Sample_DSoundCreate(GUID *guid);</title></rect>
<rect width="1.90" height="1.60" x="708.33" y="358.40" class="known"><title>void __cdecl S_DontDisplayPicture(void);</title></rect>
<rect width="1.68" height="1.82" x="713.23" y="321.46" class="decompiled"><title>void __cdecl S_Audio_Sample_OutSetPitch(int32_t track_id, int32_t pitch);</title></rect>
<rect width="1.68" height="1.82" x="717.91" y="321.46" class="known"><title>int32_t __cdecl GetFreePaletteIndex(void);</title></rect>
<rect width="1.68" height="1.82" x="722.59" y="321.46" class="known"><title>int32_t __cdecl GetFreeTexturePageIndex(void);</title></rect>
<rect width="1.68" height="1.82" x="727.27" y="321.46" class="known"><title>void __thiscall SE_UpdateBitmapPalette(BITMAP_RESOURCE *bmpRsrc, HWND hWnd, HWND hSender);</title></rect>
<rect width="1.51" height="1.82" x="731.95" y="321.46" class="known"><title>void __cdecl Inv_RemoveAllItems(void);</title></rect>
<rect width="1.51" height="1.82" x="736.46" y="321.46" class="known"><title>void __cdecl ReqItemCentreAlign(struct REQUEST_INFO *req, struct TEXTSTRING *txt);</title></rect>
<rect width="1.51" height="1.82" x="740.98" y="321.46" class="known"><title>void __cdecl Lara_ControlExtra(int16_t item_num);</title></rect>
<rect width="1.51" height="1.82" x="745.49" y="321.46" class="known"><title>void __cdecl BridgeFlatCeiling(struct ITEM_INFO *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="1.49" height="1.84" x="713.23" y="326.28" class="decompiled"><title>int32_t __fastcall Math_Sin(int16_t angle);</title></rect>
<rect width="1.49" height="1.66" x="713.23" y="331.12" class="known"><title>bool __cdecl EnumerateDisplayAdapters(struct DISPLAY_ADAPTER_LIST *displayAdapterList);</title></rect>
<rect width="1.49" height="1.66" x="713.23" y="335.77" class="known"><title>void __cdecl DInputRelease(void);</title></rect>
<rect width="1.49" height="1.66" x="713.23" y="340.43" class="decompiled"><title>bool __cdecl S_Audio_Sample_DSoundEnumerate(struct SOUND_ADAPTER_LIST *adapter_list);</title></rect>
<rect width="1.49" height="1.66" x="713.23" y="345.09" class="decompiled"><title>int32_t __fastcall Math_SinImpl(int16_t angle);</title></rect>
<rect width="1.49" height="1.48" x="713.23" y="349.74" class="known"><title>int32_t __cdecl GetDebouncedInput(int32_t input);</title></rect>
<rect width="1.49" height="1.48" x="713.23" y="354.22" class="known"><title>bool __cdecl HWR_VertexBufferFull(void);</title></rect>
<rect width="1.49" height="1.30" x="713.23" y="358.70" class="decompiled"><title>void __cdecl Lara_State_SlideBack(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="1.61" height="1.19" x="717.73" y="326.28" class="known"><title>void __cdecl draw_flare_meshes(void);</title></rect>
<rect width="1.61" height="1.19" x="722.34" y="326.28" class="known"><title>void __cdecl undraw_flare_meshes(void);</title></rect>
<rect width="1.61" height="1.19" x="726.95" y="326.28" class="unused"><title>sub_444990</title></rect>
<rect width="1.61" height="1.19" x="731.56" y="326.28" class="unused"><title>sub_444AA0</title></rect>
<rect width="1.61" height="1.19" x="736.17" y="326.28" class="unused"><title>sub_4470B0</title></rect>
<rect width="1.61" height="1.19" x="740.78" y="326.28" class="unused"><title>sub_447160</title></rect>
<rect width="1.61" height="1.19" x="745.39" y="326.28" class="unused"><title>sub_447A80</title></rect>
<rect width="1.72" height="1.09" x="717.73" y="330.47" class="unused"><title>sub_447B30</title></rect>
<rect width="1.72" height="1.09" x="722.45" y="330.47" class="known"><title>BOOL __cdecl S_LoadLevelFile(LPCTSTR fileName, int32_t levelID, GF_LEVEL_TYPE levelType);</title></rect>
<rect width="1.72" height="1.09" x="727.17" y="330.47" class="known"><title>int32_t __cdecl UT_MessageBox(LPCTSTR lpText, HWND hWnd);</title></rect>
<rect width="1.53" height="1.09" x="731.90" y="330.47" class="known"><title>void __cdecl AssaultReset(struct ITEM_INFO *item);</title></rect>
<rect width="1.53" height="1.09" x="736.42" y="330.47" class="known"><title>void __cdecl T_SetScale(struct TEXTSTRING *textstring, int32_t scale_h, int32_t scaleV);</title></rect>
<rect width="1.53" height="1.09" x="740.95" y="330.47" class="known"><title>void __cdecl WinInRunControlPanel(HWND hWnd);</title></rect>
<rect width="1.53" height="1.09" x="745.47" y="330.47" class="todo"><title>sub_44E860</title></rect>
<rect width="1.39" height="1.22" x="717.73" y="334.56" class="known"><title>void __cdecl SE_GraphicsAdapterSet(HWND hwndDlg, DISPLAY_ADAPTER_NODE *adapter);</title></rect>
<rect width="1.39" height="1.22" x="717.73" y="338.78" class="decompiled"><title>void __cdecl S_Audio_Sample_OutCloseTrack(int32_t track_id);</title></rect>
<rect width="1.39" height="1.04" x="717.73" y="343" class="known"><title>void __cdecl turn180_effect(struct ITEM_INFO *item);</title></rect>
<rect width="1.39" height="1.04" x="717.73" y="347.04" class="known"><title>void __cdecl invisibility_off(struct ITEM_INFO *item);</title></rect>
<rect width="1.39" height="1.04" x="717.73" y="351.07" class="known"><title>void __cdecl BridgeFlatFloor(struct ITEM_INFO *item, int32_t x, int32_t y, int32_t z, int32_t *height);</title></rect>
<rect width="1.39" height="1.04" x="717.73" y="355.11" class="known"><title>void __cdecl HWR_BeginScene(void);</title></rect>
<rect width="1.39" height="0.85" x="717.73" y="359.15" class="known"><title>void __cdecl InitialisePickUpDisplay(void);</title></rect>
<rect width="1.12" height="1.10" x="722.11" y="334.56" class="decompiled"><title>void __cdecl Lara_State_WaterOut(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="1.12" height="1.10" x="726.24" y="334.56" class="known"><title>void __cdecl ResetSG(void);</title></rect>
<rect width="0.93" height="1.10" x="730.36" y="334.56" class="decompiled"><title>void __cdecl Lara_State_Death(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="0.93" height="1.10" x="734.29" y="334.56" class="known"><title>void __cdecl Lara_State_Climbing(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="0.93" height="1.10" x="738.22" y="334.56" class="known"><title>void __cdecl Lara_State_ClimbDown(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="0.93" height="1.10" x="742.14" y="334.56" class="known"><title>void __cdecl Lara_State_Dive(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="0.93" height="1.10" x="746.07" y="334.56" class="known"><title>void __cdecl S_AdjustTexelCoordinates(void);</title></rect>
<rect width="0.80" height="1.23" x="722.11" y="338.66" class="known"><title>void __cdecl SE_GraphicsTestFinish(void);</title></rect>
<rect width="0.80" height="1.02" x="722.11" y="342.89" class="known"><title>void __cdecl RemoveAllReqItems(struct REQUEST_INFO *req);</title></rect>
<rect width="0.80" height="1.02" x="722.11" y="346.92" class="decompiled"><title>void __cdecl Lara_State_UpJump(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="0.80" height="1.02" x="722.11" y="350.94" class="decompiled"><title>void __cdecl Lara_State_Extra_Airlock(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="0.80" height="1.02" x="722.11" y="354.96" class="known"><title>void __cdecl Lara_Col_TurnLeft(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="0.80" height="1.02" x="722.11" y="358.98" class="known"><title>void __cdecl Lara_Col_Compress(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="1.01" height="0.81" x="725.92" y="338.66" class="known"><title>void __cdecl Lara_Col_StepLeft(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="1.01" height="0.81" x="729.93" y="338.66" class="known"><title>void __cdecl Lara_Col_Roll(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="1.01" height="0.81" x="733.95" y="338.66" class="known"><title>void __cdecl Lara_Col_Swim(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="1.01" height="0.81" x="737.96" y="338.66" class="decompiled"><title>void __thiscall S_FlaggedString_Delete(struct STRING_FLAGGED *string);</title></rect>
<rect width="1.01" height="0.81" x="741.97" y="338.66" class="known"><title>void __cdecl WinVidFinish(void);</title></rect>
<rect width="1.01" height="0.81" x="745.99" y="338.66" class="known"><title>bool __cdecl S_IntroFMV(LPCTSTR fileName1, LPCTSTR fileName2);</title></rect>
<rect width="0.57" height="1.29" x="725.92" y="342.47" class="known"><title>LONG __cdecl DeleteRegistryValue(LPCTSTR lpValueName);</title></rect>
<rect width="0.57" height="1.06" x="725.92" y="346.76" class="unused"><title>sub_4449A0</title></rect>
<rect width="0.57" height="1.06" x="725.92" y="350.82" class="known"><title>DISPLAY_MODE *__thiscall InsertDisplayMode(DISPLAY_MODE_LIST *modeList, DISPLAY_MODE_NODE *before);</title></rect>
<rect width="0.57" height="1.06" x="725.92" y="354.88" class="unused"><title>sub_4470C0</title></rect>
<rect width="0.57" height="1.06" x="725.92" y="358.94" class="unused"><title>sub_447A90</title></rect>
<rect width="0.66" height="0.96" x="729.49" y="342.47" class="known"><title>void __cdecl SafeFreePalette(int32_t paletteIndex);</title></rect>
<rect width="0.45" height="0.96" x="733.14" y="342.47" class="known"><title>HWND __cdecl WinVidFindGameWindow(void);</title></rect>
<rect width="0.45" height="0.96" x="736.60" y="342.47" class="known"><title>void __cdecl GameBuf_Shutdown(void);</title></rect>
<rect width="0.45" height="0.96" x="740.05" y="342.47" class="known"><title>HWND __cdecl SE_FindSetupDialog(void);</title></rect>
<rect width="0.25" height="0.96" x="743.50" y="342.47" class="known"><title>void __cdecl T_RemoveBackground(struct TEXTSTRING *textstring);</title></rect>
<rect width="0.25" height="0.96" x="746.75" y="342.47" class="known"><title>void __cdecl T_RemoveOutline(struct TEXTSTRING *textstring);</title></rect>
<rect width="0.74" height="0.44" x="729.49" y="346.44" class="todo"><title>sub_44E880</title></rect>
<rect width="0.74" height="0.44" x="729.49" y="349.88" class="known"><title>void __cdecl ScreenPartialDump(void);</title></rect>
<rect width="0.74" height="0.23" x="729.49" y="353.32" class="known"><title>void __cdecl WinInFinish(void);</title></rect>
<rect width="0.74" height="0.23" x="729.49" y="356.55" class="known"><title>void __cdecl S_FinishInventory(void);</title></rect>
<rect width="0.74" height="0.23" x="729.49" y="359.77" class="known"><title>bool __cdecl IsNewRegistryKeyCreated(void);</title></rect>
<rect width="0.26" height="0.46" x="733.23" y="346.44" class="known"><title>bool __cdecl S_PlayFMV(LPCTSTR fileName);</title></rect>
<rect width="0.26" height="0.46" x="733.23" y="349.90" class="known"><title>void __cdecl SE_AdvancedDlgInit(HWND hwndDlg);</title></rect>
<rect width="0.26" height="0.21" x="733.23" y="353.36" class="known"><title>void __thiscall DisplayModeListInit(DISPLAY_MODE_LIST *pList);</title></rect>
<rect width="0.26" height="0.21" x="733.23" y="356.57" class="known"><title>void __cdecl ScreenDump(void);</title></rect>
<rect width="0.26" height="0.21" x="733.23" y="359.79" class="known"><title>LONG __cdecl CloseRegistryKey(void);</title></rect>
<rect width="0.10" height="0.34" x="736.49" y="346.44" class="known"><title>LPCTSTR __cdecl DecodeErrorMessage(DWORD errorCode);</title></rect>
<rect width="0.10" height="0.34" x="739.38" y="346.44" class="known"><title>void __cdecl finish_level_effect(struct ITEM_INFO *item);</title></rect>
<rect width="0.10" height="0.34" x="742.04" y="346.44" class="known"><title>void __cdecl dynamic_light_off(struct ITEM_INFO *item);</title></rect>
<rect width="0.10" height="0.34" x="744.69" y="346.44" class="decompiled"><title>void __cdecl Lara_State_Null(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="0.10" height="0.34" x="747.35" y="346.44" class="known"><title>void __cdecl Lara_State_WaterRoll(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="0.10" height="0.10" x="736.49" y="349.77" class="known"><title>void __cdecl S_ClearScreen(void);</title></rect>
<rect width="0.10" height="0.10" x="736.49" y="352.63" class="known"><title>void __cdecl Game_SetCutsceneTrack(int32_t track);</title></rect>
<rect width="0.10" height="0.10" x="736.49" y="355.22" class="known"><title>void __cdecl lara_hands_free(struct ITEM_INFO *item);</title></rect>
<rect width="0.10" height="0.10" x="736.49" y="357.81" class="decompiled"><title>void __cdecl Lara_State_Splat(struct ITEM_INFO *item, struct COLL_INFO *coll);</title></rect>
<rect width="0.10" height="0.10" x="736.49" y="360.41" class="known"><title>void __cdecl SeedRandomControl(int32_t seed);</title></rect>
<rect width="0.10" height="0.10" x="739.59" y="349.77" class="known"><title>void __cdecl SeedRandomDraw(int32_t seed);</title></rect>
<rect width="0.10" height="0.10" x="742.19" y="349.77" class="known"><title>void __cdecl SE_SoundAdapterSet(HWND hwndDlg, SOUND_ADAPTER_NODE *adapter);</title></rect>
<rect width="0.10" height="0.10" x="744.80" y="349.77" class="known"><title>void __cdecl SE_ControlsJoystickSet(HWND hwndDlg, JOYSTICK_NODE *joystick);</title></rect>
<rect width="0.10" height="0.10" x="747.40" y="349.77" class="decompiled"><title>void __cdecl Sound_SetMasterVolume(int32_t volume);</title></rect>
<rect width="0.10" height="0.10" x="739.59" y="352.87" class="known"><title>void __cdecl invisibility_on(struct ITEM_INFO *item);</title></rect>
<rect width="0.10" height="0.10" x="739.59" y="355.55" class="known"><title>void __cdecl dynamic_light_on(struct ITEM_INFO *item);</title></rect>
<rect width="0.10" height="0.10" x="739.59" y="358.23" class="known"><title>void __cdecl WinVidClearMinWindowSize(void);</title></rect>
<rect width="0.10" height="0.10" x="739.59" y="360.62" class="known"><title>void __cdecl WinVidClearMaxWindowSize(void);</title></rect>
<rect width="0.10" height="0.10" x="742.29" y="352.87" class="known"><title>bool __cdecl Direct3DInit(void);</title></rect>
<rect width="0.10" height="0.10" x="744.22" y="352.87" class="decompiled"><title>bool __cdecl S_Audio_Sample_IsEnabled(void);</title></rect>
<rect width="0.10" height="0.10" x="746.15" y="352.87" class="known"><title>int32_t __cdecl LevelCompleteSequence(void);</title></rect>
<rect width="0.10" height="0.10" x="748.07" y="352.87" class="known"><title>int32_t __cdecl GetRenderHeight(void);</title></rect>
<rect width="0.10" height="0.10" x="742.29" y="355.37" class="known"><title>int32_t __cdecl GetRenderWidth(void);</title></rect>
<rect width="0.10" height="0.10" x="742.29" y="357.45" class="decompiled"><title>int32_t __fastcall Math_Cos(int16_t angle);</title></rect>
<rect width="0.10" height="0.10" x="742.29" y="359.53" class="known"><title>void __cdecl flip_map_effect(struct ITEM_INFO *item);</title></rect>
<rect width="0.10" height="0.10" x="742.29" y="361.27" class="known"><title>void __cdecl reset_hair(struct ITEM_INFO *item);</title></rect>
<rect width="0.10" height="0.10" x="744.62" y="355.37" class="known"><title>void __cdecl DoInventoryPicture(void);</title></rect>
<rect width="0.10" height="0.10" x="746.41" y="355.37" class="unused"><title>sub_444BB0</title></rect>
<rect width="0.10" height="0.10" x="748.21" y="355.37" class="todo"><title>sub_4473A0</title></rect>
<rect width="0.10" height="0.10" x="744.62" y="357.62" class="todo"><title>sub_447FA0</title></rect>
<rect width="0.10" height="0.10" x="744.62" y="359.41" class="todo"><title>sub_448410</title></rect>
<rect width="0.10" height="0.10" x="744.62" y="361.21" class="todo"><title>sub_4523A0</title></rect>
<rect width="0.10" height="0.10" x="746.86" y="357.62" class="known"><title>LONG __cdecl CloseGameRegistryKey(void);</title></rect>
<rect width="0.10" height="0.10" x="748.43" y="357.62" class="known"><title>void __cdecl SE_SoundTestFinish(void);</title></rect>
<rect width="0.10" height="0.10" x="746.86" y="360.18" class="known"><title>bool __cdecl RenderInit(void);</title></rect>
<rect width="0.10" height="0.10" x="746.86" y="361.59" class="known"><title>int32_t __cdecl SE_GraphicsTestExecute(void);</title></rect>
<rect width="0.10" height="0.10" x="748.57" y="360.18" class="known"><title>void __cdecl Output_InsertInventoryBackground(int16_t *obj_ptr);</title></rect>
<rect width="0.10" height="0.10" x="749.29" y="360.18" class="unused"><title>sub_444BC0</title></rect>
<rect width="0.10" height="0.10" x="748.57" y="361.31" class="todo"><title>sub_448420</title></rect>
<rect width="0.10" height="0.10" x="749.29" y="361.31" class="unused"><title>sub_44E6F0</title></rect>
<rect width="0.10" height="0.10" x="748.57" y="362.44" class="todo"><title>sub_4523B0</title></rect>
</g>
</g>
</svg>
