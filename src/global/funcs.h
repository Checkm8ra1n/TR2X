// This file is autogenerated. To update it, run tools/generate_funcs.

#pragma once

#include "global/types.h"

// clang-format off
#define Math_GetVectorAngles ((void __cdecl (*)(int32_t x, int32_t y, int32_t z, int16_t *dest))0x00401250)
#define Matrix_TranslateAbs ((void __cdecl (*)(int32_t x, int32_t y, int32_t z))0x00401960)
#define Output_InsertPolygons ((void __cdecl (*)(int16_t *obj_ptr, int32_t clip))0x004019E0)
#define Output_InsertRoom ((void __cdecl (*)(const int16_t *obj_ptr))0x00401AE0)
#define Output_CalcBackgroundLight ((int16_t *__cdecl (*)(const int16_t *obj_ptr))0x00401BD0)
#define Output_InsertBackground ((void __cdecl (*)(int16_t *obj_ptr))0x00401C10)
#define Output_InsertInventoryBackground ((void __cdecl (*)(int16_t *obj_ptr))0x00401D50)
#define Output_CalcObjectVertices ((const int16_t * (*)(const int16_t *obj_ptr))0x00401D60)
#define Output_CalcVerticeLight ((const int16_t * (*)(const int16_t *obj_ptr))0x00401F40)
#define Output_CalcRoomVertices ((const int16_t * (*)(const int16_t *obj_ptr))0x004020B0)
#define Output_RotateLight ((void (*)(int16_t pitch, int16_t yaw))0x00402330)
#define Output_InitPolyList ((void __cdecl (*)(void))0x00402400)
#define Output_SortPolyList ((void __cdecl (*)(void))0x00402430)
#define Output_QuickSort ((void __cdecl (*)(int32_t left, int32_t right))0x00402470)
#define Output_PrintPolyList ((void __cdecl (*)(uint8_t *surface_ptr))0x00402540)
#define Viewport_AlterFOV ((void __cdecl (*)(int16_t fov))0x00402580)
#define Output_SetNearZ ((void __cdecl (*)(int32_t near_z))0x00402690)
#define Output_SetFarZ ((void __cdecl (*)(int32_t far_z))0x004026E0)
#define Viewport_Init ((void __cdecl (*)(int16_t x, int16_t y, int32_t width, int32_t height, int32_t near_z, int32_t far_z, int16_t view_angle, int32_t screen_width, int32_t screen_height))0x00402700)
#define Output_DrawPolyLine ((void __cdecl (*)(int16_t *obj_ptr))0x00402970)
#define Output_DrawPolyFlat ((void __cdecl (*)(int16_t *obj_ptr))0x00402B10)
#define Output_DrawPolyTrans ((void __cdecl (*)(int16_t *obj_ptr))0x00402B50)
#define Output_DrawPolyGouraud ((void __cdecl (*)(int16_t *obj_ptr))0x00402B90)
#define Output_DrawPolyGTMap ((void __cdecl (*)(int16_t *obj_ptr))0x00402BD0)
#define Output_DrawPolyWGTMap ((void __cdecl (*)(int16_t *obj_ptr))0x00402C10)
#define Output_XGenX ((bool __cdecl (*)(int16_t *obj_ptr))0x00402C50)
#define Output_XGenXG ((bool __cdecl (*)(int16_t *obj_ptr))0x00402D30)
#define Output_XGenXGUV ((bool __cdecl (*)(int16_t *obj_ptr))0x00402E80)
#define Output_XGen_XGUVPerspFP ((bool __cdecl (*)(int16_t *obj_ptr))0x004030A0)
#define Output_GTMap_Persp32FP ((void __cdecl (*)(int32_t y0, int32_t y1, uint8_t *tex_page))0x00403330)
#define Output_WGTmap_Persp32FP ((void __cdecl (*)(int32_t y0, int32_t y1, uint8_t *tex_page))0x00404300)
#define Output_DrawPolyGTMapPersp ((void __cdecl (*)(int16_t *obj_ptr))0x004057D0)
#define Output_DrawPolyWGTMapPersp ((void __cdecl (*)(int16_t *obj_ptr))0x00405810)
#define Output_VisibleZClip ((bool __cdecl (*)(struct PHD_VBUF *vtx0, struct PHD_VBUF *vtx1, struct PHD_VBUF *vtx2))0x00405850)
#define Output_ZedClipper ((int32_t __cdecl (*)(int32_t vtx_count, struct POINT_INFO *pts, struct VERTEX_INFO *vtx))0x004058C0)
#define Output_XYGUVClipper ((int32_t __cdecl (*)(int32_t vtx_count, struct VERTEX_INFO *vtx))0x00405A00)
#define Output_InsertObjectGT4 ((int16_t *__cdecl (*)(int16_t *obj_ptr, int32_t num, enum SORT_TYPE sort_type))0x00405F20)
#define Output_InsertObjectGT3 ((int16_t *__cdecl (*)(int16_t *obj_ptr, int32_t num, enum SORT_TYPE sort_type))0x00406980)
#define Output_XYGClipper ((int32_t __cdecl (*)(int32_t vtx_count, struct VERTEX_INFO *vtx))0x00407200)
#define Output_InsertObjectG4 ((int16_t *__cdecl (*)(int16_t *obj_ptr, int32_t num, enum SORT_TYPE sort_type))0x00407630)
#define Output_InsertObjectG3 ((int16_t *__cdecl (*)(int16_t *obj_ptr, int32_t num, enum SORT_TYPE sort_type))0x00407A10)
#define Output_XYClipper ((int32_t __cdecl (*)(int32_t vtx_count, struct VERTEX_INFO *vtx))0x00407D30)
#define Output_InsertTrans8 ((void __cdecl (*)(struct PHD_VBUF *vbuf, int16_t shade))0x00408000)
#define Output_InsertTransQuad ((void __cdecl (*)(int32_t x, int32_t y, int32_t width, int32_t height, int32_t z))0x004084B0)
#define Output_InsertFlatRect ((void __cdecl (*)(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t z, uint8_t color_idx))0x00408590)
#define Output_InsertLine ((void __cdecl (*)(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t z, uint8_t color_idx))0x00408660)
#define Output_InsertGT3_ZBuffered ((void __cdecl (*)(struct PHD_VBUF *vtx0, struct PHD_VBUF *vtx1, struct PHD_VBUF *vtx2, struct PHD_TEXTURE *texture, struct PHD_UV *uv0, struct PHD_UV *uv1, struct PHD_UV *uv2))0x00408720)
#define Output_DrawClippedPoly_Textured ((void __cdecl (*)(int32_t vtx_count))0x00408D70)
#define Output_InsertGT4_ZBuffered ((void __cdecl (*)(struct PHD_VBUF *vtx0, struct PHD_VBUF *vtx1, struct PHD_VBUF *vtx2, struct PHD_VBUF *vtx3, struct PHD_TEXTURE *texture))0x00408EB0)
#define Output_InsertObjectGT4_ZBuffered ((int16_t *__cdecl (*)(int16_t *obj_ptr, int32_t num, enum SORT_TYPE sort_type))0x00409300)
#define Output_InsertObjectGT3_ZBuffered ((int16_t *__cdecl (*)(int16_t *obj_ptr, int32_t num, enum SORT_TYPE sort_type))0x004093A0)
#define Output_InsertObjectG4_ZBuffered ((int16_t *__cdecl (*)(int16_t *obj_ptr, int32_t num, enum SORT_TYPE sort_type))0x00409450)
#define Output_DrawPoly_Gouraud ((void __cdecl (*)(int32_t vtx_count, int32_t red, int32_t green, int32_t blue))0x004097F0)
#define Output_InsertObjectG3_ZBuffered ((int16_t *__cdecl (*)(int16_t *obj_ptr, int32_t num, enum SORT_TYPE sort_type))0x004098F0)
#define Output_InsertFlatRect_ZBuffered ((void __cdecl (*)(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t z, uint8_t color_idx))0x00409BD0)
#define Output_InsertLine_ZBuffered ((void __cdecl (*)(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t z, uint8_t color_idx))0x00409DA0)
#define Output_InsertGT3_Sorted ((void __cdecl (*)(struct PHD_VBUF *vtx0, struct PHD_VBUF *vtx1, struct PHD_VBUF *vtx2, struct PHD_TEXTURE *texture, struct PHD_UV *uv0, struct PHD_UV *uv1, struct PHD_UV *uv2, enum SORT_TYPE sort_type))0x00409EE0)
#define Output_InsertClippedPoly_Textured ((void __cdecl (*)(int32_t vtx_count, float z, int16_t poly_type, int16_t tex_page))0x0040A5F0)
#define Output_InsertGT4_Sorted ((void __cdecl (*)(struct PHD_VBUF *vtx0, struct PHD_VBUF *vtx1, struct PHD_VBUF *vtx2, struct PHD_VBUF *vtx3, struct PHD_TEXTURE *texture, enum SORT_TYPE sort_type))0x0040A7A0)
#define Output_InsertObjectGT4_Sorted ((int16_t *__cdecl (*)(int16_t *obj_ptr, int32_t num, enum SORT_TYPE sort_type))0x0040AC80)
#define Output_InsertObjectGT3_Sorted ((int16_t *__cdecl (*)(int16_t *obj_ptr, int32_t num, enum SORT_TYPE sort_type))0x0040AD10)
#define Output_InsertObjectG4_Sorted ((int16_t *__cdecl (*)(int16_t *obj_ptr, int32_t num, enum SORT_TYPE sort_type))0x0040ADB0)
#define Output_InsertPoly_Gouraud ((void __cdecl (*)(int32_t vtx_count, float z, int32_t red, int32_t green, int32_t blue, int16_t poly_type))0x0040B1F0)
#define Output_InsertObjectG3_Sorted ((int16_t *__cdecl (*)(int16_t *obj_ptr, int32_t num, enum SORT_TYPE sort_type))0x0040B370)
#define Output_InsertSprite_Sorted ((void __cdecl (*)(int32_t z, int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t sprite_idx, int16_t shade))0x0040B6C0)
#define Output_InsertFlatRect_Sorted ((void __cdecl (*)(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t z, uint8_t color_idx))0x0040BA10)
#define Output_InsertLine_Sorted ((void __cdecl (*)(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t z, uint8_t color_idx))0x0040BB90)
#define Output_InsertTrans8_Sorted ((void __cdecl (*)(struct PHD_VBUF *vbuf, int16_t shade))0x0040BCC0)
#define Output_InsertTransQuad_Sorted ((void __cdecl (*)(int32_t x, int32_t y, int32_t width, int32_t height, int32_t z))0x0040BE60)
#define Output_InsertSprite ((void __cdecl (*)(int32_t z, int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t sprite_idx, int16_t shade))0x0040BFA0)
#define Output_DrawSprite ((void __cdecl (*)(uint32_t flags, int32_t x, int32_t y, int32_t z, int16_t sprite_idx, int16_t shade, int16_t scale))0x0040C050)
#define Output_DrawPickup ((void __cdecl (*)(int32_t sx, int32_t sy, int32_t scale, int16_t sprite_idx, int16_t shade))0x0040C320)
#define Output_InsertRoomSprite ((int16_t *__cdecl (*)(int16_t *obj_ptr, int32_t vtx_count))0x0040C3B0)
#define Output_DrawScreenSprite2D ((void __cdecl (*)(int32_t sx, int32_t sy, int32_t sz, int32_t scale_h, int32_t scale_v, int16_t sprite_idx, int16_t shade, uint16_t flags))0x0040C510)
#define Output_DrawScreenSprite ((void __cdecl (*)(int32_t sx, int32_t sy, int32_t sz, int32_t scale_h, int32_t scale_v, int16_t sprite_idx, int16_t shade, uint16_t flags))0x0040C5B0)
#define Output_DrawScaledSpriteC ((void __cdecl (*)(int16_t *obj_ptr))0x0040C650)
#define Eagle_Initialise ((void __cdecl (*)(int16_t item_num))0x0040C880)
#define Eagle_Control ((void __cdecl (*)(int16_t item_num))0x0040C910)
#define Boat_Initialise ((void __cdecl (*)(int16_t item_num))0x0040CB30)
#define Boat_CheckGeton ((int32_t __cdecl (*)(int16_t item_num, struct COLL_INFO *coll))0x0040CB70)
#define Boat_Collision ((void __cdecl (*)(int16_t item_num, struct ITEM_INFO *lara_item, struct COLL_INFO *coll))0x0040CCE0)
#define Boat_TestWaterHeight ((int32_t __cdecl (*)(struct ITEM_INFO *item, int32_t z_off, int32_t x_off, struct PHD_VECTOR *pos))0x0040CE40)
#define Boat_DoShift ((void __cdecl (*)(int32_t boat_num))0x0040CF40)
#define Boat_DoWakeEffect ((void __cdecl (*)(struct ITEM_INFO *boat))0x0040D110)
#define Boat_DoDynamics ((int32_t __cdecl (*)(int32_t height, int32_t fallspeed, int32_t *y))0x0040D290)
#define Boat_Dynamics ((int32_t __cdecl (*)(int16_t boat_num))0x0040D2E0)
#define Boat_UserControl ((int32_t __cdecl (*)(struct ITEM_INFO *boat))0x0040D7C0)
#define Boat_Animation ((void __cdecl (*)(struct ITEM_INFO *boat, int32_t collide))0x0040D950)
#define Boat_Control ((void __cdecl (*)(int16_t item_num))0x0040DAC0)
#define Gondola_Control ((void __cdecl (*)(int16_t item_num))0x0040E0F0)
#define Creature_Initialise ((void __cdecl (*)(int16_t item_num))0x0040E1B0)
#define Creature_Activate ((int32_t __cdecl (*)(int16_t item_num))0x0040E1E0)
#define Creature_AIInfo ((void __cdecl (*)(struct ITEM_INFO *item, struct AI_INFO *info))0x0040E230)
#define Box_SearchLOT ((int32_t __cdecl (*)(struct LOT_INFO *lot, int32_t expansion))0x0040E490)
#define Box_UpdateLOT ((int32_t __cdecl (*)(struct LOT_INFO *lot, int32_t expansion))0x0040E690)
#define Box_TargetBox ((void __cdecl (*)(struct LOT_INFO *lot, int16_t box_num))0x0040E700)
#define Box_StalkBox ((int32_t __cdecl (*)(struct ITEM_INFO *item, struct ITEM_INFO *enemy, int16_t box_num))0x0040E7A0)
#define Box_EscapeBox ((int32_t __cdecl (*)(struct ITEM_INFO *item, struct ITEM_INFO *enemy, int16_t box_num))0x0040E8A0)
#define Box_ValidBox ((int32_t __cdecl (*)(struct ITEM_INFO *item, int16_t zone_num, int16_t box_num))0x0040E950)
#define CreatureMood ((void __cdecl (*)(struct ITEM_INFO *item, struct AI_INFO *info, int32_t violent))0x0040EA00)
#define Box_CalculateTarget ((enum TARGET_TYPE __cdecl (*)(struct PHD_VECTOR *target, struct ITEM_INFO *item, struct LOT_INFO *lot))0x0040EE70)
#define Creature_CheckBaddieOverlap ((int32_t __cdecl (*)(int16_t item_num))0x0040F2D0)
#define Box_BadFloor ((int32_t __cdecl (*)(int32_t x, int32_t y, int32_t z, int32_t box_height, int32_t next_height, int16_t room_num, struct LOT_INFO *lot))0x0040F3D0)
#define Creature_Die ((void __cdecl (*)(int16_t item_num, int32_t explode))0x0040F460)
#define Creature_Animate ((int32_t __cdecl (*)(int16_t item_num, int16_t angle, int16_t tilt))0x0040F520)
#define Creature_Turn ((int16_t __cdecl (*)(struct ITEM_INFO *item, int16_t maximum_turn))0x0040FDF0)
#define Creature_Tilt ((void __cdecl (*)(struct ITEM_INFO *item, int16_t angle))0x0040FED0)
#define Creature_Head ((void __cdecl (*)(struct ITEM_INFO *item, int16_t required))0x0040FF10)
#define Creature_Neck ((void __cdecl (*)(struct ITEM_INFO *item, int16_t required))0x0040FF60)
#define Creature_Float ((void __cdecl (*)(int16_t item_num))0x0040FFB0)
#define Creature_Underwater ((void __cdecl (*)(struct ITEM_INFO *item, int32_t depth))0x00410060)
#define Creature_Effect ((int16_t __cdecl (*)(struct ITEM_INFO *item, struct BITE_INFO *bite, int16_t (*spawn)(int32_t x, int32_t y, int32_t z, int16_t speed, int16_t y_rot, int16_t room_num)))0x004100B0)
#define Creature_Vault ((int32_t __cdecl (*)(int16_t item_num, int16_t angle, int32_t vault, int32_t shift))0x00410110)
#define Creature_Kill ((void __cdecl (*)(struct ITEM_INFO *item, int32_t kill_anim, int32_t kill_state, int32_t lara_kill_state))0x00410250)
#define Creature_GetBaddieTarget ((void __cdecl (*)(int16_t item_num, int32_t goody))0x004103C0)
#define Game_SetCutsceneTrack ((void __cdecl (*)(int32_t track))0x00411F50)
#define Game_Cutscene_Start ((int32_t __cdecl (*)(int32_t level_num))0x00411F60)
#define Misc_InitCinematicRooms ((void __cdecl (*)(void))0x00412080)
#define Game_Cutscene_Control ((int32_t __cdecl (*)(int32_t nframes))0x00412120)
#define Room_FindByPos ((int32_t __cdecl (*)(int32_t x, int32_t y, int32_t z))0x004123D0)
#define CutscenePlayer_Control ((void __cdecl (*)(int16_t item_num))0x00412450)
#define Lara_Control_Cutscene ((void __cdecl (*)(int16_t item_num))0x00412530)
#define CutscenePlayer1_Initialise ((void __cdecl (*)(int16_t item_num))0x004125D0)
#define CutscenePlayerGen_Initialise ((void __cdecl (*)(int16_t item_num))0x00412660)
#define Collide_GetCollisionInfo ((void __cdecl (*)(struct COLL_INFO *coll, int32_t xpos, int32_t ypos, int32_t zpos, int16_t room_num, int32_t obj_height))0x004128F0)
#define Room_FindGridShift ((int32_t __cdecl (*)(int32_t src, int32_t dst))0x00412FB0)
#define Collide_CollideStaticObjects ((int32_t __cdecl (*)(struct COLL_INFO *coll, int32_t x, int32_t y, int32_t z, int16_t room_num, int32_t hite))0x00412FE0)
#define Room_GetNearbyRooms ((void __cdecl (*)(int32_t x, int32_t y, int32_t z, int32_t r, int32_t h, int16_t room_num))0x004133D0)
#define Room_GetNewRoom ((void __cdecl (*)(int32_t x, int32_t y, int32_t z, int16_t room_num))0x004134A0)
#define Item_ShiftCol ((void __cdecl (*)(struct ITEM_INFO *item, struct COLL_INFO *coll))0x00413500)
#define Item_UpdateRoom ((void __cdecl (*)(struct ITEM_INFO *item, int32_t height))0x00413540)
#define Room_GetTiltType ((int16_t __cdecl (*)(struct FLOOR_INFO *floor, int32_t x, int32_t y, int32_t z))0x004135A0)
#define Lara_BaddieCollision ((void __cdecl (*)(struct ITEM_INFO *lara_item, struct COLL_INFO *coll))0x00413640)
#define Misc_EffectSpaz ((void __cdecl (*)(struct ITEM_INFO *lara_item, struct COLL_INFO *coll))0x004137E0)
#define Creature_Collision ((void __cdecl (*)(int16_t item_num, struct ITEM_INFO *lara_item, struct COLL_INFO *coll))0x00413860)
#define Object_Collision ((void __cdecl (*)(int16_t item_num, struct ITEM_INFO *lara_item, struct COLL_INFO *coll))0x004138E0)
#define Door_Collision ((void __cdecl (*)(int16_t item_num, struct ITEM_INFO *lara_item, struct COLL_INFO *coll))0x00413940)
#define Object_CollisionTrap ((void __cdecl (*)(int16_t item_num, struct ITEM_INFO *lara_item, struct COLL_INFO *coll))0x004139C0)
#define Lara_Push ((void __cdecl (*)(struct ITEM_INFO *item, struct ITEM_INFO *lara_item, struct COLL_INFO *coll, int32_t spaz_on, int32_t big_push))0x00413A30)
#define Item_TestBoundsCollide ((int32_t __cdecl (*)(struct ITEM_INFO *src_item, struct ITEM_INFO *dst_item, int32_t radius))0x00413D40)
#define Item_TestPosition ((int32_t __cdecl (*)(int16_t *bounds, struct ITEM_INFO *src_item, struct ITEM_INFO *dst_item))0x00413E10)
#define Item_AlignPosition ((void __cdecl (*)(struct PHD_VECTOR *vec, struct ITEM_INFO *src_item, struct ITEM_INFO *dst_item))0x00413F50)
#define Lara_MovePosition ((int32_t __cdecl (*)(struct PHD_VECTOR *vec, struct ITEM_INFO *item, struct ITEM_INFO *lara_item))0x00414090)
#define Misc_Move3DPosTo3DPos ((int32_t __cdecl (*)(struct PHD_3DPOS *src_pos, struct PHD_3DPOS *dest_pos, int32_t velocity, PHD_ANGLE ang_add))0x00414220)
#define Game_Control ((int32_t __cdecl (*)(int32_t nframes, int32_t demo_mode))0x00414390)
#define Item_Animate ((void __cdecl (*)(struct ITEM_INFO *item))0x004146F0)
#define Item_GetAnimChange ((int32_t __cdecl (*)(struct ITEM_INFO *item, struct ANIM_STRUCT *anim))0x00414A60)
#define Item_Translate ((void __cdecl (*)(struct ITEM_INFO *item, int32_t x, int32_t y, int32_t z))0x00414B10)
#define Room_GetFloor ((struct FLOOR_INFO __cdecl * (*)(int32_t x, int32_t y, int32_t z, int16_t *room_num))0x00414B70)
#define Room_GetWaterHeight ((int32_t __cdecl (*)(int32_t x, int32_t y, int32_t z, int16_t room_num))0x00414D10)
#define Room_GetHeight ((int32_t __cdecl (*)(const struct FLOOR_INFO *floor, int32_t x, int32_t y, int32_t z))0x00414E80)
#define Camera_RefreshFromTrigger ((void __cdecl (*)(int16_t type, int16_t *data))0x00415100)
#define Room_TestTriggers ((void __cdecl (*)(int16_t *data, int32_t heavy))0x004151F0)
#define Item_IsTriggerActive ((int32_t __cdecl (*)(struct ITEM_INFO *item))0x004158D0)
#define Room_GetCeiling ((int32_t __cdecl (*)(const struct FLOOR_INFO *floor, int32_t x, int32_t y, int32_t z))0x00415930)
#define Room_GetDoor ((int16_t __cdecl (*)(struct FLOOR_INFO *floor))0x00415B90)
#define LOS_Check ((int32_t __cdecl (*)(struct GAME_VECTOR *start, struct GAME_VECTOR *target))0x00415BE0)
#define LOS_CheckZ ((int32_t __cdecl (*)(struct GAME_VECTOR *start, struct GAME_VECTOR *target))0x00415C80)
#define LOS_CheckX ((int32_t __cdecl (*)(struct GAME_VECTOR *start, struct GAME_VECTOR *target))0x00415F70)
#define LOS_ClipTarget ((int32_t __cdecl (*)(struct GAME_VECTOR *start, struct GAME_VECTOR *target, FLOOR_INFO *floor))0x00416260)
#define LOS_ObjectOnLOS ((int32_t __cdecl (*)(struct GAME_VECTOR *start, struct GAME_VECTOR *target))0x00416340)
#define Room_FlipMap ((void __cdecl (*)(void))0x00416640)
#define Room_RemoveFlipItems ((void __cdecl (*)(struct ROOM_INFO *r))0x00416700)
#define Room_AddFlipItems ((void __cdecl (*)(struct ROOM_INFO *r))0x004167A0)
#define Control_TriggerMusicTrack ((void __cdecl (*)(int16_t value, int16_t flags, int16_t type))0x00416800)
#define Control_TriggerMusicNormalTrack ((void __cdecl (*)(int16_t value, int16_t flags, int16_t type))0x00416830)
#define Demo_Control ((int32_t __cdecl (*)(int32_t level_num))0x00416910)
#define Demo_Start ((int32_t __cdecl (*)(int32_t level_num))0x00416970)
#define Demo_LoadLaraPos ((void __cdecl (*)(void))0x00416B20)
#define Demo_GetInput ((void __cdecl (*)(void))0x00416BF0)
#define Diver_Harpoon ((int16_t __cdecl (*)(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE y_rot, int16_t room_num))0x00416C20)
#define Diver_GetWaterSurface ((int32_t __cdecl (*)(int32_t x, int32_t y, int32_t z, int16_t room_num))0x00416CA0)
#define Diver_Control ((void __cdecl (*)(int16_t item_num))0x00416DB0)
#define Dog_Control ((void __cdecl (*)(int16_t item_num))0x00417160)
#define Tiger_Control ((void __cdecl (*)(int16_t item_num))0x00417510)
#define ControlTwinkle ((void __cdecl (*)(int16_t fx_num))0x004177B0)
#define CreateBartoliLight ((void __cdecl (*)(int16_t item_num))0x00417930)
#define DragonFire ((int16_t __cdecl (*)(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE yrot, int16_t room_num))0x00417A10)
#define DragonCollision ((void __cdecl (*)(int16_t item_num, struct ITEM_INFO *laraitem, struct COLL_INFO *coll))0x00417AC0)
#define DragonBones ((void __cdecl (*)(int16_t item_num))0x00417DB0)
#define DragonControl ((void __cdecl (*)(int16_t back_num))0x00417E90)
#define InitialiseBartoli ((void __cdecl (*)(int16_t item_num))0x004183E0)
#define BartoliControl ((void __cdecl (*)(int16_t item_num))0x00418500)
#define DinoControl ((void __cdecl (*)(int16_t item_num))0x004186A0)
#define DrawPhaseCinematic ((int32_t __cdecl (*)(void))0x00418950)
#define DrawPhaseGame ((int32_t __cdecl (*)(void))0x00418990)
#define DrawRooms ((void __cdecl (*)(int16_t current_room))0x004189D0)
#define GetRoomBounds ((void __cdecl (*)(void))0x00418C80)
#define SetRoomBounds ((void __cdecl (*)(int16_t *objptr, int32_t room_num, ROOM_INFO *parent))0x00418E50)
#define ClipRoom ((void __cdecl (*)(struct ROOM_INFO *r))0x004191D0)
#define PrintRooms ((void __cdecl (*)(int16_t room_num))0x004195B0)
#define PrintObjects ((void __cdecl (*)(int16_t room_num))0x00419670)
#define DrawEffect ((void __cdecl (*)(int16_t fx_num))0x00419890)
#define DrawSpriteItem ((void __cdecl (*)(struct ITEM_INFO *item))0x004199E0)
#define DrawAnimatingItem ((void __cdecl (*)(struct ITEM_INFO *item))0x00419A70)
#define DrawLara ((void __cdecl (*)(struct ITEM_INFO *item))0x00419DF0)
#define DrawLaraInt ((void __cdecl (*)(struct ITEM_INFO *item, int16_t *frame1, int16_t *frame2, int32_t frac, int32_t rate))0x0041AB20)
#define InitInterpolate ((void __cdecl (*)(int32_t frac, int32_t rate))0x0041B710)
#define phd_PopMatrix_I ((void __cdecl (*)(void))0x0041B750)
#define phd_PushMatrix_I ((void __cdecl (*)(void))0x0041B780)
#define phd_RotY_I ((void __cdecl (*)(int16_t ang))0x0041B7B0)
#define phd_RotX_I ((void __cdecl (*)(int16_t ang))0x0041B7F0)
#define phd_RotZ_I ((void __cdecl (*)(int16_t ang))0x0041B830)
#define phd_TranslateRel_I ((void __cdecl (*)(int32_t x, int32_t y, int32_t z))0x0041B870)
#define phd_TranslateRel_ID ((void __cdecl (*)(int32_t x, int32_t y, int32_t z, int32_t x2, int32_t y2, int32_t z2))0x0041B8C0)
#define phd_RotYXZ_I ((void __cdecl (*)(int16_t y, int16_t x, int16_t z))0x0041B910)
#define gar_RotYXZsuperpack_I ((void __cdecl (*)(int16_t **pprot1, int16_t **pprot2, int32_t skip))0x0041B960)
#define gar_RotYXZsuperpack ((void __cdecl (*)(int16_t **pprot, int32_t skip))0x0041B9A0)
#define phd_PutPolygons_I ((void __cdecl (*)(int16_t *ptr, int32_t clip))0x0041BA50)
#define InterpolateMatrix ((void __cdecl (*)(void))0x0041BA80)
#define InterpolateArmMatrix ((void __cdecl (*)(void))0x0041BC30)
#define DrawGunFlash ((void __cdecl (*)(int32_t weapon_type, int32_t clip))0x0041BD30)
#define CalculateObjectLighting ((void __cdecl (*)(struct ITEM_INFO *item, int16_t *frame))0x0041BEA0)
#define Item_GetFrames ((int32_t __cdecl (*)(struct ITEM_INFO *item, int16_t *frmptr[], int32_t *rate))0x0041BF90)
#define Item_GetBoundsAccurate ((int16_t *__cdecl (*)(const struct ITEM_INFO *item))0x0041C030)
#define GetBestFrame ((int16_t *__cdecl (*)(struct ITEM_INFO *item))0x0041C0B0)
#define AddDynamicLight ((void __cdecl (*)(int32_t x, int32_t y, int32_t z, int32_t intensity, int32_t falloff))0x0041C0F0)
#define BigEelControl ((void __cdecl (*)(int16_t item_num))0x0041C140)
#define EelControl ((void __cdecl (*)(int16_t item_num))0x0041C2E0)
#define ItemNearLara ((int32_t __cdecl (*)(struct PHD_3DPOS *pos, int32_t distance))0x0041C4D0)
#define Sound_Update ((void __cdecl (*)(void))0x0041C560)
#define DoBloodSplat ((int16_t __cdecl (*)(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE direction, int16_t room_num))0x0041C5D0)
#define DoLotsOfBlood ((void __cdecl (*)(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE direction, int16_t room_num, int32_t num))0x0041C630)
#define ControlBlood1 ((void __cdecl (*)(int16_t fx_num))0x0041C6E0)
#define ControlExplosion1 ((void __cdecl (*)(int16_t fx_num))0x0041C770)
#define Richochet ((void __cdecl (*)(struct GAME_VECTOR *pos))0x0041C7F0)
#define ControlRichochet1 ((void __cdecl (*)(int16_t fx_num))0x0041C870)
#define CreateBubble ((void __cdecl (*)(struct PHD_3DPOS *pos, int16_t room_num))0x0041C8A0)
#define LaraBubbles ((void __cdecl (*)(struct ITEM_INFO *item))0x0041C910)
#define ControlBubble1 ((void __cdecl (*)(int16_t fx_num))0x0041C990)
#define Splash ((void __cdecl (*)(struct ITEM_INFO *item))0x0041CA90)
#define ControlSplash1 ((void __cdecl (*)(int16_t fx_num))0x0041CB60)
#define ControlWaterSprite ((void __cdecl (*)(int16_t fx_num))0x0041CBE0)
#define ControlHotLiquid ((void __cdecl (*)(int16_t fx_num))0x0041CD20)
#define finish_level_effect ((void __cdecl (*)(struct ITEM_INFO *item))0x0041CF40)
#define turn180_effect ((void __cdecl (*)(struct ITEM_INFO *item))0x0041CF50)
#define floor_shake_effect ((void __cdecl (*)(struct ITEM_INFO *item))0x0041CF70)
#define lara_normal_effect ((void __cdecl (*)(struct ITEM_INFO *item))0x0041D010)
#define BoilerFX ((void __cdecl (*)(struct ITEM_INFO *item))0x0041D050)
#define FloodFX ((void __cdecl (*)(struct ITEM_INFO *item))0x0041D070)
#define RubbleFX ((void __cdecl (*)(struct ITEM_INFO *item))0x0041D100)
#define ChandelierFX ((void __cdecl (*)(struct ITEM_INFO *item))0x0041D130)
#define ExplosionFX ((void __cdecl (*)(struct ITEM_INFO *item))0x0041D160)
#define PistonFX ((void __cdecl (*)(struct ITEM_INFO *item))0x0041D190)
#define CurtainFX ((void __cdecl (*)(struct ITEM_INFO *item))0x0041D1B0)
#define StatueFX ((void __cdecl (*)(struct ITEM_INFO *item))0x0041D1D0)
#define SetChangeFX ((void __cdecl (*)(struct ITEM_INFO *item))0x0041D1F0)
#define ControlAlarmSound ((void __cdecl (*)(int16_t item_num))0x0041D290)
#define ControlBirdTweeter ((void __cdecl (*)(int16_t item_num))0x0041D300)
#define DoChimeSound ((void __cdecl (*)(struct ITEM_INFO *item))0x0041D360)
#define ControlClockChimes ((void __cdecl (*)(int16_t item_num))0x0041D3C0)
#define SphereOfDoomCollision ((void __cdecl (*)(int16_t item_num, struct ITEM_INFO *laraitem, struct COLL_INFO *coll))0x0041D430)
#define SphereOfDoom ((void __cdecl (*)(int16_t item_num))0x0041D560)
#define DrawSphereOfDoom ((void __cdecl (*)(struct ITEM_INFO *item))0x0041D650)
#define lara_hands_free ((void __cdecl (*)(struct ITEM_INFO *item))0x0041D780)
#define flip_map_effect ((void __cdecl (*)(struct ITEM_INFO *item))0x0041D790)
#define draw_right_gun ((void __cdecl (*)(struct ITEM_INFO *item))0x0041D7A0)
#define draw_left_gun ((void __cdecl (*)(struct ITEM_INFO *item))0x0041D7F0)
#define swap_meshes_with_meshswap1 ((void __cdecl (*)(struct ITEM_INFO *item))0x0041D840)
#define swap_meshes_with_meshswap2 ((void __cdecl (*)(struct ITEM_INFO *item))0x0041D8B0)
#define swap_meshes_with_meshswap3 ((void __cdecl (*)(struct ITEM_INFO *item))0x0041D920)
#define invisibility_on ((void __cdecl (*)(struct ITEM_INFO *item))0x0041D9C0)
#define invisibility_off ((void __cdecl (*)(struct ITEM_INFO *item))0x0041D9D0)
#define dynamic_light_on ((void __cdecl (*)(struct ITEM_INFO *item))0x0041D9F0)
#define dynamic_light_off ((void __cdecl (*)(struct ITEM_INFO *item))0x0041DA00)
#define reset_hair ((void __cdecl (*)(struct ITEM_INFO *item))0x0041DA10)
#define AssaultStart ((void __cdecl (*)(struct ITEM_INFO *item))0x0041DA20)
#define AssaultStop ((void __cdecl (*)(struct ITEM_INFO *item))0x0041DA50)
#define AssaultReset ((void __cdecl (*)(struct ITEM_INFO *item))0x0041DA70)
#define AssaultFinished ((void __cdecl (*)(struct ITEM_INFO *item))0x0041DA90)
#define Knife ((int16_t __cdecl (*)(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE yrot, int16_t room_num))0x0041DB50)
#define Cult2Control ((void __cdecl (*)(int16_t item_num))0x0041DBD0)
#define MonkControl ((void __cdecl (*)(int16_t item_num))0x0041E000)
#define Worker3Control ((void __cdecl (*)(int16_t item_num))0x0041E4D0)
#define DrawXianLord ((void __cdecl (*)(struct ITEM_INFO *item))0x0041EAE0)
#define XianDamage ((void __cdecl (*)(struct ITEM_INFO *item, CREATURE_INFO *xian, int32_t damage))0x0041EEE0)
#define InitialiseXianLord ((void __cdecl (*)(int16_t item_num))0x0041EF90)
#define XianLordControl ((void __cdecl (*)(int16_t item_num))0x0041EFF0)
#define WarriorSparkleTrail ((void __cdecl (*)(struct ITEM_INFO *item))0x0041F5D0)
#define WarriorControl ((void __cdecl (*)(int16_t item_num))0x0041F670)
#define GF_LoadScriptFile ((int32_t __cdecl (*)(char *fname))0x0041FA60)
#define GF_DoFrontEndSequence ((int32_t __cdecl (*)(void))0x0041FC50)
#define GF_DoLevelSequence ((int32_t __cdecl (*)(int32_t level, int32_t type))0x0041FC70)
#define GF_InterpretSequence ((int32_t __cdecl (*)(int16_t *ptr, int32_t type, int32_t seq_type))0x0041FCE0)
#define GF_ModifyInventory ((void __cdecl (*)(int32_t level, int32_t type))0x004201C0)
#define InitialiseHair ((void __cdecl (*)(void))0x00420EA0)
#define HairControl ((void __cdecl (*)(int32_t in_cutscene))0x00420F20)
#define DrawHair ((void __cdecl (*)(void))0x00421920)
#define FlashIt ((int32_t __cdecl (*)(void))0x004219A0)
#define DrawAssaultTimer ((void __cdecl (*)(void))0x004219D0)
#define DrawGameInfo ((void __cdecl (*)(int32_t timed))0x00421B20)
#define DrawHealthBar ((void __cdecl (*)(int32_t flash_state))0x00421B70)
#define DrawAirBar ((void __cdecl (*)(int32_t flash_state))0x00421C20)
#define MakeAmmoString ((void __cdecl (*)(char *string))0x00421CC0)
#define DrawAmmoInfo ((void __cdecl (*)(void))0x00421CF0)
#define InitialisePickUpDisplay ((void __cdecl (*)(void))0x00421E40)
#define DrawPickups ((void __cdecl (*)(int32_t timed))0x00421E60)
#define AddDisplayPickup ((void __cdecl (*)(int16_t obj_num))0x00421F60)
#define DisplayModeInfo ((void __cdecl (*)(char* string))0x00421FD0)
#define DrawModeInfo ((void __cdecl (*)(void))0x00422050)
#define Display_Inventory ((int32_t __cdecl (*)(int32_t inventory_mode))0x00422080)
#define Construct_Inventory ((void __cdecl (*)(void))0x00423310)
#define SelectMeshes ((void __cdecl (*)(struct INVENTORY_ITEM *inv_item))0x00423470)
#define AnimateInventoryItem ((int32_t __cdecl (*)(struct INVENTORY_ITEM *inv_item))0x00423500)
#define DrawInventoryItem ((void __cdecl (*)(struct INVENTORY_ITEM *inv_item))0x00423590)
#define GetDebouncedInput ((int32_t __cdecl (*)(int32_t input))0x004239C0)
#define DoInventoryPicture ((void __cdecl (*)(void))0x004239E0)
#define DoInventoryBackground ((void __cdecl (*)(void))0x004239F0)
#define InitColours ((void __cdecl (*)(void))0x00423B30)
#define RingIsOpen ((void __cdecl (*)(struct RING_INFO *ring))0x00423C40)
#define RingIsNotOpen ((void __cdecl (*)(struct RING_INFO *ring))0x00423DB0)
#define RingNotActive ((void __cdecl (*)(struct INVENTORY_ITEM *inv_item))0x00423E40)
#define RingActive ((void __cdecl (*)(void))0x004242B0)
#define Inv_AddItem ((int32_t __cdecl (*)(int32_t itemNum))0x004242F0)
#define Inv_InsertItem ((void __cdecl (*)(struct INVENTORY_ITEM *inv_item))0x00424B00)
#define Inv_RequestItem ((int32_t __cdecl (*)(int32_t itemNum))0x00424C30)
#define Inv_RemoveAllItems ((void __cdecl (*)(void))0x00424CB0)
#define Inv_RemoveItem ((int32_t __cdecl (*)(int32_t itemNum))0x00424CD0)
#define Inv_GetItemOption ((int32_t __cdecl (*)(int32_t itemNum))0x00424DE0)
#define RemoveInventoryText ((void __cdecl (*)(void))0x00424FD0)
#define Inv_RingInit ((void __cdecl (*)(struct RING_INFO *ring, int16_t type, struct INVENTORY_ITEM **list, int16_t qty, int16_t current, struct IMOTION_INFO *imo))0x00425000)
#define Inv_RingGetView ((void __cdecl (*)(struct RING_INFO *ring, struct PHD_3DPOS *viewer))0x00425110)
#define Inv_RingLight ((void __cdecl (*)(struct RING_INFO *ring))0x00425170)
#define Inv_RingCalcAdders ((void __cdecl (*)(struct RING_INFO *ring, int16_t rotation_duration))0x004251B0)
#define Inv_RingDoMotions ((void __cdecl (*)(struct RING_INFO *ring))0x004251E0)
#define Inv_RingRotateLeft ((void __cdecl (*)(struct RING_INFO *ring))0x00425320)
#define Inv_RingRotateRight ((void __cdecl (*)(struct RING_INFO *ring))0x00425350)
#define Inv_RingMotionInit ((void __cdecl (*)(struct RING_INFO *ring, int16_t frames, int16_t status, int16_t status_target))0x00425380)
#define Inv_RingMotionSetup ((void __cdecl (*)(struct RING_INFO *ring, int16_t status, int16_t status_target, int16_t frames))0x004253F0)
#define Inv_RingMotionRadius ((void __cdecl (*)(struct RING_INFO *ring, int16_t target))0x00425420)
#define Inv_RingMotionRotation ((void __cdecl (*)(struct RING_INFO *ring, int16_t rotation, int16_t target))0x00425450)
#define Inv_RingMotionCameraPos ((void __cdecl (*)(struct RING_INFO *ring, int16_t target))0x00425480)
#define Inv_RingMotionCameraPitch ((void __cdecl (*)(struct RING_INFO *ring, int16_t target))0x004254B0)
#define Inv_RingMotionItemSelect ((void __cdecl (*)(struct RING_INFO *ring, struct INVENTORY_ITEM *inv_item))0x004254D0)
#define Inv_RingMotionItemDeselect ((void __cdecl (*)(struct RING_INFO *ring, struct INVENTORY_ITEM *inv_item))0x00425530)
#define Init_Requester ((void __cdecl (*)(struct REQUEST_INFO *req))0x004255A0)
#define Remove_Requester ((void __cdecl (*)(struct REQUEST_INFO *req))0x00425630)
#define ReqItemCentreAlign ((void __cdecl (*)(struct REQUEST_INFO *req, struct TEXTSTRING *txt))0x004256E0)
#define ReqItemLeftalign ((void __cdecl (*)(struct REQUEST_INFO *req, struct TEXTSTRING *txt))0x00425700)
#define ReqItemRightalign ((void __cdecl (*)(struct REQUEST_INFO *req, struct TEXTSTRING *txt))0x00425760)
#define Display_Requester ((int32_t __cdecl (*)(struct REQUEST_INFO *req, int32_t des, int32_t backgrounds))0x004257C0)
#define SetRequesterHeading ((void __cdecl (*)(struct REQUEST_INFO *req, char *text1, uint32_t flags1, char *text2, uint32_t flags2))0x00426030)
#define RemoveAllReqItems ((void __cdecl (*)(struct REQUEST_INFO *req))0x004260E0)
#define ChangeRequesterItem ((void __cdecl (*)(struct REQUEST_INFO *req, int32_t item, char *text1, uint32_t flags1, char *text2, uint32_t flags2))0x00426100)
#define AddRequesterItem ((void __cdecl (*)(struct REQUEST_INFO *req, char *text1, uint32_t flags1, char *text2, uint32_t flags2))0x004261C0)
#define SetPCRequesterSize ((void __cdecl (*)(struct REQUEST_INFO *req, int32_t maxlines, int32_t ypos))0x00426270)
#define AddAssaultTime ((int32_t __cdecl (*)(uint32_t time))0x004262B0)
#define ShowGymStatsText ((void __cdecl (*)(char *time_str, int32_t type))0x00426340)
#define ShowStatsText ((void __cdecl (*)(char *time_str, int32_t type))0x00426520)
#define ShowEndStatsText ((void __cdecl (*)(void))0x004268C0)
#define InitialiseItemArray ((void __cdecl (*)(int32_t numitems))0x00426CF0)
#define KillItem ((void __cdecl (*)(int16_t item_num))0x00426D50)
#define CreateItem ((int16_t __cdecl (*)(void))0x00426E70)
#define InitialiseItem ((void __cdecl (*)(int16_t item_num))0x00426EB0)
#define Item_RemoveActive ((void __cdecl (*)(int16_t item_num))0x00427070)
#define RemoveDrawnItem ((void __cdecl (*)(int16_t item_num))0x00427100)
#define AddActiveItem ((void __cdecl (*)(int16_t item_num))0x00427170)
#define ItemNewRoom ((void __cdecl (*)(int16_t item_num, int16_t room_num))0x004271D0)
#define GlobalItemReplace ((int32_t __cdecl (*)(int32_t in_objnum, int32_t out_objnum))0x00427270)
#define InitialiseFXArray ((void __cdecl (*)(void))0x004272F0)
#define CreateEffect ((int16_t __cdecl (*)(int16_t room_num))0x00427320)
#define KillEffect ((void __cdecl (*)(int16_t fx_num))0x00427390)
#define EffectNewRoom ((void __cdecl (*)(int16_t fx_num, int16_t room_num))0x00427480)
#define ClearBodyBag ((void __cdecl (*)(void))0x00427520)
#define Lara_HandleAboveWater ((void __cdecl (*)(struct ITEM_INFO *item, struct COLL_INFO *coll))0x00427580)
#define Lara_LookUpDown ((void __cdecl (*)(void))0x00427720)
#define Lara_LookLeftRight ((void __cdecl (*)(void))0x00427790)
#define Lara_ResetLook ((void __cdecl (*)(void))0x00427810)
#define Lara_Fallen ((int32_t __cdecl (*)(struct ITEM_INFO *item, struct COLL_INFO *coll))0x00428C00)
#define Lara_CollideStop ((void __cdecl (*)(struct ITEM_INFO *item, struct COLL_INFO *coll))0x00428C60)
#define Lara_GetJointAbsPosition ((void __cdecl (*)(struct PHD_VECTOR *vec, int32_t joint))0x0042B550)
#define Lara_GetLJAInt ((void __cdecl (*)(struct ITEM_INFO *item, struct PHD_VECTOR *vec, int16_t *frame1, int16_t *frame2, int32_t frac, int32_t rate))0x0042B8E0)
#define draw_shotgun_meshes ((void __cdecl (*)(int32_t weapon_type))0x0042BC00)
#define undraw_shotgun_meshes ((void __cdecl (*)(int32_t weapon_type))0x0042BC40)
#define ready_shotgun ((void __cdecl (*)(int32_t weapon_type))0x0042BC70)
#define RifleHandler ((void __cdecl (*)(int32_t weapon_type))0x0042BCE0)
#define FireShotgun ((void __cdecl (*)(void))0x0042BDE0)
#define FireM16 ((void __cdecl (*)(int32_t running))0x0042BEE0)
#define FireHarpoon ((void __cdecl (*)(void))0x0042BF60)
#define ControlHarpoonBolt ((void __cdecl (*)(int16_t item_num))0x0042C0F0)
#define FireRocket ((void __cdecl (*)(void))0x0042C440)
#define ControlRocket ((void __cdecl (*)(int16_t item_num))0x0042C530)
#define draw_shotgun ((void __cdecl (*)(int32_t weapon_type))0x0042C930)
#define undraw_shotgun ((void __cdecl (*)(int32_t weapon_type))0x0042CAA0)
#define AnimateShotgun ((void __cdecl (*)(int32_t weapon_type))0x0042CBB0)
#define set_arm_info ((void __cdecl (*)(struct LARA_ARM *arm, int32_t frame))0x0042CF60)
#define draw_pistols ((void __cdecl (*)(int32_t weapon_type))0x0042CFB0)
#define undraw_pistols ((void __cdecl (*)(int32_t weapon_type))0x0042D030)
#define ready_pistols ((void __cdecl (*)(int32_t weapon_type))0x0042D260)
#define draw_pistol_meshes ((void __cdecl (*)(int32_t weapon_type))0x0042D2C0)
#define undraw_pistol_mesh_left ((void __cdecl (*)(int32_t weapon_type))0x0042D310)
#define undraw_pistol_mesh_right ((void __cdecl (*)(int32_t weapon_type))0x0042D350)
#define PistolHandler ((void __cdecl (*)(int32_t weapon_type))0x0042D390)
#define AnimatePistols ((void __cdecl (*)(int32_t weapon_type))0x0042D520)
#define Lara_CheckForLetGo ((int32_t __cdecl (*)(struct ITEM_INFO *item, struct COLL_INFO *coll))0x0042DF70)
#define Lara_TestClimb ((int32_t __cdecl (*)(int32_t x, int32_t y, int32_t z, int32_t xfront, int32_t zfront, int32_t item_height, int16_t item_room, int32_t *shift))0x0042E020)
#define Lara_TestClimbPos ((int32_t __cdecl (*)(struct ITEM_INFO *item, int32_t front, int32_t right, int32_t origin, int32_t height, int32_t *shift))0x0042E290)
#define Lara_DoClimbLeftRight ((void __cdecl (*)(struct ITEM_INFO *item, struct COLL_INFO *coll, int32_t result, int32_t shift))0x0042E360)
#define Lara_TestClimbUpPos ((int32_t __cdecl (*)(struct ITEM_INFO *item, int32_t front, int32_t right, int32_t *shift, int32_t *ledge))0x0042E450)
#define LaraGun ((void __cdecl (*)(void))0x0042E6A0)
#define CheckForHoldingState ((int32_t __cdecl (*)(int32_t state))0x0042EC10)
#define InitialiseNewWeapon ((void __cdecl (*)(void))0x0042EC50)
#define LaraTargetInfo ((void __cdecl (*)(struct WEAPON_INFO *winfo))0x0042ED90)
#define LaraGetNewTarget ((void __cdecl (*)(struct WEAPON_INFO *winfo))0x0042EF30)
#define find_target_point ((void __cdecl (*)(struct ITEM_INFO *item, struct GAME_VECTOR *target))0x0042F150)
#define AimWeapon ((void __cdecl (*)(struct WEAPON_INFO *winfo, struct LARA_ARM *arm))0x0042F200)
#define FireWeapon ((int32_t __cdecl (*)(int32_t weapon_type, struct ITEM_INFO *target, struct ITEM_INFO *src, PHD_ANGLE *angles))0x0042F2D0)
#define HitTarget ((void __cdecl (*)(struct ITEM_INFO *item, struct GAME_VECTOR *hitpos, int32_t damage))0x0042F640)
#define SmashItem ((void __cdecl (*)(int16_t item_num, int32_t weapon_type))0x0042F6E0)
#define WeaponObject ((int32_t __cdecl (*)(int32_t weapon_type))0x0042F740)
#define DoFlareLight ((int32_t __cdecl (*)(struct PHD_VECTOR *pos, int32_t flare_age))0x0042F7A0)
#define DoFlareInHand ((void __cdecl (*)(int32_t flare_age))0x0042F840)
#define DrawFlareInAir ((void __cdecl (*)(struct ITEM_INFO *item))0x0042F920)
#define CreateFlare ((void __cdecl (*)(int32_t thrown))0x0042FA20)
#define set_flare_arm ((void __cdecl (*)(int32_t frame))0x0042FC00)
#define draw_flare ((void __cdecl (*)(void))0x0042FC50)
#define undraw_flare ((void __cdecl (*)(void))0x0042FDC0)
#define draw_flare_meshes ((void __cdecl (*)(void))0x0042FFF0)
#define undraw_flare_meshes ((void __cdecl (*)(void))0x00430010)
#define ready_flare ((void __cdecl (*)(void))0x00430030)
#define Lara_Control ((void __cdecl (*)(int16_t item_num))0x004302E0)
#define Lara_Animate ((void __cdecl (*)(struct ITEM_INFO *item))0x00430970)
#define Lara_UseItem ((void __cdecl (*)(int16_t object_num))0x00430C70)
#define Lara_CheatGetStuff ((void __cdecl (*)(void))0x00430E30)
#define Lara_ControlExtra ((void __cdecl (*)(int16_t item_num))0x00430EF0)
#define Lara_InitialiseLoad ((void __cdecl (*)(int16_t item_num))0x00430F10)
#define Lara_Initialise ((void __cdecl (*)(int32_t type))0x00430F40)
#define Lara_InitialiseInventory ((void __cdecl (*)(int32_t level_num))0x00431200)
#define Lara_InitialiseMeshes ((void __cdecl (*)(int32_t level_num))0x00431570)
#define Lara_HandleSurface ((void __cdecl (*)(struct ITEM_INFO *item, struct COLL_INFO *coll))0x00431670)
#define Lara_SurfaceCollision ((void __cdecl (*)(struct ITEM_INFO *item, struct COLL_INFO *coll))0x00431B40)
#define Lara_TestWaterStepOut ((int32_t __cdecl (*)(struct ITEM_INFO *item, struct COLL_INFO *coll))0x00431C40)
#define Lara_TestWaterClimbOut ((int32_t __cdecl (*)(struct ITEM_INFO *item, struct COLL_INFO *coll))0x00431D30)
#define Lara_HandleUnderwater ((void __cdecl (*)(struct ITEM_INFO *item, struct COLL_INFO *coll))0x00431F50)
#define Lara_SwimTurn ((void __cdecl (*)(struct ITEM_INFO *item))0x00432180)
#define Lara_GetWaterDepth ((int32_t __cdecl (*)(int32_t x, int32_t y, int32_t z, int16_t room_num))0x004324A0)
#define Lara_TestWaterDepth ((void __cdecl (*)(struct ITEM_INFO *item, struct COLL_INFO *coll))0x00432640)
#define Lara_SwimCollision ((void __cdecl (*)(struct ITEM_INFO *item, struct COLL_INFO *coll))0x00432710)
#define Lara_WaterCurrent ((void __cdecl (*)(struct COLL_INFO *coll))0x00432870)
#define InitialiseLOTarray ((void __cdecl (*)(void))0x00432A60)
#define DisableBaddieAI ((void __cdecl (*)(int16_t item_num))0x00432AC0)
#define LOT_EnableBaddieAI ((int32_t __cdecl (*)(int16_t item_num, int32_t always))0x00432B10)
#define InitialiseSlot ((void __cdecl (*)(int16_t item_num, int32_t slot))0x00432CC0)
#define CreateZone ((void __cdecl (*)(struct ITEM_INFO *item))0x00432ED0)
#define ClearLOT ((void __cdecl (*)(struct LOT_INFO *LOT))0x00432F90)
#define ControlMissile ((void __cdecl (*)(int16_t fx_num))0x00432FE0)
#define ShootAtLara ((void __cdecl (*)(struct FX_INFO *fx))0x004332B0)
#define Effect_ExplodingDeath ((int32_t __cdecl (*)(int16_t item_num, int32_t mesh_bits, int16_t damage))0x00433360)
#define ControlBodyPart ((void __cdecl (*)(int16_t fx_num))0x004336F0)
#define InitialiseMovingBlock ((void __cdecl (*)(int16_t item_num))0x004338F0)
#define MovableBlock ((void __cdecl (*)(int16_t item_num))0x00433920)
#define MovableBlockCollision ((void __cdecl (*)(int16_t item_num, struct ITEM_INFO *laraitem, struct COLL_INFO *coll))0x00433A70)
#define TestBlockMovable ((int32_t __cdecl (*)(struct ITEM_INFO *item, int32_t blokhite))0x00433CD0)
#define TestBlockPush ((int32_t __cdecl (*)(struct ITEM_INFO *item, int32_t blokhite, uint16_t quadrant))0x00433D20)
#define TestBlockPull ((int32_t __cdecl (*)(struct ITEM_INFO *item, int32_t blokhite, uint16_t quadrant))0x00433E70)
#define AlterFloorHeight ((void __cdecl (*)(struct ITEM_INFO *item, int32_t height))0x004340B0)
#define DrawMovableBlock ((void __cdecl (*)(struct ITEM_INFO *item))0x00434170)
#define DrawUnclippedItem ((void __cdecl (*)(struct ITEM_INFO *item))0x004341A0)
#define EarthQuake ((void __cdecl (*)(int16_t item_num))0x00434210)
#define ControlCutShotgun ((void __cdecl (*)(int16_t item_num))0x004342F0)
#define InitialiseFinalLevel ((void __cdecl (*)(void))0x00434330)
#define FinalLevelCounter ((void __cdecl (*)(int16_t item_num))0x00434400)
#define MiniCopterControl ((void __cdecl (*)(int16_t item_num))0x00434610)
#define InitialiseDyingMonk ((void __cdecl (*)(int16_t item_num))0x004346F0)
#define ControlGongBonger ((void __cdecl (*)(int16_t item_num))0x00434800)
#define ControlDeathSlide ((void __cdecl (*)(int16_t item_num))0x00434980)
#define BigBowlControl ((void __cdecl (*)(int16_t item_num))0x00434C10)
#define BellControl ((void __cdecl (*)(int16_t item_num))0x00434D00)
#define SmashWindow ((void __cdecl (*)(int16_t item_num))0x00434E00)
#define WindowControl ((void __cdecl (*)(int16_t item_num))0x00434ED0)
#define SmashIceControl ((void __cdecl (*)(int16_t item_num))0x00434F70)
#define ShutThatDoor ((void __cdecl (*)(struct DOORPOS_DATA *d))0x00435050)
#define OpenThatDoor ((void __cdecl (*)(struct DOORPOS_DATA *d))0x004350A0)
#define InitialiseDoor ((void __cdecl (*)(int16_t item_num))0x004350E0)
#define OnDrawBridge ((int32_t __cdecl (*)(struct ITEM_INFO *item, int32_t x, int32_t y))0x00435590)
#define DrawBridgeFloor ((void __cdecl (*)(struct ITEM_INFO *item, int32_t x, int32_t y, int32_t z, int32_t *height))0x00435650)
#define DrawBridgeCeiling ((void __cdecl (*)(struct ITEM_INFO *item, int32_t x, int32_t y, int32_t z, int32_t *height))0x00435690)
#define DrawBridgeCollision ((void __cdecl (*)(int16_t item_num, struct ITEM_INFO *laraitem, struct COLL_INFO *coll))0x004356D0)
#define LiftControl ((void __cdecl (*)(int16_t item_num))0x00435740)
#define LiftFloorCeiling ((void __cdecl (*)(struct ITEM_INFO *item, int32_t x, int32_t y, int32_t z, int32_t *floor, int32_t *ceiling))0x00435820)
#define LiftFloor ((void __cdecl (*)(struct ITEM_INFO *item, int32_t x, int32_t y, int32_t z, int32_t *height))0x004359A0)
#define LiftCeiling ((void __cdecl (*)(struct ITEM_INFO *item, int32_t x, int32_t y, int32_t z, int32_t *height))0x004359E0)
#define BridgeFlatFloor ((void __cdecl (*)(struct ITEM_INFO *item, int32_t x, int32_t y, int32_t z, int32_t *height))0x00435A20)
#define BridgeFlatCeiling ((void __cdecl (*)(struct ITEM_INFO *item, int32_t x, int32_t y, int32_t z, int32_t *height))0x00435A40)
#define GetOffset ((int32_t __cdecl (*)(struct ITEM_INFO *item, int32_t x, int32_t z))0x00435A60)
#define BridgeTilt1Floor ((void __cdecl (*)(struct ITEM_INFO *item, int32_t x, int32_t y, int32_t z, int32_t *height))0x00435AA0)
#define BridgeTilt1Ceiling ((void __cdecl (*)(struct ITEM_INFO *item, int32_t x, int32_t y, int32_t z, int32_t *height))0x00435AD0)
#define BridgeTilt2Floor ((void __cdecl (*)(struct ITEM_INFO *item, int32_t x, int32_t y, int32_t z, int32_t *height))0x00435B10)
#define CopterControl ((void __cdecl (*)(int16_t item_num))0x00435B80)
#define GeneralControl ((void __cdecl (*)(int16_t item_num))0x00435C90)
#define DetonatorControl ((void __cdecl (*)(int16_t item_num))0x00435D70)
#define Targetable ((int32_t __cdecl (*)(struct ITEM_INFO *item, AI_INFO *info))0x00435E00)
#define ControlGlow ((void __cdecl (*)(int16_t nFX))0x00435E90)
#define ControlGunShot ((void __cdecl (*)(int16_t fx_num))0x00435ED0)
#define GunShot ((int16_t __cdecl (*)(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE yrot, int16_t room_num))0x00435F20)
#define GunHit ((int16_t __cdecl (*)(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE yrot, int16_t room_num))0x00435F90)
#define GunMiss ((int16_t __cdecl (*)(int32_t x, int32_t y, int32_t z, int16_t speed, PHD_ANGLE yrot, int16_t room_num))0x00436050)
#define ShotLara ((int32_t __cdecl (*)(struct ITEM_INFO *item, AI_INFO *info, struct BITE_INFO *gun, int16_t extra_rotation, int32_t damage))0x00436100)
#define InitialiseCult1 ((void __cdecl (*)(int16_t item_num))0x004362D0)
#define Cult1Control ((void __cdecl (*)(int16_t item_num))0x00436320)
#define InitialiseCult3 ((void __cdecl (*)(int16_t item_num))0x00436750)
#define Cult3Control ((void __cdecl (*)(int16_t item_num))0x004367A0)
#define Worker1Control ((void __cdecl (*)(int16_t item_num))0x00436D10)
#define Worker2Control ((void __cdecl (*)(int16_t item_num))0x00437110)
#define BanditControl ((void __cdecl (*)(int16_t item_num))0x00437570)
#define Bandit2Control ((void __cdecl (*)(int16_t item_num))0x004378B0)
#define WinstonControl ((void __cdecl (*)(int16_t item_num))0x00437CF0)
#define PickUpCollision ((void __cdecl (*)(int16_t item_num, struct ITEM_INFO *laraitem, struct COLL_INFO *coll))0x00437E70)
#define SwitchCollision ((void __cdecl (*)(int16_t item_num, struct ITEM_INFO *laraitem, struct COLL_INFO *coll))0x004382F0)
#define SwitchCollision2 ((void __cdecl (*)(int16_t item_num, struct ITEM_INFO *laraitem, struct COLL_INFO *coll))0x00438500)
#define KeyHoleCollision ((void __cdecl (*)(int16_t item_num, struct ITEM_INFO *laraitem, struct COLL_INFO *coll))0x00438840)
#define PuzzleHoleCollision ((void __cdecl (*)(int16_t item_num, struct ITEM_INFO *laraitem, struct COLL_INFO *coll))0x00438A80)
#define SwitchControl ((void __cdecl (*)(int16_t item_num))0x00438D40)
#define SwitchTrigger ((int32_t __cdecl (*)(int16_t item_num, int16_t timer))0x00438D80)
#define KeyTrigger ((int32_t __cdecl (*)(int16_t item_num))0x00438E40)
#define PickupTrigger ((int32_t __cdecl (*)(int16_t item_num))0x00438E80)
#define SecretControl ((void __cdecl (*)(int16_t item_num))0x00438EC0)
#define MouseControl ((void __cdecl (*)(int16_t item_num))0x00438EF0)
#define InitialiseStartInfo ((void __cdecl (*)(void))0x004390E0)
#define ModifyStartInfo ((void __cdecl (*)(int32_t level_num))0x00439150)
#define CreateStartInfo ((void __cdecl (*)(int32_t level_num))0x00439230)
#define CreateSaveGameInfo ((void __cdecl (*)(void))0x00439440)
#define ExtractSaveGameInfo ((void __cdecl (*)(void))0x00439970)
#define ResetSG ((void __cdecl (*)(void))0x0043A1D0)
#define WriteSG ((void __cdecl (*)(void *pointer, int32_t size))0x0043A1F0)
#define ReadSG ((void __cdecl (*)(void *pointer, int32_t size))0x0043A240)
#define Level_Initialise ((int32_t __cdecl (*)(int32_t level_num, int32_t level_type))0x0043A280)
#define InitialiseGameFlags ((void __cdecl (*)(void))0x0043A3E0)
#define InitialiseLevelFlags ((void __cdecl (*)(void))0x0043A450)
#define BaddyObjects ((void __cdecl (*)(void))0x0043A480)
#define TrapObjects ((void __cdecl (*)(void))0x0043B4C0)
#define ObjectObjects ((void __cdecl (*)(void))0x0043BAC0)
#define InitialiseObjects ((void __cdecl (*)(void))0x0043C710)
#define GetCarriedItems ((void __cdecl (*)(void))0x0043C780)
#define JellyControl ((void __cdecl (*)(int16_t item_num))0x0043C850)
#define BaracuddaControl ((void __cdecl (*)(int16_t item_num))0x0043C970)
#define SharkControl ((void __cdecl (*)(int16_t item_num))0x0043CBA0)
#define InitialiseSkidoo ((void __cdecl (*)(int16_t item_num))0x0043CE30)
#define SkidooCheckGeton ((int32_t __cdecl (*)(int16_t item_num, struct COLL_INFO *coll))0x0043CE70)
#define SkidooCollision ((void __cdecl (*)(int16_t item_num, struct ITEM_INFO *litem, struct COLL_INFO *coll))0x0043CF60)
#define SkidooBaddieCollision ((void __cdecl (*)(struct ITEM_INFO *skidoo))0x0043D060)
#define TestHeight ((int32_t __cdecl (*)(struct ITEM_INFO *item, int32_t z_off, int32_t x_off, struct PHD_VECTOR *pos))0x0043D260)
#define DoShift ((int32_t __cdecl (*)(struct ITEM_INFO *skidoo, struct PHD_VECTOR *pos, struct PHD_VECTOR *old))0x0043D320)
#define DoDynamics ((int32_t __cdecl (*)(int32_t height, int32_t fallspeed, int32_t *y))0x0043D5A0)
#define GetCollisionAnim ((int32_t __cdecl (*)(struct ITEM_INFO *skidoo, struct PHD_VECTOR *moved))0x0043D600)
#define DoSnowEffect ((void __cdecl (*)(struct ITEM_INFO *skidoo))0x0043D690)
#define SkidooDynamics ((int32_t __cdecl (*)(struct ITEM_INFO *skidoo))0x0043D7D0)
#define SkidooUserControl ((int32_t __cdecl (*)(struct ITEM_INFO *skidoo, int32_t height, int32_t *pitch))0x0043DC70)
#define SkidooCheckGetOffOK ((int32_t __cdecl (*)(int32_t direction))0x0043DE30)
#define SkidooAnimation ((void __cdecl (*)(struct ITEM_INFO *skidoo, int32_t collide, int32_t dead))0x0043DF40)
#define SkidooExplode ((void __cdecl (*)(struct ITEM_INFO *skidoo))0x0043E220)
#define SkidooCheckGetOff ((int32_t __cdecl (*)(void))0x0043E2A0)
#define SkidooGuns ((void __cdecl (*)(void))0x0043E4E0)
#define SkidooControl ((int32_t __cdecl (*)(void))0x0043E600)
#define DrawSkidoo ((void __cdecl (*)(struct ITEM_INFO *item))0x0043EA60)
#define InitialiseSkidman ((void __cdecl (*)(int16_t item_num))0x0043ED40)
#define SkidManControl ((void __cdecl (*)(int16_t rider_num))0x0043EDD0)
#define SkidmanPush ((void __cdecl (*)(struct ITEM_INFO *item, struct ITEM_INFO *laraitem, int32_t radius))0x0043F1D0)
#define SkidmanCollision ((void __cdecl (*)(int16_t item_num, struct ITEM_INFO *laraitem, struct COLL_INFO *coll))0x0043F2F0)
#define Music_GetRealTrack ((int32_t __cdecl (*)(int32_t track))0x0043F380)
#define Sound_Effect ((void __cdecl (*)(int32_t sample_id, const struct PHD_3DPOS *pos, uint32_t flags))0x0043F3C0)
#define Sound_StopEffect ((void __cdecl (*)(int32_t sample_id))0x0043F860)
#define Sound_UpdateContinued ((void __cdecl (*)(void))0x0043F8C0)
#define Sound_Shutdown ((void __cdecl (*)(void))0x0043F950)
#define Sound_Init ((void __cdecl (*)(void))0x0043F980)
#define TestCollision ((int32_t __cdecl (*)(struct ITEM_INFO *item, struct ITEM_INFO *laraitem))0x0043F9B0)
#define GetSpheres ((int32_t __cdecl (*)(struct ITEM_INFO *item, struct SPHERE *ptr, int32_t WorldSpace))0x0043FAE0)
#define Collide_GetJointAbsPosition ((void __cdecl (*)(struct ITEM_INFO *item, struct PHD_VECTOR *vec, int32_t joint))0x0043FDC0)
#define BaddieBiteEffect ((void __cdecl (*)(struct ITEM_INFO *item, struct BITE_INFO *bite))0x0043FF60)
#define SpiderLeap ((void __cdecl (*)(int16_t item_num, int16_t angle))0x0043FFC0)
#define SpiderControl ((void __cdecl (*)(int16_t item_num))0x00440070)
#define BigSpiderControl ((void __cdecl (*)(int16_t item_num))0x00440290)
#define T_InitPrint ((void __cdecl (*)(void))0x00440450)
#define T_Print ((TEXTSTRING *__cdecl (*)(int32_t xpos, int32_t ypos, int32_t zpos, char *string))0x00440480)
#define T_ChangeText ((void __cdecl (*)(struct TEXTSTRING *textstring, char *string))0x00440590)
#define T_SetScale ((void __cdecl (*)(struct TEXTSTRING *textstring, int32_t scale_h, int32_t scaleV))0x004405D0)
#define T_FlashText ((void __cdecl (*)(struct TEXTSTRING *textstring, int16_t enable, int16_t rate))0x004405F0)
#define T_AddBackground ((void __cdecl (*)(struct TEXTSTRING *textstring, int16_t xsize, int16_t ysize, int16_t xoff, int16_t yoff, int16_t zoff, int16_t colour, uint16_t *gourptr, uint16_t flags))0x00440620)
#define T_RemoveBackground ((void __cdecl (*)(struct TEXTSTRING *textstring))0x004406B0)
#define T_AddOutline ((void __cdecl (*)(struct TEXTSTRING *textstring, int16_t enable, int16_t colour, uint16_t *gourptr, uint16_t flags))0x004406C0)
#define T_RemoveOutline ((void __cdecl (*)(struct TEXTSTRING *textstring))0x004406F0)
#define T_CentreH ((void __cdecl (*)(struct TEXTSTRING *textstring, int16_t enable))0x00440700)
#define T_CentreV ((void __cdecl (*)(struct TEXTSTRING *textstring, int16_t enable))0x00440720)
#define T_RightAlign ((void __cdecl (*)(struct TEXTSTRING *textstring, int16_t enable))0x00440740)
#define T_BottomAlign ((void __cdecl (*)(struct TEXTSTRING *textstring, int16_t enable))0x00440760)
#define T_GetTextWidth ((int32_t __cdecl (*)(struct TEXTSTRING *textstring))0x00440780)
#define T_RemovePrint ((int32_t __cdecl (*)(struct TEXTSTRING *textstring))0x00440890)
#define T_GetStringLen ((int16_t __cdecl (*)(char *string))0x004408C0)
#define T_DrawText ((void __cdecl (*)(void))0x004408F0)
#define T_draw_border ((void __cdecl (*)(int32_t xpos, int32_t ypos, int32_t zpos, int32_t width, int32_t height))0x00440920)
#define T_DrawThisText ((void __cdecl (*)(struct TEXTSTRING *textstring))0x00440AB0)
#define GetTextScaleH ((uint32_t __cdecl (*)(uint32_t scale_h))0x00440E90)
#define GetTextScaleV ((uint32_t __cdecl (*)(uint32_t scale_v))0x00440ED0)
#define MineControl ((void __cdecl (*)(int16_t mine_num))0x00440F10)
#define ControlSpikeWall ((void __cdecl (*)(int16_t item_num))0x00441110)
#define ControlCeilingSpikes ((void __cdecl (*)(int16_t item_num))0x00441250)
#define HookControl ((void __cdecl (*)(int16_t item_num))0x00441370)
#define PropellerControl ((void __cdecl (*)(int16_t item_num))0x00441400)
#define SpinningBlade ((void __cdecl (*)(int16_t item_num))0x00441590)
#define IcicleControl ((void __cdecl (*)(int16_t item_num))0x00441710)
#define InitialiseKillerStatue ((void __cdecl (*)(int16_t item_num))0x004418F0)
#define KillerStatueControl ((void __cdecl (*)(int16_t item_num))0x00441940)
#define SpringBoardControl ((void __cdecl (*)(int16_t item_num))0x00441A50)
#define InitialiseRollingBall ((void __cdecl (*)(int16_t item_num))0x00441B30)
#define RollingBallControl ((void __cdecl (*)(int16_t item_num))0x00441B70)
#define RollingBallCollision ((void __cdecl (*)(int16_t item_num, struct ITEM_INFO *litem, struct COLL_INFO *coll))0x00441EC0)
#define SpikeCollision ((void __cdecl (*)(int16_t item_num, struct ITEM_INFO *litem, struct COLL_INFO *coll))0x00442110)
#define TrapDoorControl ((void __cdecl (*)(int16_t item_num))0x00442270)
#define TrapDoorCeiling ((void __cdecl (*)(struct ITEM_INFO *item, int32_t x, int32_t y, int32_t z, int32_t *height))0x00442300)
#define OnTrapDoor ((int32_t __cdecl (*)(struct ITEM_INFO *item, int32_t x, int32_t z))0x00442340)
#define Pendulum ((void __cdecl (*)(int16_t item_num))0x004423F0)
#define FallingBlock ((void __cdecl (*)(int16_t item_num))0x00442500)
#define FallingBlockFloor ((void __cdecl (*)(struct ITEM_INFO *item, int32_t x, int32_t y, int32_t z, int32_t *height))0x00442610)
#define TeethTrap ((void __cdecl (*)(int16_t item_num))0x004426A0)
#define DartsControl ((void __cdecl (*)(int16_t item_num))0x00442980)
#define DartEffectControl ((void __cdecl (*)(int16_t fx_num))0x00442AE0)
#define FlameEmitterControl ((void __cdecl (*)(int16_t item_num))0x00442B30)
#define FlameControl ((void __cdecl (*)(int16_t fx_num))0x00442BC0)
#define LaraBurn ((void __cdecl (*)(void))0x00442D30)
#define LavaBurn ((void __cdecl (*)(struct ITEM_INFO *item))0x00442D80)
#define LavaSpray ((void __cdecl (*)(int16_t item_num))0x00442E70)
#define ControlLavaBlob ((void __cdecl (*)(int16_t fx_num))0x00442F40)
#define GiantYetiControl ((void __cdecl (*)(int16_t item_num))0x00443050)
#define YetiControl ((void __cdecl (*)(int16_t item_num))0x00443350)
#define BGND_Make640x480 ((void __cdecl (*)(uint8_t *bitmap, struct RGB888 *palette))0x00443990)
#define BGND_AddTexture ((int32_t __cdecl (*)(int32_t tileIndex, BYTE *bitmap, int32_t pal_index, struct RGB888 *bmp_pal))0x00443B50)
#define BGND_GetPageHandles ((void __cdecl (*)(void))0x00443C10)
#define BGND_DrawInGameBlack ((void __cdecl (*)(void))0x00443C50)
#define DrawQuad ((void __cdecl (*)(float sx, float sy, float width, float height, D3DCOLOR color))0x00443CB0)
#define BGND_DrawInGameBackground ((void __cdecl (*)(void))0x00443D90)
#define DrawTextureTile ((void __cdecl (*)(int32_t sx, int32_t sy, int32_t width, int32_t height, HWR_TEXHANDLE texSource, int32_t tu, int32_t tv, int32_t t_width, int32_t t_height, D3DCOLOR color0, D3DCOLOR color1, D3DCOLOR color2, D3DCOLOR color3))0x00443FB0)
#define BGND_CenterLighting ((D3DCOLOR __cdecl (*)(int32_t x, int32_t y, int32_t width, int32_t height))0x00444210)
#define BGND_Free ((void __cdecl (*)(void))0x004444C0)
#define BGND_Init ((bool __cdecl (*)(void))0x00444510)
#define Enumerate3DDevices ((void __cdecl (*)(struct DISPLAY_ADAPTER *adapter))0x00444540)
#define D3DCreate ((bool __cdecl (*)(void))0x00444570)
#define Enum3DDevicesCallback ((HRESULT __stdcall (*)(GUID *lpGuid, LPTSTR lpDeviceDescription, LPTSTR lpDeviceName, LPD3DDEVICEDESC lpD3DHWDeviceDesc, LPD3DDEVICEDESC lpD3DHELDeviceDesc, LPVOID lpContext))0x004445B0)
#define D3DIsSupported ((bool __cdecl (*)(LPD3DDEVICEDESC desc))0x00444670)
#define D3DSetViewport ((bool __cdecl (*)(void))0x004446B0)
#define D3DDeviceCreate ((void __cdecl (*)(LPDDS lpBackBuffer))0x00444770)
#define Direct3DRelease ((void __cdecl (*)(void))0x00444930)
#define Direct3DInit ((bool __cdecl (*)(void))0x00444980)
#define DDrawCreate ((bool __cdecl (*)(LPGUID lpGUID))0x00444BD0)
#define DDrawRelease ((void __cdecl (*)(void))0x00444C30)
#define GameWindowCalculateSizeFromClient ((void __cdecl (*)(int32_t *width, int32_t *height))0x00444C70)
#define GameWindowCalculateSizeFromClientByZero ((void __cdecl (*)(int32_t *width, int32_t *height))0x00444CF0)
#define WinVidSetMinWindowSize ((void __cdecl (*)(int32_t width, int32_t height))0x00444D60)
#define WinVidClearMinWindowSize ((void __cdecl (*)(void))0x00444DB0)
#define WinVidSetMaxWindowSize ((void __cdecl (*)(int32_t width, int32_t height))0x00444DC0)
#define WinVidClearMaxWindowSize ((void __cdecl (*)(void))0x00444E10)
#define CalculateWindowWidth ((int32_t __cdecl (*)(int32_t width, int32_t height))0x00444E20)
#define CalculateWindowHeight ((int32_t __cdecl (*)(int32_t width, int32_t height))0x00444E70)
#define WinVidGetMinMaxInfo ((bool __cdecl (*)(LPMINMAXINFO info))0x00444EA0)
#define WinVidFindGameWindow ((HWND __cdecl (*)(void))0x00444FB0)
#define WinVidSpinMessageLoop ((bool __cdecl (*)(bool needWait))0x00444FD0)
#define WinVidShowGameWindow ((void __cdecl (*)(int32_t nCmdShow))0x004450C0)
#define WinVidHideGameWindow ((void __cdecl (*)(void))0x00445110)
#define WinVidSetGameWindowSize ((void __cdecl (*)(int32_t width, int32_t height))0x00445150)
#define ShowDDrawGameWindow ((bool __cdecl (*)(bool active))0x00445190)
#define HideDDrawGameWindow ((bool __cdecl (*)(void))0x00445240)
#define DDrawSurfaceCreate ((HRESULT __cdecl (*)(LPDDSDESC dsp, LPDDS *surface))0x004452D0)
#define DDrawSurfaceRestoreLost ((HRESULT __cdecl (*)(LPDDS surface1, LPDDS surface2, bool blank))0x00445320)
#define WinVidClearBuffer ((bool __cdecl (*)(LPDDS surface, LPRECT rect, DWORD fillColor))0x00445370)
#define WinVidBufferLock ((HRESULT __cdecl (*)(LPDDS surface, LPDDSDESC desc, DWORD flags))0x004453C0)
#define WinVidBufferUnlock ((HRESULT __cdecl (*)(LPDDS surface, LPDDSDESC desc))0x00445400)
#define WinVidCopyBitmapToBuffer ((bool __cdecl (*)(LPDDS surface, BYTE *bitmap))0x00445430)
#define GetRenderBitDepth ((DWORD __cdecl (*)(DWORD dwRGBBitCount))0x004454C0)
#define WinVidGetColorBitMasks ((void __thiscall (*)(COLOR_BIT_MASKS *bm, LPDDPIXELFORMAT pixelFormat))0x00445550)
#define BitMaskGetNumberOfBits ((void __cdecl (*)(DWORD bitMask, DWORD *bitDepth, DWORD *bitOffset))0x004455D0)
#define CalculateCompatibleColor ((DWORD __cdecl (*)(COLOR_BIT_MASKS *mask, int32_t red, int32_t green, int32_t blue, int32_t alpha))0x00445620)
#define WinVidGetDisplayMode ((bool __cdecl (*)(DISPLAY_MODE *dispMode))0x00445690)
#define WinVidGoFullScreen ((bool __cdecl (*)(DISPLAY_MODE *dispMode))0x00445720)
#define WinVidGoWindowed ((bool __cdecl (*)(int32_t width, int32_t height, DISPLAY_MODE *dispMode))0x004457B0)
#define WinVidSetDisplayAdapter ((void __cdecl (*)(DISPLAY_ADAPTER *dispAdapter))0x004458C0)
#define CompareVideoModes ((bool __thiscall (*)(DISPLAY_MODE *mode1, DISPLAY_MODE *mode2))0x004459A0)
#define WinVidGetDisplayModes ((bool __cdecl (*)(void))0x004459F0)
#define EnumDisplayModesCallback ((HRESULT __stdcall (*)(LPDDSDESC lpDDSurfaceDesc, LPVOID lpContext))0x00445A50)
#define WinVidInit ((bool __cdecl (*)(void))0x00445E10)
#define WinVidGetDisplayAdapters ((bool __cdecl (*)(void))0x00445E50)
#define EnumerateDisplayAdapters ((bool __cdecl (*)(struct DISPLAY_ADAPTER_LIST *displayAdapterList))0x00445F20)
#define EnumDisplayAdaptersCallback ((BOOL __stdcall (*)(GUID *lpGUID, LPTSTR lpDriverDescription, LPTSTR lpDriverName, LPVOID lpContext))0x00445F40)
#define WinVidRegisterGameWindowClass ((bool __cdecl (*)(void))0x00446140)
#define WinVidGameWindowProc ((LRESULT __stdcall (*)(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam))0x004461B0)
#define WinVidResizeGameWindow ((void __cdecl (*)(HWND hWnd, int32_t edge, LPRECT rect))0x004467C0)
#define WinVidCheckGameWindowPalette ((bool __cdecl (*)(HWND hWnd))0x004469A0)
#define WinVidCreateGameWindow ((bool __cdecl (*)(void))0x00446A60)
#define WinVidFreeWindow ((void __cdecl (*)(void))0x00446B30)
#define WinVidExitMessage ((void __cdecl (*)(void))0x00446B60)
#define WinVidGetDisplayAdapter ((DISPLAY_ADAPTER_NODE *__cdecl (*)(GUID *lpGuid))0x00446BB0)
#define WinVidStart ((void __cdecl (*)(void))0x00446C00)
#define WinVidFinish ((void __cdecl (*)(void))0x00446F80)
#define DisplayModeListInit ((void __thiscall (*)(DISPLAY_MODE_LIST *pList))0x00446FA0)
#define DisplayModeListDelete ((void __thiscall (*)(DISPLAY_MODE_LIST *pList))0x00446FB0)
#define InsertDisplayMode ((DISPLAY_MODE *__thiscall (*)(DISPLAY_MODE_LIST *modeList, DISPLAY_MODE_NODE *before))0x00446FF0)
#define InsertDisplayModeInListHead ((DISPLAY_MODE *__thiscall (*)(DISPLAY_MODE_LIST *modeList))0x00447010)
#define InsertDisplayModeInListTail ((DISPLAY_MODE *__thiscall (*)(DISPLAY_MODE_LIST *modeList))0x00447060)
#define DInputCreate ((bool __cdecl (*)(void))0x004471F0)
#define DInputRelease ((void __cdecl (*)(void))0x00447220)
#define WinInReadKeyboard ((void __cdecl (*)(LPVOID lpInputData))0x00447240)
#define WinInReadJoystick ((DWORD __cdecl (*)(int32_t *xPos, int32_t *yPos))0x004472A0)
#define WinInputInit ((bool __cdecl (*)(void))0x004473B0)
#define DInputEnumDevices ((bool __cdecl (*)(JOYSTICK_LIST *joystickList))0x00447430)
#define DInputEnumDevicesCallback ((BOOL __stdcall (*)(LPCDIDEVICEINSTANCE lpddi, LPVOID pvRef))0x00447460)
#define GetJoystick ((JOYSTICK_NODE *__cdecl (*)(GUID *lpGuid))0x00447570)
#define DInputKeyboardCreate ((void __cdecl (*)(void))0x004475C0)
#define DInputKeyboardRelease ((void __cdecl (*)(void))0x00447690)
#define DInputJoystickCreate ((bool __cdecl (*)(void))0x004476C0)
#define WinInStart ((void __cdecl (*)(void))0x004477B0)
#define WinInFinish ((void __cdecl (*)(void))0x004477E0)
#define WinInRunControlPanel ((void __cdecl (*)(HWND hWnd))0x004477F0)
#define IncreaseScreenSize ((void __cdecl (*)(void))0x00447810)
#define DecreaseScreenSize ((void __cdecl (*)(void))0x00447880)
#define setup_screen_size ((void __cdecl (*)(void))0x004478F0)
#define TempVideoAdjust ((void __cdecl (*)(int32_t hires, double sizer))0x00447990)
#define TempVideoRemove ((void __cdecl (*)(void))0x004479D0)
#define S_FadeInInventory ((void __cdecl (*)(BOOL isFade))0x00447A10)
#define S_FadeOutInventory ((void __cdecl (*)(BOOL isFade))0x00447A50)
#define CreateScreenBuffers ((void __cdecl (*)(void))0x00448430)
#define CreatePrimarySurface ((void __cdecl (*)(void))0x00448570)
#define CreateBackBuffer ((void __cdecl (*)(void))0x00448610)
#define CreateClipper ((void __cdecl (*)(void))0x004486B0)
#define CreateWindowPalette ((void __cdecl (*)(void))0x00448750)
#define CreateZBuffer ((void __cdecl (*)(void))0x00448830)
#define GetZBufferDepth ((DWORD __cdecl (*)(void))0x004488F0)
#define CreateRenderBuffer ((void __cdecl (*)(void))0x00448920)
#define CreatePictureBuffer ((void __cdecl (*)(void))0x004489D0)
#define ClearBuffers ((void __cdecl (*)(DWORD flags, DWORD fillColor))0x00448A40)
#define RestoreLostBuffers ((void __cdecl (*)(void))0x00448BF0)
#define UpdateFrame ((void __cdecl (*)(bool needRunMessageLoop, LPRECT rect))0x00448D30)
#define WaitPrimaryBufferFlip ((void __cdecl (*)(void))0x00448E00)
#define RenderInit ((bool __cdecl (*)(void))0x00448E40)
#define RenderStart ((void __cdecl (*)(bool isReset))0x00448E50)
#define RenderFinish ((void __cdecl (*)(bool needToClearTextures))0x00449200)
#define ApplySettings ((bool __cdecl (*)(struct APP_SETTINGS *newSettings))0x004492F0)
#define FmvBackToGame ((void __cdecl (*)(void))0x00449500)
#define GameApplySettings ((void __cdecl (*)(struct APP_SETTINGS *newSettings))0x00449610)
#define UpdateGameResolution ((void __cdecl (*)(void))0x00449850)
#define DecodeErrorMessage ((LPCTSTR __cdecl (*)(DWORD errorCode))0x004498C0)
#define ReadFileSync ((BOOL __cdecl (*)(HANDLE hFile, LPVOID lpBuffer, DWORD nBytesToRead, LPDWORD lpnBytesRead, LPOVERLAPPED lpOverlapped))0x004498D0)
#define LoadTexturePages ((BOOL __cdecl (*)(HANDLE hFile))0x00449920)
#define LoadRooms ((BOOL __cdecl (*)(HANDLE hFile))0x00449AB0)
#define AdjustTextureUVs ((void __cdecl (*)(bool resetUvAdd))0x00449E50)
#define LoadObjects ((BOOL __cdecl (*)(HANDLE hFile))0x00449EF0)
#define LoadSprites ((BOOL __cdecl (*)(HANDLE hFile))0x0044A470)
#define LoadItems ((BOOL __cdecl (*)(HANDLE hFile))0x0044A5B0)
#define LoadDepthQ ((BOOL __cdecl (*)(HANDLE hFile))0x0044A790)
#define LoadPalettes ((BOOL __cdecl (*)(HANDLE hFile))0x0044A920)
#define LoadCameras ((BOOL __cdecl (*)(HANDLE hFile))0x0044A9A0)
#define LoadSoundEffects ((BOOL __cdecl (*)(HANDLE hFile))0x0044AA00)
#define LoadBoxes ((BOOL __cdecl (*)(HANDLE hFile))0x0044AA60)
#define LoadAnimatedTextures ((BOOL __cdecl (*)(HANDLE hFile))0x0044AC90)
#define LoadCinematic ((BOOL __cdecl (*)(HANDLE hFile))0x0044ACF0)
#define LoadDemo ((BOOL __cdecl (*)(HANDLE hFile))0x0044AD70)
#define LoadDemoExternal ((void __cdecl (*)(LPCTSTR levelName))0x0044AE00)
#define LoadSamples ((BOOL __cdecl (*)(HANDLE hFile))0x0044AEA0)
#define ChangeFileNameExtension ((void __cdecl (*)(char *fileName, const char *fileExt))0x0044B110)
#define GetFullPath ((LPCTSTR __cdecl (*)(LPCTSTR fileName))0x0044B150)
#define SelectDrive ((BOOL __cdecl (*)(void))0x0044B180)
#define LoadLevel ((BOOL __cdecl (*)(LPCTSTR fileName, int32_t levelID))0x0044B260)
#define S_LoadLevelFile ((BOOL __cdecl (*)(LPCTSTR fileName, int32_t levelID, GF_LEVEL_TYPE levelType))0x0044B4B0)
#define S_UnloadLevelFile ((void __cdecl (*)(void))0x0044B4D0)
#define S_AdjustTexelCoordinates ((void __cdecl (*)(void))0x0044B500)
#define S_ReloadLevelGraphics ((BOOL __cdecl (*)(BOOL reloadPalettes, BOOL reloadTexPages))0x0044B520)
#define Read_Strings ((BOOL __cdecl (*)(DWORD dwCount, char **stringTable, char **stringBuffer, LPDWORD lpBufferSize, HANDLE hFile))0x0044B5F0)
#define S_LoadGameFlow ((BOOL __cdecl (*)(LPCTSTR fileName))0x0044B6C0)
#define PlayFMV ((bool __cdecl (*)(LPCTSTR fileName))0x0044BDA0)
#define WinPlayFMV ((void __cdecl (*)(LPCTSTR fileName, bool isPlayback))0x0044BE10)
#define WinStopFMV ((void __cdecl (*)(bool isPlayback))0x0044C0F0)
#define IntroFMV ((bool __cdecl (*)(LPCTSTR fileName1, LPCTSTR fileName2))0x0044C140)
#define S_COLOUR ((uint16_t __cdecl (*)(int32_t red, int32_t green, int32_t blue))0x0044C1D0)
#define S_DrawScreenLine ((void __cdecl (*)(int32_t x, int32_t y, int32_t z, int32_t xLen, int32_t yLen, BYTE colorIdx, D3DCOLOR *gour, uint16_t flags))0x0044C200)
#define S_DrawScreenBox ((void __cdecl (*)(int32_t sx, int32_t sy, int32_t z, int32_t width, int32_t height, BYTE colorIdx, GOURAUD_OUTLINE *gour, uint16_t flags))0x0044C240)
#define S_DrawScreenFBox ((void __cdecl (*)(int32_t sx, int32_t sy, int32_t z, int32_t width, int32_t height, BYTE colorIdx, GOURAUD_FILL *gour, uint16_t flags))0x0044C360)
#define S_FinishInventory ((void __cdecl (*)(void))0x0044C390)
#define S_FadeToBlack ((void __cdecl (*)(void))0x0044C3A0)
#define S_Wait ((void __cdecl (*)(int32_t timeout, BOOL inputCheck))0x0044C3F0)
#define S_PlayFMV ((bool __cdecl (*)(LPCTSTR fileName))0x0044C450)
#define S_IntroFMV ((bool __cdecl (*)(LPCTSTR fileName1, LPCTSTR fileName2))0x0044C460)
#define StartGame ((int16_t __cdecl (*)(int32_t levelID, GF_LEVEL_TYPE levelType))0x0044C480)
#define GameLoop ((int32_t __cdecl (*)(BOOL demoMode))0x0044C5D0)
#define LevelCompleteSequence ((int32_t __cdecl (*)(void))0x0044C670)
#define LevelStats ((int32_t __cdecl (*)(int32_t levelID))0x0044C680)
#define GameStats ((int32_t __cdecl (*)(int32_t levelID))0x0044C850)
#define Random_GetControl ((int32_t __cdecl (*)(void))0x0044C970)
#define SeedRandomControl ((void __cdecl (*)(int32_t seed))0x0044C990)
#define GetRandomDraw ((int32_t __cdecl (*)(void))0x0044C9A0)
#define SeedRandomDraw ((void __cdecl (*)(int32_t seed))0x0044C9C0)
#define GetValidLevelsList ((void __cdecl (*)(REQUEST_INFO *req))0x0044C9D0)
#define GetSavedGamesList ((void __cdecl (*)(REQUEST_INFO *req))0x0044CA20)
#define DisplayCredits ((void __cdecl (*)(void))0x0044CA70)
#define S_FrontEndCheck ((BOOL __cdecl (*)(void))0x0044CCB0)
#define S_SaveGame ((int32_t __cdecl (*)(const void *save_data, uint32_t save_size, int32_t slot_num))0x0044CE20)
#define S_LoadGame ((int32_t __cdecl (*)(void *save_data, uint32_t save_size, int32_t slot_num))0x0044CF40)
#define HWR_InitState ((void __cdecl (*)(void))0x0044CFE0)
#define HWR_ResetTexSource ((void __cdecl (*)(void))0x0044D110)
#define HWR_ResetColorKey ((void __cdecl (*)(void))0x0044D140)
#define HWR_ResetZBuffer ((void __cdecl (*)(void))0x0044D170)
#define HWR_TexSource ((void __cdecl (*)(HWR_TEXHANDLE texSource))0x0044D1D0)
#define HWR_EnableColorKey ((void __cdecl (*)(bool state))0x0044D200)
#define HWR_EnableZBuffer ((void __cdecl (*)(bool z_write_enable, bool z_enable))0x0044D250)
#define HWR_BeginScene ((void __cdecl (*)(void))0x0044D2E0)
#define HWR_DrawPolyList ((void __cdecl (*)(void))0x0044D310)
#define HWR_LoadTexturePages ((void __cdecl (*)(int32_t pagesCount, LPVOID pagesBuffer, RGB888 *palette))0x0044D490)
#define HWR_FreeTexturePages ((void __cdecl (*)(void))0x0044D520)
#define HWR_GetPageHandles ((void __cdecl (*)(void))0x0044D570)
#define HWR_VertexBufferFull ((bool __cdecl (*)(void))0x0044D5B0)
#define HWR_Init ((bool __cdecl (*)(void))0x0044D5E0)
#define S_InitialiseSystem ((BOOL __cdecl (*)(void))0x0044D610)
#define GameBuf_Shutdown ((void __cdecl (*)(void))0x0044D670)
#define init_game_malloc ((void __cdecl (*)(void))0x0044D690)
#define game_malloc ((void *__cdecl (*)(DWORD allocSize, DWORD bufIndex))0x0044D6C0)
#define game_free ((void __cdecl (*)(DWORD freeSize))0x0044D740)
#define CalculateWibbleTable ((void __cdecl (*)(void))0x0044D780)
#define S_SeedRandom ((void __cdecl (*)(void))0x0044D870)
#define Key ((BOOL __cdecl (*)(KEYMAP keyMap))0x0044D8F0)
#define S_UpdateInput ((bool __cdecl (*)(void))0x0044DA10)
#define RenderErrorBox ((int32_t __cdecl (*)(int32_t errorCode))0x0044E4E0)
#define WinMain ((int32_t __stdcall (*)(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPTSTR lpCmdLine, int32_t nShowCmd))0x0044E520)
#define GameInit ((int32_t __cdecl (*)(bool skipCDInit))0x0044E700)
#define Shell_Cleanup ((void __cdecl (*)(void))0x0044E770)
#define WinGameStart ((int32_t __cdecl (*)(void))0x0044E7A0)
#define Shell_Shutdown ((void __cdecl (*)(void))0x0044E820)
#define ScreenShotPCX ((void __cdecl (*)(void))0x0044E8E0)
#define CompPCX ((DWORD __cdecl (*)(BYTE *bitmap, DWORD width, DWORD height, RGB888 *palette, BYTE **pcxData))0x0044E9F0)
#define EncodeLinePCX ((DWORD __cdecl (*)(BYTE *src, DWORD width, BYTE *dst))0x0044EAA0)
#define EncodePutPCX ((DWORD __cdecl (*)(BYTE value, BYTE num, BYTE *buffer))0x0044EB80)
#define ScreenShot ((void __cdecl (*)(LPDDS screen))0x0044EBC0)
#define do_inventory_options ((void __cdecl (*)(INVENTORY_ITEM *item))0x0044EDC0)
#define do_passport_option ((void __cdecl (*)(INVENTORY_ITEM *item))0x0044EED0)
#define do_detail_option ((void __cdecl (*)(INVENTORY_ITEM *item))0x0044F520)
#define do_sound_option ((void __cdecl (*)(INVENTORY_ITEM *item))0x0044F800)
#define do_compass_option ((void __cdecl (*)(INVENTORY_ITEM *item))0x0044FCA0)
#define FlashConflicts ((void __cdecl (*)(void))0x0044FD60)
#define DefaultConflict ((void __cdecl (*)(void))0x0044FDE0)
#define do_control_option ((void __cdecl (*)(INVENTORY_ITEM *item))0x0044FE20)
#define S_ShowControls ((void __cdecl (*)(void))0x00450530)
#define S_ChangeCtrlText ((void __cdecl (*)(void))0x00450A00)
#define S_RemoveCtrlText ((void __cdecl (*)(void))0x00450AA0)
#define GetRenderHeight ((int32_t __cdecl (*)(void))0x00450AE0)
#define GetRenderWidth ((int32_t __cdecl (*)(void))0x00450AF0)
#define S_InitialisePolyList ((void __cdecl (*)(BOOL clearBackBuffer))0x00450B00)
#define S_DumpScreen ((DWORD __cdecl (*)(void))0x00450BF0)
#define S_ClearScreen ((void __cdecl (*)(void))0x00450C30)
#define S_InitialiseScreen ((void __cdecl (*)(GF_LEVEL_TYPE levelType))0x00450C40)
#define S_OutputPolyList ((void __cdecl (*)(void))0x00450C80)
#define S_GetObjectBounds ((int32_t __cdecl (*)(int16_t *bPtr))0x00450CC0)
#define S_InsertBackPolygon ((void __cdecl (*)(int32_t x0, int32_t y0, int32_t x1, int32_t y1))0x00450F30)
#define S_PrintShadow ((void __cdecl (*)(int16_t radius, int16_t *bPtr, ITEM_INFO *item))0x00450F80)
#define S_CalculateLight ((void __cdecl (*)(int32_t x, int32_t y, int32_t z, int16_t room_num))0x00451180)
#define S_CalculateStaticLight ((void __cdecl (*)(int16_t adder))0x00451480)
#define S_CalculateStaticMeshLight ((void __cdecl (*)(int32_t x, int32_t y, int32_t z, int32_t shade1, int32_t shade2, ROOM_INFO *room))0x004514C0)
#define S_LightRoom ((void __cdecl (*)(ROOM_INFO *room))0x004515F0)
#define S_DrawHealthBar ((void __cdecl (*)(int32_t percent))0x00451800)
#define S_DrawAirBar ((void __cdecl (*)(int32_t percent))0x004519D0)
#define AnimateTextures ((void __cdecl (*)(int32_t nTicks))0x00451BD0)
#define S_SetupBelowWater ((void __cdecl (*)(BOOL underwater))0x00451C90)
#define S_SetupAboveWater ((void __cdecl (*)(BOOL underwater))0x00451CF0)
#define S_AnimateTextures ((void __cdecl (*)(int32_t nTicks))0x00451D20)
#define S_DisplayPicture ((void __cdecl (*)(LPCTSTR fileName, BOOL isTitle))0x00451DE0)
#define S_SyncPictureBufferPalette ((void __cdecl (*)(void))0x00451EF0)
#define S_DontDisplayPicture ((void __cdecl (*)(void))0x00451F70)
#define ScreenDump ((void __cdecl (*)(void))0x00451F80)
#define ScreenPartialDump ((void __cdecl (*)(void))0x00451F90)
#define FadeToPal ((void __cdecl (*)(int32_t fadeValue, RGB888 *palette))0x00451FA0)
#define ScreenClear ((void __cdecl (*)(bool isPhdWinSize))0x00452170)
#define S_CopyScreenToBuffer ((void __cdecl (*)(void))0x004521A0)
#define S_CopyBufferToScreen ((void __cdecl (*)(void))0x00452250)
#define DecompPCX ((BOOL __cdecl (*)(LPCBYTE pcx, DWORD pcxSize, LPBYTE pic, RGB888 *pal))0x004522A0)
#define OpenGameRegistryKey ((bool __cdecl (*)(LPCTSTR key))0x004523C0)
#define CloseGameRegistryKey ((LONG __cdecl (*)(void))0x00452410)
#define SE_WriteAppSettings ((bool __cdecl (*)(APP_SETTINGS *settings))0x00452420)
#define SE_ReadAppSettings ((int32_t __cdecl (*)(APP_SETTINGS *settings))0x00452690)
#define SE_GraphicsTestStart ((bool __cdecl (*)(void))0x004529E0)
#define SE_GraphicsTestFinish ((void __cdecl (*)(void))0x00452AB0)
#define SE_GraphicsTestExecute ((int32_t __cdecl (*)(void))0x00452AD0)
#define SE_GraphicsTest ((int32_t __cdecl (*)(void))0x00452AE0)
#define SE_SoundTestStart ((bool __cdecl (*)(void))0x00452B40)
#define SE_SoundTestFinish ((void __cdecl (*)(void))0x00452C00)
#define SE_SoundTestExecute ((int32_t __cdecl (*)(void))0x00452C10)
#define SE_SoundTest ((int32_t __cdecl (*)(void))0x00452C50)
#define SE_PropSheetCallback ((int32_t __stdcall (*)(HWND hwndDlg, UINT uMsg, LPARAM lParam))0x00452CB0)
#define SE_NewPropSheetWndProc ((LRESULT __stdcall (*)(HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam))0x00452CF0)
#define SE_ShowSetupDialog ((bool __cdecl (*)(HWND hParent, bool isDefault))0x00452D50)
#define SE_GraphicsDlgProc ((INT_PTR __stdcall (*)(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam))0x00453030)
#define SE_GraphicsDlgFullScreenModesUpdate ((void __cdecl (*)(HWND hwndDlg))0x004533F0)
#define SE_GraphicsAdapterSet ((void __cdecl (*)(HWND hwndDlg, DISPLAY_ADAPTER_NODE *adapter))0x004535E0)
#define SE_GraphicsDlgUpdate ((void __cdecl (*)(HWND hwndDlg))0x00453600)
#define SE_GraphicsDlgInit ((void __cdecl (*)(HWND hwndDlg))0x00453D40)
#define SE_SoundDlgProc ((INT_PTR __stdcall (*)(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam))0x00453EC0)
#define SE_SoundAdapterSet ((void __cdecl (*)(HWND hwndDlg, SOUND_ADAPTER_NODE *adapter))0x00454050)
#define SE_SoundDlgUpdate ((void __cdecl (*)(HWND hwndDlg))0x00454060)
#define SE_SoundDlgInit ((void __cdecl (*)(HWND hwndDlg))0x00454180)
#define SE_ControlsDlgProc ((INT_PTR __stdcall (*)(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam))0x00454240)
#define SE_ControlsJoystickSet ((void __cdecl (*)(HWND hwndDlg, JOYSTICK_NODE *joystick))0x00454350)
#define SE_ControlsDlgUpdate ((void __cdecl (*)(HWND hwndDlg))0x00454360)
#define SE_ControlsDlgInit ((void __cdecl (*)(HWND hwndDlg))0x004543D0)
#define SE_OptionsDlgProc ((INT_PTR __stdcall (*)(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam))0x00454490)
#define SE_OptionsDlgUpdate ((void __cdecl (*)(HWND hwndDlg))0x00454520)
#define SE_OptionsStrCat ((void __cdecl (*)(LPTSTR *dstString, bool isEnabled, bool *isNext, LPCTSTR srcString))0x00454760)
#define SE_AdvancedDlgProc ((INT_PTR __stdcall (*)(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam))0x004547B0)
#define SE_AdvancedDlgUpdate ((void __cdecl (*)(HWND hwndDlg))0x004548B0)
#define SE_AdvancedDlgInit ((void __cdecl (*)(HWND hwndDlg))0x00454950)
#define SE_FindSetupDialog ((HWND __cdecl (*)(void))0x00454960)
#define GameMain ((BOOL __cdecl (*)(void))0x00454980)
#define TitleSequence ((int16_t __cdecl (*)(void))0x00454C50)
#define CheckCheatMode ((void __cdecl (*)(void))0x00454D60)
#define S_SaveSettings ((void __cdecl (*)(void))0x004550C0)
#define S_LoadSettings ((void __cdecl (*)(void))0x00455140)
#define CopyBitmapPalette ((void __cdecl (*)(RGB888 *srcPal, BYTE *srcBitmap, int32_t bitmapSize, RGB888 *destPal))0x004557A0)
#define FindNearestPaletteEntry ((BYTE __cdecl (*)(RGB888 *palette, int32_t red, int32_t green, int32_t blue, bool ignoreSysPalette))0x004558E0)
#define SyncSurfacePalettes ((void __cdecl (*)(void *srcData, int32_t width, int32_t height, int32_t srcPitch, RGB888 *srcPalette, void *dstData, int32_t dstPitch, RGB888 *dstPalette, bool preserveSysPalette))0x004559B0)
#define CreateTexturePalette ((int32_t __cdecl (*)(RGB888 *pal))0x00455A60)
#define GetFreePaletteIndex ((int32_t __cdecl (*)(void))0x00455AF0)
#define FreePalette ((void __cdecl (*)(int32_t paletteIndex))0x00455B10)
#define SafeFreePalette ((void __cdecl (*)(int32_t paletteIndex))0x00455B40)
#define CreateTexturePage ((int32_t __cdecl (*)(int32_t width, int32_t height, bool alpha))0x00455B90)
#define GetFreeTexturePageIndex ((int32_t __cdecl (*)(void))0x00455C00)
#define CreateTexturePageSurface ((bool __cdecl (*)(TEXPAGE_DESC *desc))0x00455C20)
#define TexturePageInit ((bool __cdecl (*)(TEXPAGE_DESC *page))0x00455CC0)
#define Create3DTexture ((LPDIRECT3DTEXTURE2 __cdecl (*)(LPDDS surface))0x00455E40)
#define SafeFreeTexturePage ((void __cdecl (*)(int32_t pageIndex))0x00455E70)
#define FreeTexturePage ((void __cdecl (*)(int32_t pageIndex))0x00455E90)
#define TexturePageReleaseVidMemSurface ((void __cdecl (*)(TEXPAGE_DESC *page))0x00455ED0)
#define FreeTexturePages ((void __cdecl (*)(void))0x00455F10)
#define LoadTexturePage ((bool __cdecl (*)(int32_t pageIndex, bool reset))0x00455F40)
#define ReloadTextures ((bool __cdecl (*)(bool reset))0x00455FF0)
#define GetTexturePageHandle ((HWR_TEXHANDLE __cdecl (*)(int32_t pageIndex))0x00456030)
#define AddTexturePage8 ((int32_t __cdecl (*)(int32_t width, int32_t height, BYTE *pageBuffer, int32_t palIndex))0x00456070)
#define AddTexturePage16 ((int32_t __cdecl (*)(int32_t width, int32_t height, BYTE *pageBuffer))0x00456170)
#define EnumTextureFormatsCallback ((HRESULT __stdcall (*)(LPDDSDESC lpDdsd, LPVOID lpContext))0x00456310)
#define EnumerateTextureFormats ((HRESULT __cdecl (*)(void))0x00456430)
#define CleanupTextures ((void __cdecl (*)(void))0x00456460)
#define InitTextures ((bool __cdecl (*)(void))0x00456470)
#define UpdateTicks ((void __cdecl (*)(void))0x00456490)
#define TIME_Init ((bool __cdecl (*)(void))0x004564D0)
#define Sync ((DWORD __cdecl (*)(void))0x00456530)
#define UT_LoadResource ((LPVOID __cdecl (*)(LPCTSTR lpName, LPCTSTR lpType))0x00456590)
#define UT_InitAccurateTimer ((void __cdecl (*)(void))0x004565D0)
#define UT_Microseconds ((double __cdecl (*)(void))0x00456630)
#define UT_CenterWindow ((BOOL __cdecl (*)(HWND hWnd))0x00456680)
#define UT_FindArg ((LPTSTR __cdecl (*)(LPCTSTR str))0x004566F0)
#define UT_MessageBox ((int32_t __cdecl (*)(LPCTSTR lpText, HWND hWnd))0x00456720)
#define UT_ErrorBox ((int32_t __cdecl (*)(UINT uID, HWND hWnd))0x00456740)
#define GuidBinaryToString ((LPCTSTR __cdecl (*)(GUID *guid))0x00456790)
#define GuidStringToBinary ((bool __cdecl (*)(LPCTSTR lpString, GUID *guid))0x004567F0)
#define OpenRegistryKey ((BOOL __cdecl (*)(LPCTSTR lpSubKey))0x004568A0)
#define IsNewRegistryKeyCreated ((bool __cdecl (*)(void))0x004568D0)
#define CloseRegistryKey ((LONG __cdecl (*)(void))0x004568E0)
#define SetRegistryDwordValue ((LONG __cdecl (*)(LPCTSTR lpValueName, DWORD value))0x004568F0)
#define SetRegistryBoolValue ((LONG __cdecl (*)(LPCTSTR lpValueName, bool value))0x00456910)
#define SetRegistryFloatValue ((LONG __cdecl (*)(LPCTSTR lpValueName, double value))0x00456940)
#define SetRegistryBinaryValue ((LONG __cdecl (*)(LPCTSTR lpValueName, LPBYTE value, DWORD valueSize))0x00456980)
#define SetRegistryStringValue ((LONG __cdecl (*)(LPCTSTR lpValueName, LPCTSTR value, int32_t length))0x004569C0)
#define DeleteRegistryValue ((LONG __cdecl (*)(LPCTSTR lpValueName))0x00456A10)
#define GetRegistryDwordValue ((bool __cdecl (*)(LPCTSTR lpValueName, DWORD *pValue, DWORD defaultValue))0x00456A30)
#define GetRegistryBoolValue ((bool __cdecl (*)(LPCTSTR lpValueName, bool *pValue, bool defaultValue))0x00456A90)
#define GetRegistryFloatValue ((bool __cdecl (*)(LPCTSTR lpValueName, double *value, double defaultValue))0x00456B10)
#define GetRegistryBinaryValue ((bool __cdecl (*)(LPCTSTR lpValueName, LPBYTE value, DWORD valueSize, LPBYTE defaultValue))0x00456B70)
#define GetRegistryStringValue ((bool __cdecl (*)(LPCTSTR lpValueName, LPTSTR value, DWORD maxSize, LPCTSTR defaultValue))0x00456BF0)
#define GetRegistryGuidValue ((bool __cdecl (*)(LPCTSTR lpValueName, GUID *value, GUID *defaultValue))0x00456C90)
#define SE_ReleaseBitmapResource ((void __thiscall (*)(BITMAP_RESOURCE *bmpRsrc))0x00456D30)
#define SE_LoadBitmapResource ((void __thiscall (*)(BITMAP_RESOURCE *bmpRsrc, LPCTSTR lpName))0x00456D70)
#define SE_DrawBitmap ((void __thiscall (*)(BITMAP_RESOURCE *bmpRsrc, HDC hdc, int32_t x, int32_t y))0x00456E40)
#define SE_UpdateBitmapPalette ((void __thiscall (*)(BITMAP_RESOURCE *bmpRsrc, HWND hWnd, HWND hSender))0x00456EB0)
#define SE_ChangeBitmapPalette ((void __thiscall (*)(BITMAP_RESOURCE *bmpRsrc, HWND hWnd))0x00456ED0)
#define SE_RegisterSetupWindowClass ((bool __cdecl (*)(void))0x00456F30)
#define SE_SetupWindowProc ((LRESULT __stdcall (*)(HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam))0x00456FA0)
#define SE_PassMessageToImage ((void __cdecl (*)(HWND hWnd, UINT uMsg, WPARAM wParam))0x004571E0)
#define UT_MemBlt ((void __cdecl (*)(BYTE *dstBuf, DWORD dstX, DWORD dstY, DWORD width, DWORD height, DWORD dstPitch, BYTE *srcBuf, DWORD srcX, DWORD srcY, DWORD srcPitch))0x00457210)
#define phd_PushMatrix ((void __cdecl (*)(void))0x00457280)
#define phd_PushUnitMatrix ((void __cdecl (*)(void))0x0045729E)
#define flatA ((void __fastcall (*)(int32_t y0, int32_t y1, BYTE colorIdx))0x004572D4)
#define transA ((void __fastcall (*)(int32_t y0, int32_t y1, BYTE depthQ))0x00457335)
#define gourA ((void __fastcall (*)(int32_t y0, int32_t y1, BYTE colorIdx))0x0045746F)
#define gtmapA ((void __fastcall (*)(int32_t y0, int32_t y1, BYTE *texPage))0x004575CF)
#define wgtmapA ((void __fastcall (*)(int32_t y0, int32_t y1, BYTE *texPage))0x004578CC)
// clang-format on
